{"pageProps":{"metadata":{"title":"VMware vSphere Builder | Integrations"},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"568a9dbc-01e4-4277-847f-412aebfb97f7","slug":"vsphere","name":"VMware vSphere","description":"The vSphere plugin is able to create vSphere virtual machines for use with any VMware product.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"official","repo_url":"https://github.com/hashicorp/packer-plugin-vsphere","subdirectory":"/.web-docs","created_at":"2023-06-15T19:03:11.209Z","updated_at":"2023-08-08T17:01:21.911Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["1.4.2","1.4.1","1.4.0","1.3.0","1.2.7","1.2.6","1.2.5","1.2.4","1.2.3","1.2.2","1.2.1","1.2.0"],"components":[{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"},{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors"},{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors"},{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"},{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"}],"flags":[{"id":"3709e036-b45f-4be8-9043-f7c8cc2af00f","slug":"hcp-ready","name":"HCP Ready","description":"This integration has been tested to work with HashiCorp Cloud Platform (HCP)","created_at":"2022-11-09T22:56:30.673Z","updated_at":"2022-11-09T22:56:30.673Z"}],"integration_type":null},"activeRelease":{"id":"1ee34d8e-f6a0-4142-80c4-96b24f19da59","integration_id":"568a9dbc-01e4-4277-847f-412aebfb97f7","version":"1.4.2","readme":"<!-- markdownlint-disable first-line-h1 no-inline-html -->\n\nThe vSphere plugin is able to create vSphere virtual machines for use with VMware products.\n\nTo achieve this, the plugin comes with three builders, and two post-processors to build the virtual\nmachine depending on the strategy you want to use.\n\nThe Packer Plugin for VMware vSphere is a multi-component plugin can be used with HashiCorp Packer\nto create virtual machine images for VMware vSphere.\n\nThe plugin includes three builders which are able to create images, depending on your desired\nstrategy:\n\n### Installation\n\nTo install this plugin add this code into your Packer configuration and run\n[packer init](/packer/docs/commands/init)\n\n```hcl\npacker {\n  required_plugins {\n    vsphere = {\n      version = \"~> 1\"\n      source  = \"github.com/hashicorp/vsphere\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\npacker plugins install github.com/hashicorp/vsphere\n```\n\n### Components\n\n#### Builders\n\n- [vsphere-iso](/packer/integrations/hashicorp/vsphere/latest/components/builder/vsphere-iso) - This\n  builder starts from an ISO file and uses the vSphere API to build a virtual machine image on\n  an ESXi host.\n\n- [vsphere-clone](/packer/integrations/hashicorp/vsphere/latest/components/builder/vsphere-clone) -\n  This builder clones a virtual machine from an existing template using the uses the vSphere API and\n  then modifies and saves it as a new template.\n\n- [vsphere-supervisor](/packer/integrations/hashicorp/vsphere/latest/components/builder/vsphere-supervisor) -\n  This builder deploys and publishes new virtual machine to a vSphere Supervisor cluster using VM\n  Service.\n\n#### Post-Processors\n\n- [vsphere](/packer/integrations/hashicorp/vsphere/latest/components/post-processor/vsphere) -\n  This post-processor uploads an artifact to a vSphere endpoint. The artifact must be a VMX, OVA,\n  or OVF file.\n\n- [vsphere-template](/packer/integrations/hashicorp/vsphere/latest/components/post-processor/vsphere-template) - This post-processor uses an artifact from the `vmware-iso` builder with an ESXi host or an\n    artifact from the [vSphere](/packer/plugins/post-processors/vsphere/vsphere) post-processor. It\n    then marks the virtual machine as a template and moves it to your specified path.\n\n### Differences from the Packer Plugin for VMware\n\nWhile both this plugin and the [`packer-plugin-vmware`](packer/integrations/hashicorp/vmware) are\ndesigned to create virtual machine images, there are some key differences:\n\n- **Platforms**: This plugin is specifically developed to utilize the VMware vSphere API,\n  facilitating the creation of virtual machine images by integrating with VMware vCenter Server and\n  the VMware vSphere Hypervisor. On the other hand, `packer-plugin-vmware` supports a variety of\n  platforms including VMware vSphere Hypervisor and desktop virtualization products such as VMware\n  Fusion, VMware Workstation, and VMware Player, though it does not utilize the vSphere API for its\n  operations.\n\n- **Focus**: This plugin is purpose-built with a focus on VMware vSphere, offering capabilities such\n  as creating virtual machine images, cloning and modifying base virtual machine images, and\n  exporting artifacts in specified locations and formats. In contrast, `packer-plugin-vmware`\n  includes builders that operate on both VMware vSphere Hypervisor and the aforementioned desktop\n  virtualization products, providing a different set of functionalities, including support for\n  Vagrant.\n\nPlease refer to the documentation for each plugin to understand the specific capabilities and\nconfiguration options.\n","created_at":"2024-10-17T21:00:15.559Z","updated_at":"2024-10-17T21:00:15.559Z","components":[{"id":"78eaf204-d616-4543-a1d8-5986af78768c","integration_release_id":"1ee34d8e-f6a0-4142-80c4-96b24f19da59","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `vsphere-iso`\n\nArtifact BuilderId: `jetbrains.vsphere`\n\nThis builder starts from a guest operating system ISO file and builds a virtual machine image on a\nvSphere cluster or an ESXi host using the vSphere API.\n\n-> **Note:** This builder is developed to maintain compatibility with VMware vSphere versions until\ntheir respective End of General Support dates. For detailed information, refer to the\n[Broadcom Product Lifecycle](https://support.broadcom.com/group/ecx/productlifecycle).\n\n## Examples\n\n- Basic examples are available in the [examples](https://github.com/hashicorp/packer-plugin-vsphere/tree/main/examples/)\n  directory of the GitHub repository.\n\n- Additional examples are available in the [`vmware-samples/packer-examples-for-vsphere`](https://github.com/vmware-samples/packer-examples-for-vsphere)\n  GitHub repository maintained by VMware by Broadcom.\n\n## Configuration Reference\n\n### HTTP Configuration\n\n<!-- Code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; DO NOT EDIT MANUALLY -->\n\nPacker will create an http server serving `http_directory` when it is set, a\nrandom free port will be selected and the architecture of the directory\nreferenced will be available in your builder.\n\nExample usage from a builder:\n\n```\nwget http://{{ .HTTPIP }}:{{ .HTTPPort }}/foo/bar/preseed.cfg\n```\n\n<!-- End of code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; DO NOT EDIT MANUALLY -->\n\n- `http_directory` (string) - Path to a directory to serve using an HTTP server. The files in this\n  directory will be available over HTTP that will be requestable from the\n  virtual machine. This is useful for hosting kickstart files and so on.\n  By default this is an empty string, which means no HTTP server will be\n  started. The address and port of the HTTP server will be available as\n  variables in `boot_command`. This is covered in more detail below.\n\n- `http_content` (map[string]string) - Key/Values to serve using an HTTP server. `http_content` works like and\n  conflicts with `http_directory`. The keys represent the paths and the\n  values contents, the keys must start with a slash, ex: `/path/to/file`.\n  `http_content` is useful for hosting kickstart files and so on. By\n  default this is empty, which means no HTTP server will be started. The\n  address and port of the HTTP server will be available as variables in\n  `boot_command`. This is covered in more detail below.\n  Example:\n  ```hcl\n    http_content = {\n      \"/a/b\"     = file(\"http/b\")\n      \"/foo/bar\" = templatefile(\"${path.root}/preseed.cfg\", { packages = [\"nginx\"] })\n    }\n  ```\n\n- `http_port_min` (int) - These are the minimum and maximum port to use for the HTTP server\n  started to serve the `http_directory`. Because Packer often runs in\n  parallel, Packer will choose a randomly available port in this range to\n  run the HTTP server. If you want to force the HTTP server to be on one\n  port, make this minimum and maximum port the same. By default the values\n  are `8000` and `9000`, respectively.\n\n- `http_port_max` (int) - HTTP Port Max\n\n- `http_bind_address` (string) - This is the bind address for the HTTP server. Defaults to 0.0.0.0 so that\n  it will work with any network interface.\n\n<!-- End of code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; -->\n\n\n- `http_interface` (string) - The network interface (for example, `en0`, `ens192`, etc.) that the\n  HTTP server will use to serve the `http_directory`. The plugin will identify the IP address\n  associated with this network interface and bind to it.\n\n<!-- Code generated from the comments of the BootConfig struct in builder/vsphere/common/step_boot_command.go; DO NOT EDIT MANUALLY -->\n\n- `http_ip` (string) - The IP address to use for the HTTP server to serve the `http_directory`.\n\n<!-- End of code generated from the comments of the BootConfig struct in builder/vsphere/common/step_boot_command.go; -->\n\n\n~> **Notes:**\n  - The options `http_bind_address` and `http_interface` are mutually exclusive.\n  - Both `http_bind_address` and `http_interface` have higher priority than `http_ip`.\n  - The `http_bind_address` is matched against the IP addresses of the host's network interfaces. If\n    no match is found, the plugin will terminate.\n  - Similarly, `http_interface` is compared with the host's network interfaces. If there's no\n    corresponding network interface, the plugin will also terminate.\n  - If neither `http_bind_address`, `http_interface`, and `http_ip` are provided, the plugin will\n    automatically find and use the IP address of the first non-loopback interface for `http_ip`.\n\n### Connection Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the ConnectConfig struct in builder/vsphere/common/step_connect.go; DO NOT EDIT MANUALLY -->\n\n- `vcenter_server` (string) - The fully qualified domain name or IP address of the vCenter Server\n  instance.\n\n- `username` (string) - The username to authenticate with the vCenter Server instance.\n\n- `password` (string) - The password to authenticate with the vCenter Server instance.\n\n- `insecure_connection` (bool) - Do not validate the certificate of the vCenter Server instance.\n  Defaults to `false`.\n  \n  -> **Note:** This option is beneficial in scenarios where the certificate\n  is self-signed or does not meet standard validation criteria.\n\n- `datacenter` (string) - The name of the datacenter object in the vSphere inventory.\n  \n  -> **Note:** Required if more than one datacenter object exists in the\n  vSphere inventory.\n\n<!-- End of code generated from the comments of the ConnectConfig struct in builder/vsphere/common/step_connect.go; -->\n\n\n### Location Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the LocationConfig struct in builder/vsphere/common/config_location.go; DO NOT EDIT MANUALLY -->\n\n- `vm_name` (string) - The name of the virtual machine.\n\n- `folder` (string) - The virtual machine folder where the virtual machine is created.\n\n- `cluster` (string) - The cluster where the virtual machine is created.\n  Refer to the [Working With Clusters And Hosts](#working-with-clusters-and-hosts)\n  section for more details.\n\n- `host` (string) - The ESXi host where the virtual machine is created. A full path must be\n  specified if the ESXi host is in a folder. For example `folder/host`.\n  Refer to the [Working With Clusters And Hosts](#working-with-clusters-and-hosts)\n  section for more details.\n\n- `resource_pool` (string) - The resource pool where the virtual machine is created.\n  If this is not specified, the root resource pool associated with the\n  `host` or `cluster` is used.\n  \n  ~> **Note:**  The full path to the resource pool must be provided.\n  For example, a simple resource pool path might resemble `rp-packer` and\n  a nested path might resemble 'rp-packer/rp-linux-images'.\n\n- `datastore` (string) - The datastore where the virtual machine is created.\n  Required if `host` is a cluster, or if `host` has multiple datastores.\n\n- `set_host_for_datastore_uploads` (bool) - The ESXI host used for uploading files to the datastore.\n  Defaults to `false`.\n\n<!-- End of code generated from the comments of the LocationConfig struct in builder/vsphere/common/config_location.go; -->\n\n\n<!-- Code generated from the comments of the Config struct in builder/vsphere/iso/config.go; DO NOT EDIT MANUALLY -->\n\n- `create_snapshot` (bool) - Create a snapshot of the virtual machine to use as a base for linked clones.\n  Defaults to `false`.\n\n- `snapshot_name` (string) - The name of the snapshot when `create_snapshot` is `true`.\n  Defaults to `Created By Packer`.\n\n- `convert_to_template` (bool) - Convert the virtual machine to a template after the build is complete.\n  Defaults to `false`.\n  If set to `true`, the virtual machine can not be imported into a content library.\n\n- `export` (\\*common.ExportConfig) - The configuration for exporting the virtual machine to an OVF.\n  The virtual machine is not exported if [export configuration](#export-configuration) is not specified.\n\n- `content_library_destination` (\\*common.ContentLibraryDestinationConfig) - Import the virtual machine as a VM template or OVF template to a content library.\n  The template will not be imported if no [content library import configuration](#content-library-import-configuration) is specified.\n  If set, `convert_to_template` must be set to `false`.\n\n- `local_cache_overwrite` (bool) - Overwrite files in the local cache if they already exist.\n  Defaults to `false`.\n\n- `remote_cache_cleanup` (bool) - Cleanup items added to the remote cache after the build is complete.\n  Defaults to `false`.\n  \n  -> **Note:** If the local cache overwrite flag is set to `true`, `RemoteCacheOverwrite` will\n  implicitly be set to `true`. This is to ensure consistency between the local and remote\n  cache.\n\n- `remote_cache_overwrite` (bool) - Overwrite files in the remote cache if they already exist.\n  Defaults to `false`.\n\n- `remote_cache_datastore` (string) - The remote cache datastore to use for the build.\n  If not set, the datastore of the virtual machine is used.\n\n- `remote_cache_path` (string) - The directory path on the remote cache datastore to use for the build.\n  If not set, the default path is `packer_cache/`.\n\n<!-- End of code generated from the comments of the Config struct in builder/vsphere/iso/config.go; -->\n\n\n### Hardware Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the HardwareConfig struct in builder/vsphere/common/step_hardware.go; DO NOT EDIT MANUALLY -->\n\n- `CPUs` (int32) - The number of virtual CPUs cores for the virtual machine.\n\n- `cpu_cores` (int32) - The number of virtual CPU cores per socket for the virtual machine.\n\n- `CPU_reservation` (int64) - The CPU reservation in MHz.\n\n- `CPU_limit` (int64) - The upper limit of available CPU resources in MHz.\n\n- `CPU_hot_plug` (bool) - Enable CPU hot plug setting for virtual machine. Defaults to `false`\n\n- `RAM` (int64) - The amount of memory for the virtual machine in MB.\n\n- `RAM_reservation` (int64) - The guaranteed minimum allocation of memory for the virtual machine in MB.\n\n- `RAM_reserve_all` (bool) - Reserve all allocated memory. Defaults to `false`.\n  \n  -> **Note:** May not be used together with `RAM_reservation`.\n\n- `RAM_hot_plug` (bool) - Enable memory hot add setting for virtual machine. Defaults to `false`.\n\n- `video_ram` (int64) - The amount of video memory in KB. Defaults to 4096 KB.\n  \n  -> **Note:** Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-789C3913-1053-4850-A0F0-E29C3D32B6DA.html)\n  for supported maximums.\n\n- `displays` (int32) - The number of video displays. Defaults to `1`.\n  \n  `-> **Note:** Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-789C3913-1053-4850-A0F0-E29C3D32B6DA.html)\n  for supported maximums.\n\n- `pci_passthrough_allowed_device` ([]PCIPassthroughAllowedDevice) - Configure Dynamic DirectPath I/O [PCI Passthrough](#pci-passthrough-configuration) for\n  virtual machine. Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-5B3CAB26-5D06-4A99-92A0-3A04C69CE64B.html)\n\n- `vgpu_profile` (string) - vGPU profile for accelerated graphics. Refer to the [NVIDIA GRID vGPU documentation](https://docs.nvidia.com/grid/latest/grid-vgpu-user-guide/index.html#configure-vmware-vsphere-vm-with-vgpu)\n  for examples of profile names. Defaults to none.\n\n- `NestedHV` (bool) - Enable nested hardware virtualization for the virtual machine.\n  Defaults to `false`.\n\n- `firmware` (string) - The firmware for the virtual machine.\n  \n  The available options for this setting are: 'bios', 'efi', and\n  'efi-secure'.\n  \n  -> **Note:** Use `efi-secure` for UEFI Secure Boot.\n\n- `force_bios_setup` (bool) - Force entry into the BIOS setup screen during boot. Defaults to `false`.\n\n- `vTPM` (bool) - Enable virtual trusted platform module (TPM) device for the virtual\n  machine. Defaults to `false`.\n\n- `precision_clock` (string) - The virtual precision clock device for the virtual machine.\n  Defaults to `none`.\n  \n  The available options for this setting are: `none`, `ntp`, and `ptp`.\n\n<!-- End of code generated from the comments of the HardwareConfig struct in builder/vsphere/common/step_hardware.go; -->\n\n\n### Create Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the CreateConfig struct in builder/vsphere/iso/step_create.go; DO NOT EDIT MANUALLY -->\n\n- `vm_version` (uint) - Specifies the virtual machine hardware version. Defaults to the most\n  current virtual machine hardware version supported by the ESXi host.\n  Refer to [KB 315655](https://knowledge.broadcom.com/external/article?articleNumber=315655)\n  for more information on supported virtual hardware versions.\n\n- `guest_os_type` (string) - The guest operating system identifier for the virtual machine.\n  Defaults to `otherGuest`.\n  \n  To get a list of supported guest operating system identifiers for your\n  ESXi host, run the following PowerShell command using `VMware.PowerCLI`:\n  \n  ```powershell\n  Connect-VIServer -Server \"vcenter.example.com\" -User \"administrator@vsphere.local\" -Password \"password\"\n  $esxiHost = Get-VMHost -Name \"esxi-01.example.com\"\n  $environmentBrowser = Get-View -Id $esxiHost.ExtensionData.Parent.ExtensionData.ConfigManager.EnvironmentBrowser\n  $vmxVersion = ($environmentBrowser.QueryConfigOptionDescriptor() | Where-Object DefaultConfigOption).Key\n  $osDescriptor = $environmentBrowser.QueryConfigOption($vmxVersion, $null).GuestOSDescriptor\n  $osDescriptor | Select-Object Id, Fullname\n  ```\n\n- `network_adapters` ([]NIC) - The network adapters for the virtual machine.\n  \n  -> **Note:** If no network adapter is defined, all network-related\n  operations are skipped.\n\n- `usb_controller` ([]string) - The USB controllers for the virtual machine.\n  \n  The available options for this setting are: `usb` and `xhci`.\n  \n  - `usb`: USB 2.0\n  - `xhci`: USB 3.0\n  \n  -> **Note:** A maximum of one of each controller type can be defined.\n\n- `notes` (string) - The annotations for the virtual machine.\n\n- `destroy` (bool) - Destroy the virtual machine after the build completes.\n  Defaults to `false`.\n\n<!-- End of code generated from the comments of the CreateConfig struct in builder/vsphere/iso/step_create.go; -->\n\n\n### ISO Configuration\n\n<!-- Code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; DO NOT EDIT MANUALLY -->\n\nBy default, Packer will symlink, download or copy image files to the Packer\ncache into a \"`hash($iso_url+$iso_checksum).$iso_target_extension`\" file.\nPacker uses [hashicorp/go-getter](https://github.com/hashicorp/go-getter) in\nfile mode in order to perform a download.\n\ngo-getter supports the following protocols:\n\n* Local files\n* Git\n* Mercurial\n* HTTP\n* Amazon S3\n\nExamples:\ngo-getter can guess the checksum type based on `iso_checksum` length, and it is\nalso possible to specify the checksum type.\n\nIn JSON:\n\n```json\n\n\t\"iso_checksum\": \"946a6077af6f5f95a51f82fdc44051c7aa19f9cfc5f737954845a6050543d7c2\",\n\t\"iso_url\": \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```json\n\n\t\"iso_checksum\": \"file:ubuntu.org/..../ubuntu-14.04.1-server-amd64.iso.sum\",\n\t\"iso_url\": \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```json\n\n\t\"iso_checksum\": \"file://./shasums.txt\",\n\t\"iso_url\": \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```json\n\n\t\"iso_checksum\": \"file:./shasums.txt\",\n\t\"iso_url\": \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\nIn HCL2:\n\n```hcl\n\n\tiso_checksum = \"946a6077af6f5f95a51f82fdc44051c7aa19f9cfc5f737954845a6050543d7c2\"\n\tiso_url = \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```hcl\n\n\tiso_checksum = \"file:ubuntu.org/..../ubuntu-14.04.1-server-amd64.iso.sum\"\n\tiso_url = \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```hcl\n\n\tiso_checksum = \"file://./shasums.txt\"\n\tiso_url = \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```hcl\n\n\tiso_checksum = \"file:./shasums.txt\",\n\tiso_url = \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n<!-- End of code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; -->\n\n\n**Required**:\n\n<!-- Code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; DO NOT EDIT MANUALLY -->\n\n- `iso_checksum` (string) - The checksum for the ISO file or virtual hard drive file. The type of\n  the checksum is specified within the checksum field as a prefix, ex:\n  \"md5:{$checksum}\". The type of the checksum can also be omitted and\n  Packer will try to infer it based on string length. Valid values are\n  \"none\", \"{$checksum}\", \"md5:{$checksum}\", \"sha1:{$checksum}\",\n  \"sha256:{$checksum}\", \"sha512:{$checksum}\" or \"file:{$path}\". Here is a\n  list of valid checksum values:\n   * md5:090992ba9fd140077b0661cb75f7ce13\n   * 090992ba9fd140077b0661cb75f7ce13\n   * sha1:ebfb681885ddf1234c18094a45bbeafd91467911\n   * ebfb681885ddf1234c18094a45bbeafd91467911\n   * sha256:ed363350696a726b7932db864dda019bd2017365c9e299627830f06954643f93\n   * ed363350696a726b7932db864dda019bd2017365c9e299627830f06954643f93\n   * file:http://releases.ubuntu.com/20.04/SHA256SUMS\n   * file:file://./local/path/file.sum\n   * file:./local/path/file.sum\n   * none\n  Although the checksum will not be verified when it is set to \"none\",\n  this is not recommended since these files can be very large and\n  corruption does happen from time to time.\n\n- `iso_url` (string) - A URL to the ISO containing the installation image or virtual hard drive\n  (VHD or VHDX) file to clone.\n\n<!-- End of code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; DO NOT EDIT MANUALLY -->\n\n- `iso_urls` ([]string) - Multiple URLs for the ISO to download. Packer will try these in order.\n  If anything goes wrong attempting to download or while downloading a\n  single URL, it will move on to the next. All URLs must point to the same\n  file (same checksum). By default this is empty and `iso_url` is used.\n  Only one of `iso_url` or `iso_urls` can be specified.\n\n- `iso_target_path` (string) - The path where the iso should be saved after download. By default will\n  go in the packer cache, with a hash of the original filename and\n  checksum as its name.\n\n- `iso_target_extension` (string) - The extension of the iso file after download. This defaults to `iso`.\n\n<!-- End of code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; -->\n\n\n### CD-ROM Configuration\n\nFor each ISO defined in the CD-ROM configuration, a CD-ROM device is added.\n\nIf the `iso_url` is defined in addition to the `iso_paths`, the `iso_url` is added to the virtual\nmachine first. This keeps the `iso_url` first in the boot order by default, allowing the boot ISO to\nbe defined by the `iso_url` and the VMware Tools ISO added from ESXi host.\n\nHCL Example:\n\n```hcl\n  iso_urls = [\n    \"windows-server.iso\",\n    \"https://example.com/isos/windows-server.iso\"\n  ]\n\n  iso_paths = [\n    \"[] /usr/lib/vmware/isoimages/windows.iso\"\n  ]\n```\n\nJSON Example:\n\n```json\n  \"iso_urls\": [\n    \"windows-server.iso\",\n    \"https://example.com/isos/windows-server.iso\"\n  ],\n  \"iso_paths\": [\n      \"[] /usr/lib/vmware/isoimages/windows.iso\"\n  ],\n```\n\n<!-- Code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; DO NOT EDIT MANUALLY -->\n\nAn iso (CD) containing custom files can be made available for your build.\n\nBy default, no extra CD will be attached. All files listed in this setting\nget placed into the root directory of the CD and the CD is attached as the\nsecond CD device.\n\nThis config exists to work around modern operating systems that have no\nway to mount floppy disks, which was our previous go-to for adding files at\nboot time.\n\n<!-- End of code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; DO NOT EDIT MANUALLY -->\n\n- `cd_files` ([]string) - A list of files to place onto a CD that is attached when the VM is\n  booted. This can include either files or directories; any directories\n  will be copied onto the CD recursively, preserving directory structure\n  hierarchy. Symlinks will have the link's target copied into the directory\n  tree on the CD where the symlink was. File globbing is allowed.\n  \n  Usage example (JSON):\n  \n  ```json\n  \"cd_files\": [\"./somedirectory/meta-data\", \"./somedirectory/user-data\"],\n  \"cd_label\": \"cidata\",\n  ```\n  \n  Usage example (HCL):\n  \n  ```hcl\n  cd_files = [\"./somedirectory/meta-data\", \"./somedirectory/user-data\"]\n  cd_label = \"cidata\"\n  ```\n  \n  The above will create a CD with two files, user-data and meta-data in the\n  CD root. This specific example is how you would create a CD that can be\n  used for an Ubuntu 20.04 autoinstall.\n  \n  Since globbing is also supported,\n  \n  ```hcl\n  cd_files = [\"./somedirectory/*\"]\n  cd_label = \"cidata\"\n  ```\n  \n  Would also be an acceptable way to define the above cd. The difference\n  between providing the directory with or without the glob is whether the\n  directory itself or its contents will be at the CD root.\n  \n  Use of this option assumes that you have a command line tool installed\n  that can handle the iso creation. Packer will use one of the following\n  tools:\n  \n    * xorriso\n    * mkisofs\n    * hdiutil (normally found in macOS)\n    * oscdimg (normally found in Windows as part of the Windows ADK)\n\n- `cd_content` (map[string]string) - Key/Values to add to the CD. The keys represent the paths, and the values\n  contents. It can be used alongside `cd_files`, which is useful to add large\n  files without loading them into memory. If any paths are specified by both,\n  the contents in `cd_content` will take precedence.\n  \n  Usage example (HCL):\n  \n  ```hcl\n  cd_files = [\"vendor-data\"]\n  cd_content = {\n    \"meta-data\" = jsonencode(local.instance_data)\n    \"user-data\" = templatefile(\"user-data\", { packages = [\"nginx\"] })\n  }\n  cd_label = \"cidata\"\n  ```\n\n- `cd_label` (string) - CD Label\n\n<!-- End of code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; -->\n\n\n<!-- Code generated from the comments of the CDRomConfig struct in builder/vsphere/common/step_add_cdrom.go; DO NOT EDIT MANUALLY -->\n\n- `cdrom_type` (string) - The type of controller to use for the CD-ROM device. Defaults to `ide`.\n  \n  The available options for this setting are: `ide` and `sata`.\n\n- `iso_paths` ([]string) - A list of paths to ISO files in either a datastore or a content library\n  that will be attached to the virtual machine.\n  \n  HCL Example:\n  \n  ```hcl\n  iso_paths = [\n    \"[nfs] iso/ubuntu-server-amd64.iso\",\n    \"Example Content Library/ubuntu-server-amd64/ubuntu-server-amd64.iso\"\n  ]\n  ```\n  \n  JSON Example:\n  \n  ```json\n  \"iso_paths\": [\n    \"[nfs] iso/ubuntu-server-amd64.iso\",\n    \"Example Content Library/ubuntu-server-amd64/ubuntu-server-amd64.iso\"\n  ]\n  ```\n  \n  Two ISOs are referenced:\n  \n  1. An ISO in the \"_iso_\" folder of the \"_nfs_\" datastore with the file\n    name of \"_ubuntu-server-amd64.iso_\". \"_ubuntu-server-amd64.iso_\".\n  2. An ISO in the \"_Example Content Library_\" content library with the\n    item name of \"_ubuntu-server-amd64_\".\n  \n  -> **Note:** All files in a content library have an associated item name.\n  To determine the file name, view the datastore backing the content\n  library or use the `govc` vSphere CLI.\n\n<!-- End of code generated from the comments of the CDRomConfig struct in builder/vsphere/common/step_add_cdrom.go; -->\n\n\n<!-- Code generated from the comments of the RemoveCDRomConfig struct in builder/vsphere/common/step_remove_cdrom.go; DO NOT EDIT MANUALLY -->\n\n- `remove_cdrom` (bool) - Remove all CD-ROM devices from the virtual machine when the build is\n  complete. Defaults to `false`.\n\n<!-- End of code generated from the comments of the RemoveCDRomConfig struct in builder/vsphere/common/step_remove_cdrom.go; -->\n\n\n<!-- Code generated from the comments of the ReattachCDRomConfig struct in builder/vsphere/common/step_reattach_cdrom.go; DO NOT EDIT MANUALLY -->\n\n- `reattach_cdroms` (int) - The number of CD-ROM devices to reattach to the final build artifact.\n  Range: 0 - 4. Defaults to 0.\n  \n  -> **Note:** If set to 0, the step is skipped. When set to a value in the\n  range, `remove_cdrom` is ignored and the CD-ROM devices are kept without\n  any attached media.\n\n<!-- End of code generated from the comments of the ReattachCDRomConfig struct in builder/vsphere/common/step_reattach_cdrom.go; -->\n\n\n### Floppy Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the FloppyConfig struct in builder/vsphere/common/step_add_floppy.go; DO NOT EDIT MANUALLY -->\n\n- `floppy_img_path` (string) - Datastore path to a floppy image that will be mounted to the virtual\n  machine. Example: `[datastore] iso/foo.flp`.\n\n- `floppy_files` ([]string) - A list of local files to be mounted to the virtual machine's floppy\n  drive.\n\n- `floppy_dirs` ([]string) - A list of directories to copy files from.\n\n- `floppy_content` (map[string]string) - Key/Values to add to the floppy disk. The keys represent the paths, and\n  the values contents. It can be used alongside `floppy_files` or\n  `floppy_dirs`, which is useful to add large files without loading them\n  into memory. If any paths are specified by both, the contents in\n  `floppy_content` will take precedence.\n  \n  HCL Example:\n  \n  ```hcl\n  floppy_content = {\n    \"meta-data\" = jsonencode(local.instance_data)\n    \"user-data\" = templatefile(\"user-data\", { packages = [\"nginx\"] })\n  }\n  ```\n\n- `floppy_label` (string) - The label to use for the floppy disk that is attached when the virtual\n  machine is booted. This is most useful for cloud-init, Kickstart or other\n  early initialization tools, which can benefit from labelled floppy disks.\n  By default, the floppy label will be 'packer'.\n\n<!-- End of code generated from the comments of the FloppyConfig struct in builder/vsphere/common/step_add_floppy.go; -->\n\n\n### Network Adapter Configuration\n\n<!-- Code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; DO NOT EDIT MANUALLY -->\n\nIf no adapter is defined, network tasks (communicators, most provisioners)\nwill not work, so it's advised to define one.\n\nExample configuration with two network adapters:\n\nHCL Example:\n\n```hcl\n\n\tnetwork_adapters {\n\t    network = \"VM Network\"\n\t    network_card = \"vmxnet3\"\n\t}\n\tnetwork_adapters {\n\t    network = \"OtherNetwork\"\n\t    network_card = \"vmxnet3\"\n\t}\n\n```\n\nJSON Example:\n\n```json\n\n\t\"network_adapters\": [\n\t  {\n\t    \"network\": \"VM Network\",\n\t    \"network_card\": \"vmxnet3\"\n\t  },\n\t  {\n\t    \"network\": \"OtherNetwork\",\n\t    \"network_card\": \"vmxnet3\"\n\t  }\n\t],\n\n```\n\n<!-- End of code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; -->\n\n\n**Required**:\n\n<!-- Code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; DO NOT EDIT MANUALLY -->\n\n- `network_card` (string) - The virtual machine network card type. For example `vmxnet3`.\n\n<!-- End of code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; DO NOT EDIT MANUALLY -->\n\n- `network` (string) - The network to which the virtual machine will connect.\n  \n  For example:\n  \n  - Name: `<NetworkName>`\n  - Inventory Path: `/<DatacenterName>/<FolderName>/<NetworkName>`\n  - Managed Object ID (Port Group): `Network:network-<xxxxx>`\n  - Managed Object ID (Distributed Port Group): `DistributedVirtualPortgroup::dvportgroup-<xxxxx>`\n  - Logical Switch UUID: `<uuid>`\n  - Segment ID: `/infra/segments/<SegmentID>`\n  \n  ~> **Note:** If more than one network resolves to the same name, either\n  the inventory path to network or an ID must be provided.\n  \n  ~> **Note:** If no network is specified, provide `host` to allow the\n  plugin to search for an available network.\n\n- `mac_address` (string) - The network card MAC address. For example `00:50:56:00:00:00`.\n\n- `passthrough` (\\*bool) - Enable DirectPath I/O passthrough for the network device.\n  Defaults to `false`.\n\n<!-- End of code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; -->\n\n\n<!-- Code generated from the comments of the RemoveNetworkConfig struct in builder/vsphere/common/step_remove_network.go; DO NOT EDIT MANUALLY -->\n\n- `remove_network_adapter` (bool) - Remove all network adapters from template. Defaults to `false`.\n\n<!-- End of code generated from the comments of the RemoveNetworkConfig struct in builder/vsphere/common/step_remove_network.go; -->\n\n\n### Storage Configuration\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\nThe following example that will create a 15GB and a 20GB disk on the virtual\nmachine. The second disk will be thin provisioned:\n\nHCL Example:\n\n```hcl\n\n\tstorage {\n\t    disk_size = 15000\n\t}\n\tstorage {\n\t    disk_size = 20000\n\t    disk_thin_provisioned = true\n\t}\n\n```\n\nJSON Example:\n\n```json\n\n\t\"storage\": [\n\t  {\n\t    \"disk_size\": 15000\n\t  },\n\t  {\n\t    \"disk_size\": 20000,\n\t    \"disk_thin_provisioned\": true\n\t  }\n\t],\n\n```\n\nThe following example will use two PVSCSI controllers and two disks on each\ncontroller.\n\nHCL Example:\n\n```hcl\n\n\t disk_controller_type = [\"pvscsi\", \"pvscsi\"]\n\t\tstorage {\n\t\t   disk_size = 15000,\n\t\t   disk_controller_index = 0\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 0\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 1\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 1\n\t\t}\n\n```\n\nJSON Example:\n\n```json\n\n\t\"disk_controller_type\": [\"pvscsi\", \"pvscsi\"],\n\t\"storage\": [\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 0\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 0\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 1\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 1\n\t  }\n\t],\n\n```\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n**Required**:\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_size` (int64) - The size of the disk in MiB.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_thin_provisioned` (bool) - Enable thin provisioning for the disk.\n  Defaults to `false`.\n\n- `disk_eagerly_scrub` (bool) - Enable eager scrubbing for the disk.\n  Defaults to `false`.\n\n- `disk_controller_index` (int) - The assigned disk controller for the disk.\n  Defaults to the first controller, `(0)`.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n<!-- Code generated from the comments of the StorageConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_controller_type` ([]string) - The disk controller type. One of `lsilogic`, `lsilogic-sas`, `pvscsi`,\n  `nvme`, `scsi`, or `sata`. Defaults to `lsilogic`. Use a list to define\n  additional controllers. Refer to [SCSI, SATA, and NVMe Storage Controller\n  Conditions, Limitations, and Compatibility](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-5872D173-A076-42FE-8D0B-9DB0EB0E7362.html)\n  for additional information.\n\n- `storage` ([]DiskConfig) - A collection of one or more disks to be provisioned.\n  Refer to the [Storage Configuration](#storage-configuration) section for additional information.\n\n<!-- End of code generated from the comments of the StorageConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n### Flag Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the FlagConfig struct in builder/vsphere/common/step_add_flag.go; DO NOT EDIT MANUALLY -->\n\n- `vbs_enabled` (bool) - Enable Virtualization Based Security option for virtual machine. Defaults to `false`.\n  Requires `vvtd_enabled` and `NestedHV` to be set to `true`.\n  Requires `firmware` to be set to `efi-secure`.\n\n- `vvtd_enabled` (bool) - Enable IO/MMU option for virtual machine. Defaults to `false`.\n\n<!-- End of code generated from the comments of the FlagConfig struct in builder/vsphere/common/step_add_flag.go; -->\n\n\n### Boot Configuration\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\nThe boot configuration is very important: `boot_command` specifies the keys\nto type when the virtual machine is first booted in order to start the OS\ninstaller. This command is typed after boot_wait, which gives the virtual\nmachine some time to actually load.\n\nThe boot_command is an array of strings. The strings are all typed in\nsequence. It is an array only to improve readability within the template.\n\nThere are a set of special keys available. If these are in your boot\ncommand, they will be replaced by the proper key:\n\n-   `<bs>` - Backspace\n\n-   `<del>` - Delete\n\n-   `<enter> <return>` - Simulates an actual \"enter\" or \"return\" keypress.\n\n-   `<esc>` - Simulates pressing the escape key.\n\n-   `<tab>` - Simulates pressing the tab key.\n\n-   `<f1> - <f12>` - Simulates pressing a function key.\n\n-   `<up> <down> <left> <right>` - Simulates pressing an arrow key.\n\n-   `<spacebar>` - Simulates pressing the spacebar.\n\n-   `<insert>` - Simulates pressing the insert key.\n\n-   `<home> <end>` - Simulates pressing the home and end keys.\n\n  - `<pageUp> <pageDown>` - Simulates pressing the page up and page down\n    keys.\n\n-   `<menu>` - Simulates pressing the Menu key.\n\n-   `<leftAlt> <rightAlt>` - Simulates pressing the alt key.\n\n-   `<leftCtrl> <rightCtrl>` - Simulates pressing the ctrl key.\n\n-   `<leftShift> <rightShift>` - Simulates pressing the shift key.\n\n-   `<leftSuper> <rightSuper>` - Simulates pressing the ⌘ or Windows key.\n\n  - `<wait> <wait5> <wait10>` - Adds a 1, 5 or 10 second pause before\n    sending any additional keys. This is useful if you have to generally\n    wait for the UI to update before typing more.\n\n  - `<waitXX>` - Add an arbitrary pause before sending any additional keys.\n    The format of `XX` is a sequence of positive decimal numbers, each with\n    optional fraction and a unit suffix, such as `300ms`, `1.5h` or `2h45m`.\n    Valid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. For\n    example `<wait10m>` or `<wait1m20s>`.\n\n  - `<XXXOn> <XXXOff>` - Any printable keyboard character, and of these\n    \"special\" expressions, with the exception of the `<wait>` types, can\n    also be toggled on or off. For example, to simulate ctrl+c, use\n    `<leftCtrlOn>c<leftCtrlOff>`. Be sure to release them, otherwise they\n    will be held down until the machine reboots. To hold the `c` key down,\n    you would use `<cOn>`. Likewise, `<cOff>` to release.\n\n  - `{{ .HTTPIP }} {{ .HTTPPort }}` - The IP and port, respectively of an\n    HTTP server that is started serving the directory specified by the\n    `http_directory` configuration parameter. If `http_directory` isn't\n    specified, these will be blank!\n\n-   `{{ .Name }}` - The name of the VM.\n\nExample boot command. This is actually a working boot command used to start an\nCentOS 6.4 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nThe example shown below is a working boot command used to start an Ubuntu\n12.04 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nFor more examples of various boot commands, see the sample projects from our\n[community templates page](https://packer.io/community-tools#templates).\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\nPacker sends each character to the virtual machine with a default delay of 100ms between groups. The\ndelay alleviates possible issues with latency and CPU contention. If you notice missing keys, you\ncan tune this delay by specifying `boot_keygroup_interval` in your template.\n\nHCL Example:\n\n```hcl\nsource \"vsphere-iso\" \"example\" {\n    boot_keygroup_interval = \"500ms\"\n    # ...\n}\n```\n\nJSON Example:\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"vsphere-iso\",\n      \"boot_keygroup_interval\": \"500ms\"\n    }\n  ]\n}\n```\n\n**Optional**:\n\n<!-- Code generated from the comments of the RunConfig struct in builder/vsphere/common/step_run.go; DO NOT EDIT MANUALLY -->\n\n- `boot_order` (string) - The priority of boot devices. Defaults to `disk,cdrom`.\n  \n  The available boot devices are: `floppy`, `cdrom`, `ethernet`, and\n  `disk`.\n  \n  -> **Note:** If not set, the boot order is temporarily set to\n  `disk,cdrom` for the duration of the build and then cleared upon\n  build completion.\n\n<!-- End of code generated from the comments of the RunConfig struct in builder/vsphere/common/step_run.go; -->\n\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\n- `boot_keygroup_interval` (duration string | ex: \"1h5m2s\") - Time to wait after sending a group of key pressses. The value of this\n  should be a duration. Examples are `5s` and `1m30s` which will cause\n  Packer to wait five seconds and one minute 30 seconds, respectively. If\n  this isn't specified, a sensible default value is picked depending on\n  the builder type.\n\n- `boot_wait` (duration string | ex: \"1h5m2s\") - The time to wait after booting the initial virtual machine before typing\n  the `boot_command`. The value of this should be a duration. Examples are\n  `5s` and `1m30s` which will cause Packer to wait five seconds and one\n  minute 30 seconds, respectively. If this isn't specified, the default is\n  `10s` or 10 seconds. To set boot_wait to 0s, use a negative number, such\n  as \"-1s\"\n\n- `boot_command` ([]string) - This is an array of commands to type when the virtual machine is first\n  booted. The goal of these commands should be to type just enough to\n  initialize the operating system installer. Special keys can be typed as\n  well, and are covered in the section below on the boot command. If this\n  is not specified, it is assumed the installer will start itself.\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\n### Wait Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the WaitIpConfig struct in builder/vsphere/common/step_wait_for_ip.go; DO NOT EDIT MANUALLY -->\n\n- `ip_wait_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'.\n  Defaults to 30m (30 minutes). See the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration) documentation\n  for full details.\n\n- `ip_settle_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP to settle down, sometimes VM may\n  report incorrect IP initially, then its recommended to set that\n  parameter to apx. 2 minutes. Examples 45s and 10m. Defaults to\n  5s(5 seconds). Refer to the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration) documentation\n   for full details.\n\n- `ip_wait_address` (\\*string) - Set this to a CIDR address to cause the service to wait for an address that is contained in\n  this network range. Defaults to \"0.0.0.0/0\" for any ipv4 address. Examples include:\n  \n  * empty string (\"\") - remove all filters\n  * `0:0:0:0:0:0:0:0/0` - allow only ipv6 addresses\n  * `192.168.1.0/24` - only allow ipv4 addresses from 192.168.1.1 to 192.168.1.254\n\n<!-- End of code generated from the comments of the WaitIpConfig struct in builder/vsphere/common/step_wait_for_ip.go; -->\n\n\n## Export Configuration\n\n<!-- Code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; DO NOT EDIT MANUALLY -->\n\nYou can export an image in Open Virtualization Format (OVF) to the Packer\nhost.\n\nHCL Example:\n\n```hcl\n\n\t# ...\n\tvm_name = \"example-ubuntu\"\n\t# ...\n\texport {\n\t  force = true\n\t  output_directory = \"./output-artifacts\"\n\t}\n\n```\n\nJSON Example:\n\n```json\n...\n\n\t\"vm_name\": \"example-ubuntu\",\n\n...\n\n\t\"export\": {\n\t  \"force\": true,\n\t  \"output_directory\": \"./output-artifacts\"\n\t},\n\n```\n\nThe above configuration would create the following files:\n\n```text\n./output-artifacts/example-ubuntu-disk-0.vmdk\n./output-artifacts/example-ubuntu.mf\n./output-artifacts/example-ubuntu.ovf\n```\n\n<!-- End of code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; DO NOT EDIT MANUALLY -->\n\n- `name` (string) - The name of the exported image in Open Virtualization Format (OVF).\n  \n  -> **Note:** The name of the virtual machine with the `.ovf` extension is\n  used if this option is not specified.\n\n- `force` (bool) - Forces the export to overwrite existing files. Defaults to `false`.\n  If set to `false`, an error is returned if the file(s) already exists.\n\n- `image_files` (bool) - Include additional image files that are that are associated with the\n  virtual machine. Defaults to `false`. For example, `.nvram` and `.log`\n  files.\n\n- `manifest` (string) - The hash algorithm to use when generating a manifest file. Defaults to\n  `sha256`.\n  \n  The available options for this setting are: 'none', 'sha1', 'sha256', and\n  'sha512'.\n  \n  --> **Tip:** Use `none` to disable the creation of a manifest file.\n\n- `options` ([]string) - Advanced image export options. Available options include:\n  * `mac` - MAC address is exported for each Ethernet device.\n  * `uuid` - UUID is exported for the virtual machine.\n  * `extraconfig` - Extra configuration options are exported for the\n    virtual machine.\n  * `nodevicesubtypes` - Resource subtypes for CD/DVD drives, floppy\n    drives, and SCSI controllers are not exported.\n  \n  For example, adding the following export configuration option outputs the\n  MAC addresses for each Ethernet device in the OVF descriptor:\n  \n  HCL Example:\n  \n  ```hcl\n  ...\n    export {\n      options = [\"mac\"]\n    }\n  ```\n  \n  JSON: Example:\n  \n  ```json\n  ...\n    \"export\": {\n      \"options\": [\"mac\"]\n    },\n  ```\n\n- `output_format` (string) - The output format for the exported virtual machine image.\n  Defaults to `ovf`. Available options include `ovf` and `ova`.\n  \n  When set to `ova`, the image is first exported using Open Virtualization\n  Format (`.ovf`) and then converted to an Open Virtualization Archive\n  (`.ova`) using the VMware [Open Virtualization Format Tool](https://developer.broadcom.com/tools/open-virtualization-format-ovf-tool/latest)\n  (ovftool). The intermediate files are removed after the conversion.\n  \n  ~> **Note:** To use the `ova` format option, VMware ovftool must be\n  installed on the Packer host and accessible in either the system `PATH`\n  or the user's `PATH`.\n\n<!-- End of code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; -->\n\n\n### Output Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the OutputConfig struct in builder/vsphere/common/output_config.go; DO NOT EDIT MANUALLY -->\n\n- `output_directory` (string) - The directory where artifacts from the build, such as the virtual machine\n  files and disks, will be output to. The path to the directory may be\n  relative or absolute. If relative, the path is relative to the working\n  directory Packer is run from. This directory must not exist or, if\n  created, must be empty prior to running the builder. By default this is\n  \"output-<buildName>\" where \"buildName\" is the name of the build.\n\n- `directory_permission` (os.FileMode) - The permissions to apply to the \"output_directory\", and to any parent\n  directories that get created for output_directory.  By default this is\n  \"0750\". You should express the permission as quoted string with a\n  leading zero such as \"0755\" in JSON file, because JSON does not support\n  octal value. In Unix-like OS, the actual permission may differ from\n  this value because of umask.\n\n<!-- End of code generated from the comments of the OutputConfig struct in builder/vsphere/common/output_config.go; -->\n\n\n### Content Library Configuration\n\n<!-- Code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; DO NOT EDIT MANUALLY -->\n\nCreate a content library item in a content library whose content is a VM\ntemplate or an OVF template created from the virtual machine image after\nthe build is complete.\n\nThe template is stored in a existing or newly created library item.\n\n<!-- End of code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; DO NOT EDIT MANUALLY -->\n\n- `library` (string) - The name of the content library in which the new content library item\n  containing the template will be created or updated. The content library\n  must be of type Local to allow deploying virtual machines.\n\n- `name` (string) - The name of the content library item that will be created or updated.\n  For VM templates, the name of the item should be different from\n  [vm_name](#vm_name) and the default is [vm_name](#vm_name) + timestamp\n  when not set. VM templates will be always imported to a new library item.\n  For OVF templates, the name defaults to [vm_name](#vm_name) when not set,\n  and if an item with the same name already exists it will be then updated\n  with the new OVF template, otherwise a new item will be created.\n  \n  ~> **Note:** It's not possible to update existing content library items\n  with a new VM template. If updating an existing content library item is\n  necessary, use an OVF template instead by setting the [ovf](#ovf) option\n  as `true`.\n\n- `description` (string) - A description for the content library item that will be created.\n  Defaults to \"Packer imported [vm_name](#vm_name) VM template\".\n\n- `cluster` (string) - The cluster where the VM template will be placed.\n  If `cluster` and `resource_pool` are both specified, `resource_pool` must\n  belong to cluster. If `cluster` and `host` are both specified, the ESXi\n  host must be a member of the cluster. This option is not used when\n  importing OVF templates. Defaults to [`cluster`](#cluster).\n\n- `folder` (string) - The virtual machine folder where the VM template will be placed.\n  This option is not used when importing OVF templates. Defaults to\n  the same folder as the source virtual machine.\n\n- `host` (string) - The ESXi host where the virtual machine template will be placed.\n  If `host` and `resource_pool` are both specified, `resource_pool` must\n  belong to host. If `host` and `cluster` are both specified, `host` must\n  be a member of the cluster. This option is not used when importing OVF\n  templates. Defaults to [`host`](#host).\n\n- `resource_pool` (string) - The resource pool where the virtual machine template will be placed.\n  Defaults to [`resource_pool`](#resource_pool). If [`resource_pool`](#resource_pool)\n  is unset, the system will attempt to choose a suitable resource pool\n  for the VM template.\n\n- `datastore` (string) - The datastore for the virtual machine template's configuration and log\n  files. This option is not used when importing OVF templates.\n  Defaults to the storage backing associated with the content library.\n\n- `destroy` (bool) - Destroy the virtual machine after the import to the content library.\n  Defaults to `false`.\n\n- `ovf` (bool) - Import an OVF template to the content library item. Defaults to `false`.\n\n- `skip_import` (bool) - Skip the import to the content library item. Useful during a build test\n  stage. Defaults to `false`.\n\n- `ovf_flags` ([]string) - Flags to use for OVF package creation. The supported flags can be\n  obtained using ExportFlag.list. If unset, no flags will be used.\n  Known values: `EXTRA_CONFIG`, `PRESERVE_MAC`.\n\n<!-- End of code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; -->\n\n\n**VM Template**\n\nHCL Example:\n\n```hcl\n\tcontent_library_destination {\n\t\t\tlibrary = \"Example Content Library\"\n\t}\n```\n\nJSON Example:\n\n```json\n\t\"content_library_destination\" : {\n\t    \"library\": \"Example Content Library\"\n\t}\n```\n\n**OVF Template**\n\nHCL Example:\n\n```hcl\n\tcontent_library_destination {\n\t\t\tlibrary = \"Example Content Library\"\n\t\t\tovf = true\n\t}\n```\n\nJSON Example:\n\n```json\n\t\"content_library_destination\" : {\n\t    \"library\": \"Example Content Library\",\n\t    \"ovf\": true\n\t}\n```\n\n### Extra Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the ConfigParamsConfig struct in builder/vsphere/common/step_config_params.go; DO NOT EDIT MANUALLY -->\n\n- `configuration_parameters` (map[string]string) - A map of key-value pairs to sent to the [`extraConfig`](https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html#extraConfig).\n  in the vSphere API's `VirtualMachineConfigSpec`.\n  \n  HCL Example:\n  \n  ```hcl\n    configuration_parameters = {\n      \"disk.EnableUUID\" = \"TRUE\"\n      \"svga.autodetect\" = \"TRUE\"\n      \"log.keepOld\"     = \"15\"\n    }\n  ```\n  \n  JSON Example:\n  \n  ```json\n    \"configuration_parameters\": {\n      \"disk.EnableUUID\": \"TRUE\",\n      \"svga.autodetect\": \"TRUE\",\n      \"log.keepOld\": \"15\"\n    }\n  ```\n  \n  ~> **Note:** Configuration keys that would conflict with parameters that\n  are explicitly configurable through other fields in the `ConfigSpec`` object\n  are silently ignored. Refer to the [`VirtualMachineConfigSpec`](https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html)\n  in the vSphere API documentation.\n\n- `tools_sync_time` (bool) - Enable time synchronization with the ESXi host where the virtual machine\n  is running. Defaults to `false`.\n\n- `tools_upgrade_policy` (bool) - Automatically check for and upgrade VMware Tools after a virtual machine\n  power cycle. Defaults to `false`.\n\n<!-- End of code generated from the comments of the ConfigParamsConfig struct in builder/vsphere/common/step_config_params.go; -->\n\n\n### Communicator Configuration\n\n**Optional**:\n\n##### Common\n\n<!-- Code generated from the comments of the Config struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `communicator` (string) - Packer currently supports three kinds of communicators:\n  \n  -   `none` - No communicator will be used. If this is set, most\n      provisioners also can't be used.\n  \n  -   `ssh` - An SSH connection will be established to the machine. This\n      is usually the default.\n  \n  -   `winrm` - A WinRM connection will be established.\n  \n  In addition to the above, some builders have custom communicators they\n  can use. For example, the Docker builder has a \"docker\" communicator\n  that uses `docker exec` and `docker cp` to execute scripts and copy\n  files.\n\n- `pause_before_connecting` (duration string | ex: \"1h5m2s\") - We recommend that you enable SSH or WinRM as the very last step in your\n  guest's bootstrap script, but sometimes you may have a race condition\n  where you need Packer to wait before attempting to connect to your\n  guest.\n  \n  If you end up in this situation, you can use the template option\n  `pause_before_connecting`. By default, there is no pause. For example if\n  you set `pause_before_connecting` to `10m` Packer will check whether it\n  can connect, as normal. But once a connection attempt is successful, it\n  will disconnect and then wait 10 minutes before connecting to the guest\n  and beginning provisioning.\n\n<!-- End of code generated from the comments of the Config struct in communicator/config.go; -->\n\n\n##### SSH\n\n<!-- Code generated from the comments of the SSH struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `ssh_host` (string) - The address to SSH to. This usually is automatically configured by the\n  builder.\n\n- `ssh_port` (int) - The port to connect to SSH. This defaults to `22`.\n\n- `ssh_username` (string) - The username to connect to SSH with. Required if using SSH.\n\n- `ssh_password` (string) - A plaintext password to use to authenticate with SSH.\n\n- `ssh_ciphers` ([]string) - This overrides the value of ciphers supported by default by Golang.\n  The default value is [\n    \"aes128-gcm@openssh.com\",\n    \"chacha20-poly1305@openssh.com\",\n    \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n  ]\n  \n  Valid options for ciphers include:\n  \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"aes128-gcm@openssh.com\",\n  \"chacha20-poly1305@openssh.com\",\n  \"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",\n\n- `ssh_clear_authorized_keys` (bool) - If true, Packer will attempt to remove its temporary key from\n  `~/.ssh/authorized_keys` and `/root/.ssh/authorized_keys`. This is a\n  mostly cosmetic option, since Packer will delete the temporary private\n  key from the host system regardless of whether this is set to true\n  (unless the user has set the `-debug` flag). Defaults to \"false\";\n  currently only works on guests with `sed` installed.\n\n- `ssh_key_exchange_algorithms` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\n  supported by default by Golang. Acceptable values include:\n  \"curve25519-sha256@libssh.org\", \"ecdh-sha2-nistp256\",\n  \"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n  \"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".\n\n- `ssh_certificate_file` (string) - Path to user certificate used to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_pty` (bool) - If `true`, a PTY will be requested for the SSH connection. This defaults\n  to `false`.\n\n- `ssh_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\n  determine when the machine has booted so this is usually quite long.\n  Example value: `10m`.\n  This defaults to `5m`, unless `ssh_handshake_attempts` is set.\n\n- `ssh_disable_agent_forwarding` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `false`.\n\n- `ssh_handshake_attempts` (int) - The number of handshakes to attempt with SSH once it can connect.\n  This defaults to `10`, unless a `ssh_timeout` is set.\n\n- `ssh_bastion_host` (string) - A bastion host to use for the actual SSH connection.\n\n- `ssh_bastion_port` (int) - The port of the bastion host. Defaults to `22`.\n\n- `ssh_bastion_agent_auth` (bool) - If `true`, the local SSH agent will be used to authenticate with the\n  bastion host. Defaults to `false`.\n\n- `ssh_bastion_username` (string) - The username to connect to the bastion host.\n\n- `ssh_bastion_password` (string) - The password to use to authenticate with the bastion host.\n\n- `ssh_bastion_interactive` (bool) - If `true`, the keyboard-interactive used to authenticate with bastion host.\n\n- `ssh_bastion_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with the\n  bastion host. The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_bastion_certificate_file` (string) - Path to user certificate used to authenticate with bastion host.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_file_transfer_method` (string) - `scp` or `sftp` - How to transfer files, Secure copy (default) or SSH\n  File Transfer Protocol.\n  \n  **NOTE**: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n  (the default protocol for copying data) returns a a non-zero error code since the MOTW\n  cannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\n  with SFTP instead `ssh_file_transfer_method = \"sftp\"`.\n\n- `ssh_proxy_host` (string) - A SOCKS proxy host to use for SSH connection\n\n- `ssh_proxy_port` (int) - A port of the SOCKS proxy. Defaults to `1080`.\n\n- `ssh_proxy_username` (string) - The optional username to authenticate with the proxy server.\n\n- `ssh_proxy_password` (string) - The optional password to use to authenticate with the proxy server.\n\n- `ssh_keep_alive_interval` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\n  value (`-1s`) to disable. Example value: `10s`. Defaults to `5s`.\n\n- `ssh_read_write_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\n  useful if, for example, packer hangs on a connection after a reboot.\n  Example: `5m`. Disabled by default.\n\n- `ssh_remote_tunnels` ([]string) - \n\n- `ssh_local_tunnels` ([]string) - \n\n<!-- End of code generated from the comments of the SSH struct in communicator/config.go; -->\n\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n##### Windows Remote Management (WinRM)\n\n<!-- Code generated from the comments of the WinRM struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `winrm_username` (string) - The username to use to connect to WinRM.\n\n- `winrm_password` (string) - The password to use to connect to WinRM.\n\n- `winrm_host` (string) - The address for WinRM to connect to.\n  \n  NOTE: If using an Amazon EBS builder, you can specify the interface\n  WinRM connects to via\n  [`ssh_interface`](/packer/integrations/hashicorp/amazon/latest/components/builder/ebs#ssh_interface)\n\n- `winrm_no_proxy` (bool) - Setting this to `true` adds the remote\n  `host:port` to the `NO_PROXY` environment variable. This has the effect of\n  bypassing any configured proxies when connecting to the remote host.\n  Default to `false`.\n\n- `winrm_port` (int) - The WinRM port to connect to. This defaults to `5985` for plain\n  unencrypted connection and `5986` for SSL when `winrm_use_ssl` is set to\n  true.\n\n- `winrm_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for WinRM to become available. This defaults\n  to `30m` since setting up a Windows machine generally takes a long time.\n\n- `winrm_use_ssl` (bool) - If `true`, use HTTPS for WinRM.\n\n- `winrm_insecure` (bool) - If `true`, do not check server certificate chain and host name.\n\n- `winrm_use_ntlm` (bool) - If `true`, NTLMv2 authentication (with session security) will be used\n  for WinRM, rather than default (basic authentication), removing the\n  requirement for basic authentication to be enabled within the target\n  guest. Further reading for remote connection authentication can be found\n  [here](https://msdn.microsoft.com/en-us/library/aa384295(v=vs.85).aspx).\n\n<!-- End of code generated from the comments of the WinRM struct in communicator/config.go; -->\n\n\n## Working with Clusters and Hosts\n\n### Standalone ESXi Hosts\n\nOnly use the `host` option. Optionally, specify a `resource_pool`:\n\nHCL Example:\n\n```hcl\n  host = \"\"esxi-01.example.com\"\"\n  resource_pool = \"example_resource_pool\"\n```\n\nJSON Example:\n\n```json\n  \"host\": \"esxi-01.example.com\",\n  \"resource_pool\": \"example_resource_pool\",\n```\n\n### Clusters with Distributed Resource Scheduler Enabled\n\nOnly use the `cluster` option. Optionally, specify a `resource_pool`:\n\nHCL Example:\n\n```hcl\n  cluster = \"cluster-01\"\n  resource_pool = \"example_resource_pool\"\n```\n\nJSON Example:\n\n```json\n  \"cluster\": \"cluster-01\",\n  \"resource_pool\": \"example_resource_pool\",\n```\n\n### Clusters without Distributed Resource Scheduler Enabled\n\nUse the `cluster` and `host`parameters:\n\nHCL Example:\n\n```hcl\n  cluster = \"cluster-01\"\n  host = \"esxi-01.example.com\"\n```\n\nJSON Example:\n\n```json\n  \"cluster\": \"cluster-01\",\n  \"host\": \"esxi-01.example.com\",\n```\n\n## Privileges\n\nIt is recommended to create a custom vSphere role with the required privileges to integrate Packer\nwith vSphere. Accounts or groups can be added to the role to ensure that Packer has least privilege\naccess to the infrastructure.\n\nFor example, a named service account (_e.g._ `svc-packer-vsphere@example.com`).\n\nClone the default **Read-Only** vSphere role and add the following privileges, which are based on\nthe capabilities of the `vsphere-iso` plugin:\n\n| Category        | Privilege                                           | Reference                                          |\n| --------------- | --------------------------------------------------- | -------------------------------------------------- |\n| Content Library | Add library item                                    | `ContentLibrary.AddLibraryItem`                    |\n| ...             | Update Library Item                                 | `ContentLibrary.UpdateLibraryItem`                 |\n| Datastore       | Allocate space                                      | `Datastore.AllocateSpace`                          |\n| ...             | Browse datastore                                    | `Datastore.Browse`                                 |\n| ...             | Low level file operations                           | `Datastore.FileManagement`                         |\n| Network         | Assign network                                      | `Network.Assign`                                   |\n| Resource        | Assign virtual machine to resource pool             | `Resource.AssignVMToPool`                          |\n| vApp            | Export                                              | `vApp.Export`                                      |\n| Virtual Machine | Configuration > Add new disk                        | `VirtualMachine.Config.AddNewDisk`                 |\n| ...             | Configuration > Add or remove device                | `VirtualMachine.Config.AddRemoveDevice`            |\n| ...             | Configuration > Advanced configuration              | `VirtualMachine.Config.AdvancedConfig`             |\n| ...             | Configuration > Change CPU count                    | `VirtualMachine.Config.CPUCount`                   |\n| ...             | Configuration > Change memory                       | `VirtualMachine.Config.Memory`                     |\n| ...             | Configuration > Change settings                     | `VirtualMachine.Config.Settings`                   |\n| ...             | Configuration > Change Resource                     | `VirtualMachine.Config.Resource`                   |\n| ...             | Configuration > Set annotation                      | `VirtualMachine.Config.Annotation`                 |\n| ...             | Edit Inventory > Create from existing               | `VirtualMachine.Inventory.CreateFromExisting`      |\n| ...             | Edit Inventory > Create new                         | `VirtualMachine.Inventory.Create`                  |\n| ...             | Edit Inventory > Remove                             | `VirtualMachine.Inventory.Delete`                  |\n| ...             | Interaction > Configure CD media                    | `VirtualMachine.Interact.SetCDMedia`               |\n| ...             | Interaction > Configure floppy media                | `VirtualMachine.Interact.SetFloppyMedia`           |\n| ...             | Interaction > Connect devices                       | `VirtualMachine.Interact.DeviceConnection`         |\n| ...             | Interaction > Inject USB HID scan codes             | `VirtualMachine.Interact.PutUsbScanCodes`          |\n| ...             | Interaction > Power off                             | `VirtualMachine.Interact.PowerOff`                 |\n| ...             | Interaction > Power on                              | `VirtualMachine.Interact.PowerOn`                  |\n| ...             | Provisioning > Create template from virtual machine | `VirtualMachine.Provisioning.CreateTemplateFromVM` |\n| ...             | Provisioning > Mark as template                     | `VirtualMachine.Provisioning.MarkAsTemplate`       |\n| ...             | Provisioning > Mark as virtual machine              | `VirtualMachine.Provisioning.MarkAsVM`             |\n| ...             | State > Create snapshot                             | `VirtualMachine.State.CreateSnapshot`              |\n\nGlobal permissions **[are required](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-security/GUID-74F53189-EF41-4AC1-A78E-D25621855800.html#how-do-permissions-work-in-vsphere-0)** for the content library based on the hierarchical inheritance of permissions. Once the custom vSphere role is created, assign **Global Permissions** in vSphere to the accounts or groups used for the Packer to vSphere integration, if using the content library.\n\nFor example:\n\n1. Log in to the vCenter Server at _https://<management_vcenter_server_fqdn>/ui_ as `administrator@vsphere.local`.\n2. Select **Menu** > **Administration**.\n3. In the left pane, select **Access control** > **Global permissions** and click the **Add permissions** icon.\n4. In the **Add permissions** dialog box, enter the service account (_e.g._\n   `svc-packer-vsphere@example.com`), select the custom role (_e.g._ Packer to vSphere Integration\n   Role) and the **Propagate to children** check box, and click **OK**.\n\nIn an environment with many vCenter Server instances, such as management and workload, in enhanced\nlinked-mode, you may wish to further reduce the scope of access across the vSphere infrastructure if\nyou do not want Packer to have access to the management vCenter Server instance, but only allow\naccess to workload vCenter Server instances.\n\nFor example:\n\n1. From the **Hosts and clusters** inventory, select management vCenter Server to restrict scope,\n   and click the **Permissions** tab.\n2. Select the service account with the custom role assigned and click the **Change role** icon.\n3. In the **Change role** dialog box, from the **Role** drop-down menu, select **No Access**, select\n   the **Propagate to children** check box, and click **OK**.\n","created_at":"2024-10-17T21:00:15.943Z","updated_at":"2024-10-17T21:00:15.943Z","name":"vSphere ISO","slug":"vsphere-iso","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},{"id":"75b04e97-7ca1-4a3e-93ce-b2bb879ac9f7","integration_release_id":"1ee34d8e-f6a0-4142-80c4-96b24f19da59","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `vsphere-clone`\n\nArtifact BuilderId: `jetbrains.vsphere`\n\nThis builder clones an existing template, modifies the virtual machine image, and saves the result\nas a new template using the vSphere API.\n\n-> **Note:** This builder is developed to maintain compatibility with VMware vSphere versions until\ntheir respective End of General Support dates. For detailed information, refer to the\n[Broadcom Product Lifecycle](https://support.broadcom.com/group/ecx/productlifecycle).\n\n## Examples\n\nExamples are available in the [examples](https://github.com/hashicorp/packer-plugin-vsphere/tree/main/builder/vsphere/examples/)\ndirectory of the GitHub repository.\n\n## Configuration Reference\n\nThere are many configuration options available for this builder. In addition to the items listed\nhere, you will want to review the general configuration references for [Hardware](#hardware-configuration),\n[Output](#output-configuration), [Boot](#boot-configuration), [Run](#run-configuration), [Shutdown](#shutdown-configuration),\n[Communicator](#communicator-configuration), and [Export](#export-configuration) configuration\nreferences, which are necessary for a build to succeed and can be found further down the page.\n\n**Optional:**\n\n<!-- Code generated from the comments of the Config struct in builder/vsphere/clone/config.go; DO NOT EDIT MANUALLY -->\n\n- `create_snapshot` (bool) - Create a snapshot of the virtual machine to use as a base for linked\n  clones. Defaults to `false`.\n\n- `snapshot_name` (string) - The name of the snapshot when `create_snapshot` is `true`.\n  Defaults to `Created By Packer`.\n\n- `convert_to_template` (bool) - Convert the cloned virtual machine to a template after the build is\n  complete. Defaults to `false`.\n  If set to `true`, the virtual machine can not be imported to a content\n  library.\n\n- `export` (\\*common.ExportConfig) - The configuration for exporting the virtual machine to an OVF.\n  The virtual machine is not exported if [export configuration](#export-configuration)\n  is not specified.\n\n- `content_library_destination` (\\*common.ContentLibraryDestinationConfig) - The configuration for importing a VM template or OVF template to a\n  content library. The template will not be imported if no\n  [content library import configuration](#content-library-import-configuration)\n  is specified. If set, `convert_to_template` must be set to `false`.\n\n- `customize` (\\*CustomizeConfig) - The customization options for the virtual machine.\n  Refer to the [customization options](#customization) section for more\n  information.\n\n<!-- End of code generated from the comments of the Config struct in builder/vsphere/clone/config.go; -->\n\n\n### Clone Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the CloneConfig struct in builder/vsphere/clone/step_clone.go; DO NOT EDIT MANUALLY -->\n\n- `template` (string) - The name of the source virtual machine to clone.\n\n- `disk_size` (int64) - The size of the primary disk in MiB. Cannot be used with `linked_clone`.\n  -> **Note:** Only the primary disk size can be specified. Additional\n  disks are not supported.\n\n- `linked_clone` (bool) - Create the virtual machine as a linked clone from the latest snapshot.\n  Defaults to `false`. Cannot be used with `disk_size`.`\n\n- `network` (string) - The network to which the virtual machine will connect.\n  \n  For example:\n  \n  - Name: `<NetworkName>`\n  - Inventory Path: `/<DatacenterName>/<FolderName>/<NetworkName>`\n  - Managed Object ID (Port Group): `Network:network-<xxxxx>`\n  - Managed Object ID (Distributed Port Group): `DistributedVirtualPortgroup::dvportgroup-<xxxxx>`\n  - Logical Switch UUID: `<uuid>`\n  - Segment ID: `/infra/segments/<SegmentID>`\n  \n  ~> **Note:** If more than one network resolves to the same name, either\n  the inventory path to network or an ID must be provided.\n  \n  ~> **Note:** If no network is specified, provide `host` to allow the\n  plugin to search for an available network.\n\n- `mac_address` (string) - The network card MAC address. For example `00:50:56:00:00:00`.\n  If set, the `network` must be also specified.\n\n- `notes` (string) - The annotations for the virtual machine.\n\n- `destroy` (bool) - Destroy the virtual machine after the build is complete.\n  Defaults to `false`.\n\n- `vapp` (vAppConfig) - The vApp Options for the virtual machine. For more information, refer to\n  the [vApp Options Configuration](/packer/integrations/hashicorp/vmware/latest/components/builder/vsphere-clone#vapp-options-configuration)\n  section.\n\n<!-- End of code generated from the comments of the CloneConfig struct in builder/vsphere/clone/step_clone.go; -->\n\n\n<!-- Code generated from the comments of the StorageConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_controller_type` ([]string) - The disk controller type. One of `lsilogic`, `lsilogic-sas`, `pvscsi`,\n  `nvme`, `scsi`, or `sata`. Defaults to `lsilogic`. Use a list to define\n  additional controllers. Refer to [SCSI, SATA, and NVMe Storage Controller\n  Conditions, Limitations, and Compatibility](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-5872D173-A076-42FE-8D0B-9DB0EB0E7362.html)\n  for additional information.\n\n- `storage` ([]DiskConfig) - A collection of one or more disks to be provisioned.\n  Refer to the [Storage Configuration](#storage-configuration) section for additional information.\n\n<!-- End of code generated from the comments of the StorageConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n### Storage Configuration\n\nWhen cloning a virtual machine, the storage configuration can be used to add additional storage and\ndisk controllers. The resulting virtual machine will contain the origin virtual machine storage and\ndisk controller plus the new configured ones.\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\nThe following example that will create a 15GB and a 20GB disk on the virtual\nmachine. The second disk will be thin provisioned:\n\nHCL Example:\n\n```hcl\n\n\tstorage {\n\t    disk_size = 15000\n\t}\n\tstorage {\n\t    disk_size = 20000\n\t    disk_thin_provisioned = true\n\t}\n\n```\n\nJSON Example:\n\n```json\n\n\t\"storage\": [\n\t  {\n\t    \"disk_size\": 15000\n\t  },\n\t  {\n\t    \"disk_size\": 20000,\n\t    \"disk_thin_provisioned\": true\n\t  }\n\t],\n\n```\n\nThe following example will use two PVSCSI controllers and two disks on each\ncontroller.\n\nHCL Example:\n\n```hcl\n\n\t disk_controller_type = [\"pvscsi\", \"pvscsi\"]\n\t\tstorage {\n\t\t   disk_size = 15000,\n\t\t   disk_controller_index = 0\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 0\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 1\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 1\n\t\t}\n\n```\n\nJSON Example:\n\n```json\n\n\t\"disk_controller_type\": [\"pvscsi\", \"pvscsi\"],\n\t\"storage\": [\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 0\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 0\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 1\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 1\n\t  }\n\t],\n\n```\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n**Required:**\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_size` (int64) - The size of the disk in MiB.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_thin_provisioned` (bool) - Enable thin provisioning for the disk.\n  Defaults to `false`.\n\n- `disk_eagerly_scrub` (bool) - Enable eager scrubbing for the disk.\n  Defaults to `false`.\n\n- `disk_controller_index` (int) - The assigned disk controller for the disk.\n  Defaults to the first controller, `(0)`.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n### vApp Options Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the vAppConfig struct in builder/vsphere/clone/step_clone.go; DO NOT EDIT MANUALLY -->\n\n- `properties` (map[string]string) - The values for the available vApp properties. These are used to supply\n  configuration parameters to a virtual machine. This machine is cloned\n  from a template that originated from an imported OVF or OVA file.\n  \n  -> **Note:** The only supported usage path for vApp properties is for\n  existing user-configurable keys. These generally come from an existing\n  template that was created from an imported OVF or OVA file.\n  \n  You cannot set values for vApp properties on virtual machines created\n  from scratch, on virtual machines that lack a vApp configuration, or on\n  property keys that do not exist.\n  \n  HCL Example:\n  ```hcl\n    vapp {\n      properties = {\n        hostname  = var.hostname\n        user-data = base64encode(var.user_data)\n      }\n    }\n  ```\n  \n  JSON Example:\n  \n  ```json\n    \"vapp\": {\n        \"properties\": {\n            \"hostname\": \"{{ user `hostname`}}\",\n            \"user-data\": \"{{ env `USERDATA`}}\"\n        }\n    }\n  ```\n  \n  A `user-data` field requires the content of a YAML file to be encoded\n  with base64. This can be done using an environment variable:\n  \n  ```console\n  export USERDATA=$(gzip -c9 <userdata.yaml | { base64 -w0 2>/dev/null || base64; })\n  ```\n\n<!-- End of code generated from the comments of the vAppConfig struct in builder/vsphere/clone/step_clone.go; -->\n\n\n### Extra Configuration Parameters\n\n**Optional:**\n\n<!-- Code generated from the comments of the ConfigParamsConfig struct in builder/vsphere/common/step_config_params.go; DO NOT EDIT MANUALLY -->\n\n- `configuration_parameters` (map[string]string) - A map of key-value pairs to sent to the [`extraConfig`](https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html#extraConfig).\n  in the vSphere API's `VirtualMachineConfigSpec`.\n  \n  HCL Example:\n  \n  ```hcl\n    configuration_parameters = {\n      \"disk.EnableUUID\" = \"TRUE\"\n      \"svga.autodetect\" = \"TRUE\"\n      \"log.keepOld\"     = \"15\"\n    }\n  ```\n  \n  JSON Example:\n  \n  ```json\n    \"configuration_parameters\": {\n      \"disk.EnableUUID\": \"TRUE\",\n      \"svga.autodetect\": \"TRUE\",\n      \"log.keepOld\": \"15\"\n    }\n  ```\n  \n  ~> **Note:** Configuration keys that would conflict with parameters that\n  are explicitly configurable through other fields in the `ConfigSpec`` object\n  are silently ignored. Refer to the [`VirtualMachineConfigSpec`](https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html)\n  in the vSphere API documentation.\n\n- `tools_sync_time` (bool) - Enable time synchronization with the ESXi host where the virtual machine\n  is running. Defaults to `false`.\n\n- `tools_upgrade_policy` (bool) - Automatically check for and upgrade VMware Tools after a virtual machine\n  power cycle. Defaults to `false`.\n\n<!-- End of code generated from the comments of the ConfigParamsConfig struct in builder/vsphere/common/step_config_params.go; -->\n\n\n### Customization\n\n<!-- Code generated from the comments of the CustomizeConfig struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\nA cloned virtual machine can be [customized](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-58E346FF-83AE-42B8-BE58-253641D257BC.html)\nto configure host, network, or licensing settings.\n\nTo perform virtual machine customization as a part of the clone process,\nspecify the customize block with the respective customization options.\nWindows guests are customized using Sysprep, which will result in the machine\nSID being reset. Before using customization, check that your source virtual\nmachine meets the [requirements](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-E63B6FAA-8D35-428D-B40C-744769845906.html)\nfor guest OS customization on vSphere. Refer to the [customization example](#customization-example) for a usage synopsis.\n\nThe settings for guest customization include:\n\n<!-- End of code generated from the comments of the CustomizeConfig struct in builder/vsphere/clone/step_customize.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the CustomizeConfig struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\n- `linux_options` (\\*LinuxOptions) - Settings for the guest customization of Linux operating systems.\n  Refer to the [Linux options](#linux-options) section for additional\n  details.\n\n- `windows_options` (\\*WindowsOptions) - Settings for the guest customization of Windows operating systems.\n  Refer to the [Windows options](#windows-options) section for additional\n  details.\n\n- `windows_sysprep_file` (string) - Provide a `sysprep.xml` file to allow control of the customization\n  process independent of vSphere. This option is deprecated, please use\n  `windows_sysprep_text`.\n\n- `windows_sysprep_text` (string) - Provide the text for the `sysprep.xml` content to allow control of the\n  customization process independent of vSphere.\n  \n  HCL Examples:\n  \n  ```hcl\n  customize {\n     windows_sysprep_text = file(\"<path-to-sysprep.xml>\")\n  }\n  ```\n  \n  ```hcl\n  customize {\n     windows_sysprep_text = templatefile(\"<path-to-sysprep.xml>\", {\n        var1=\"example\"\n        var2=\"example-2\"\n     })\n  }\n  ```\n  \n  JSON Examples\n  \n  ```json\n  {\n    \"customize\": {\n      \"windows_sysprep_text\": \"<path-to-sysprep.xml>\"\n    }\n  }\n  ```\n  \n  ```json\n  {\n    \"customize\": {\n      \"windows_sysprep_text\": \"<path-to-sysprep.xml>\",\n      \"var1\": \"example\",\n      \"var2\": \"example-2\"\n    }\n  }\n\n- `network_interface` (NetworkInterfaces) - Set up network interfaces individually to correspond with the network\n  adapters on the virtual machine. To use DHCP, specify an empty\n  `network_interface` for each configured adapter. This field is mandatory.\n  Refer to the [network interface](#network-interface-settings) section for\n  additional details.\n\n<!-- End of code generated from the comments of the CustomizeConfig struct in builder/vsphere/clone/step_customize.go; -->\n\n\n#### Network Interface Settings\n\n**Optional:**\n\n<!-- Code generated from the comments of the NetworkInterface struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\n- `dns_server_list` ([]string) - The DNS servers for a specific network interface on a Windows guest\n  operating system. Ignored on Linux. Refer to the\n  [global DNS settings](#global-dns-settings) section for additional\n  details.\n\n- `dns_domain` (string) - The DNS search domain for a specific network interface on a Windows guest\n  operating system. Ignored on Linux. Refer to the\n  [global DNS settings](#global-dns-settings) section for additional\n  details.\n\n- `ipv4_address` (string) - The IPv4 address assigned to the network adapter. If left blank or not\n  included, DHCP is used.\n\n- `ipv4_netmask` (int) - The IPv4 subnet mask, in bits, for the network adapter. For example, `24`\n  for a `/24` subnet.\n\n- `ipv6_address` (string) - The IPv6 address assigned to the network adapter. If left blank or not\n  included, auto-configuration is used.\n\n- `ipv6_netmask` (int) - The IPv6 subnet mask, in bits, for the network adapter. For example, `64`\n  for a `/64` subnet.\n\n<!-- End of code generated from the comments of the NetworkInterface struct in builder/vsphere/clone/step_customize.go; -->\n\n\n<!-- Code generated from the comments of the RemoveNetworkConfig struct in builder/vsphere/common/step_remove_network.go; DO NOT EDIT MANUALLY -->\n\n- `remove_network_adapter` (bool) - Remove all network adapters from template. Defaults to `false`.\n\n<!-- End of code generated from the comments of the RemoveNetworkConfig struct in builder/vsphere/common/step_remove_network.go; -->\n\n\n#### Global Routing Settings\n\n<!-- Code generated from the comments of the GlobalRoutingSettings struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\nThe settings must match the IP address and subnet mask of at least one\n`network_interface` for the customization.\n\n<!-- End of code generated from the comments of the GlobalRoutingSettings struct in builder/vsphere/clone/step_customize.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the GlobalRoutingSettings struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\n- `ipv4_gateway` (string) - The IPv4 default gateway when using `network_interface` customization.\n\n- `ipv6_gateway` (string) - The IPv6 default gateway when using `network_interface` customization.\n\n<!-- End of code generated from the comments of the GlobalRoutingSettings struct in builder/vsphere/clone/step_customize.go; -->\n\n\n#### Global DNS Settings\n\n<!-- Code generated from the comments of the GlobalDnsSettings struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\nThe following settings configure DNS globally for Linux guest operating\nsystems. For Windows guest operating systems, this is set for each network\ninterface. Refer to the [network interface](#network_interface) section for\nadditional details.\n\n<!-- End of code generated from the comments of the GlobalDnsSettings struct in builder/vsphere/clone/step_customize.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the GlobalDnsSettings struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\n- `dns_server_list` ([]string) - A list of DNS servers to configure on the guest operating system.\n\n- `dns_suffix_list` ([]string) - A list of DNS search domains to add to the DNS configuration on the guest\n  operating system.\n\n<!-- End of code generated from the comments of the GlobalDnsSettings struct in builder/vsphere/clone/step_customize.go; -->\n\n\n#### Linux Customization Settings\n\n**Optional:**\n\n<!-- Code generated from the comments of the LinuxOptions struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\n- `domain` (string) - The domain name for the guest operating system. Used with\n  [host_name](#host_name) to construct the fully qualified domain name\n  (FQDN).\n\n- `host_name` (string) - The hostname for the guest operating system. Used with [domain](#domain)\n  to construct the fully qualified domain name (FQDN).\n\n- `hw_clock_utc` (boolean) - Set the hardware clock to Coordinated Universal Time (UTC).\n  Defaults to `true`.\n\n- `time_zone` (string) - The time zone for the guest operating system.\n\n<!-- End of code generated from the comments of the LinuxOptions struct in builder/vsphere/clone/step_customize.go; -->\n\n\n**Linux Customization Example**\n\nHCL Example:\n\n```hcl\n    customize {\n      linux_options {\n        host_name = \"foo\"\n        domain = \"example.com\"\n      }\n\n      network_interface {\n        ipv4_address = \"10.0.0.10\"\n        ipv4_netmask = \"24\"\n      }\n\n      ipv4_gateway = 10.0.0.1\n      dns_server_list = [\"10.0.0.18\"]\n    }\n```\n\nJSON Example:\n\n```json\n    \"customize\": {\n      \"linux_options\": {\n        \"host_name\": \"foo\",\n        \"domain\": \"example.com\"\n      },\n      \"network_interface\": {\n        \"ipv4_address\": \"10.0.0.10\",\n        \"ipv4_netmask\": \"24\"\n      },\n      \"ipv4_gateway\": \"10.0.0.1\",\n      \"dns_server_list\": [\"10.0.0.18\"]\n    }\n```\n\n#### Windows Customization Settings\n\n**Optional:**\n\n<!-- Code generated from the comments of the WindowsOptions struct in builder/vsphere/clone/step_customize.go; DO NOT EDIT MANUALLY -->\n\n- `run_once_command_list` ([]string) - A list of commands to run at first logon after the guest operating system\n  is customized.\n\n- `auto_logon` (\\*bool) - Automatically log on the `Administrator` account after the guest operating\n  system is customized.\n\n- `auto_logon_count` (\\*int32) - The number of times the guest operating system should auto-logon the\n  `Administrator` account when `auto_logon` is set to `true`.\n  Defaults to `1`.\n\n- `admin_password` (\\*string) - The password for the guest operating system's `Administrator` account.\n\n- `time_zone` (\\*int32) - The time zone for the guest operating system.\n  Defaults to `85` (Pacific Time).\n\n- `workgroup` (string) - The workgroup for the guest operating system.\n  Joining an Active Directory domain is not supported.\n\n- `computer_name` (string) - The hostname for the guest operating system.\n\n- `full_name` (string) - The full name for the guest operating system's `Administrator` account.\n  Defaults to `Administrator`.\n\n- `organization_name` (string) - The organization name for the guest operating system.\n  Defaults to `Built by Packer`.\n\n- `product_key` (string) - The product key for the guest operating system.\n\n<!-- End of code generated from the comments of the WindowsOptions struct in builder/vsphere/clone/step_customize.go; -->\n\n\n**Windows Customization Example**\n\nHCL Example:\n\n```hcl\n    customize {\n      windows_options {\n        computer_name = \"foo\"\n        workgroup = \"example\"\n        product_key = \"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\"\n        admin_password = \"password\"\n      }\n      network_interface {\n        ipv4_address = \"10.0.0.10\"\n        ipv4_netmask = \"24\"\n      }\n      ipv4_gateway = 10.0.0.1\n      dns_server_list = [\"10.0.0.18\"]\n    }\n```\n\nJSON Example:\n\n```json\n    \"customize\": {\n      \"windows_options\": {\n        \"host_name\": \"foo\",\n        \"workgroup\": \"example\",\n        \"product_key\": \"XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\",\n        \"admin_password\": \"password\"\n      },\n      \"network_interface\": {\n        \"ipv4_address\": \"10.0.0.10\",\n        \"ipv4_netmask\": \"24\"\n      },\n      \"ipv4_gateway\": \"10.0.0.1\",\n      \"dns_server_list\": [\"10.0.0.18\"]\n    }\n```\n\n### Boot Configuration\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\nThe boot configuration is very important: `boot_command` specifies the keys\nto type when the virtual machine is first booted in order to start the OS\ninstaller. This command is typed after boot_wait, which gives the virtual\nmachine some time to actually load.\n\nThe boot_command is an array of strings. The strings are all typed in\nsequence. It is an array only to improve readability within the template.\n\nThere are a set of special keys available. If these are in your boot\ncommand, they will be replaced by the proper key:\n\n-   `<bs>` - Backspace\n\n-   `<del>` - Delete\n\n-   `<enter> <return>` - Simulates an actual \"enter\" or \"return\" keypress.\n\n-   `<esc>` - Simulates pressing the escape key.\n\n-   `<tab>` - Simulates pressing the tab key.\n\n-   `<f1> - <f12>` - Simulates pressing a function key.\n\n-   `<up> <down> <left> <right>` - Simulates pressing an arrow key.\n\n-   `<spacebar>` - Simulates pressing the spacebar.\n\n-   `<insert>` - Simulates pressing the insert key.\n\n-   `<home> <end>` - Simulates pressing the home and end keys.\n\n  - `<pageUp> <pageDown>` - Simulates pressing the page up and page down\n    keys.\n\n-   `<menu>` - Simulates pressing the Menu key.\n\n-   `<leftAlt> <rightAlt>` - Simulates pressing the alt key.\n\n-   `<leftCtrl> <rightCtrl>` - Simulates pressing the ctrl key.\n\n-   `<leftShift> <rightShift>` - Simulates pressing the shift key.\n\n-   `<leftSuper> <rightSuper>` - Simulates pressing the ⌘ or Windows key.\n\n  - `<wait> <wait5> <wait10>` - Adds a 1, 5 or 10 second pause before\n    sending any additional keys. This is useful if you have to generally\n    wait for the UI to update before typing more.\n\n  - `<waitXX>` - Add an arbitrary pause before sending any additional keys.\n    The format of `XX` is a sequence of positive decimal numbers, each with\n    optional fraction and a unit suffix, such as `300ms`, `1.5h` or `2h45m`.\n    Valid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. For\n    example `<wait10m>` or `<wait1m20s>`.\n\n  - `<XXXOn> <XXXOff>` - Any printable keyboard character, and of these\n    \"special\" expressions, with the exception of the `<wait>` types, can\n    also be toggled on or off. For example, to simulate ctrl+c, use\n    `<leftCtrlOn>c<leftCtrlOff>`. Be sure to release them, otherwise they\n    will be held down until the machine reboots. To hold the `c` key down,\n    you would use `<cOn>`. Likewise, `<cOff>` to release.\n\n  - `{{ .HTTPIP }} {{ .HTTPPort }}` - The IP and port, respectively of an\n    HTTP server that is started serving the directory specified by the\n    `http_directory` configuration parameter. If `http_directory` isn't\n    specified, these will be blank!\n\n-   `{{ .Name }}` - The name of the VM.\n\nExample boot command. This is actually a working boot command used to start an\nCentOS 6.4 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nThe example shown below is a working boot command used to start an Ubuntu\n12.04 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nFor more examples of various boot commands, see the sample projects from our\n[community templates page](https://packer.io/community-tools#templates).\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\n- `boot_keygroup_interval` (duration string | ex: \"1h5m2s\") - Time to wait after sending a group of key pressses. The value of this\n  should be a duration. Examples are `5s` and `1m30s` which will cause\n  Packer to wait five seconds and one minute 30 seconds, respectively. If\n  this isn't specified, a sensible default value is picked depending on\n  the builder type.\n\n- `boot_wait` (duration string | ex: \"1h5m2s\") - The time to wait after booting the initial virtual machine before typing\n  the `boot_command`. The value of this should be a duration. Examples are\n  `5s` and `1m30s` which will cause Packer to wait five seconds and one\n  minute 30 seconds, respectively. If this isn't specified, the default is\n  `10s` or 10 seconds. To set boot_wait to 0s, use a negative number, such\n  as \"-1s\"\n\n- `boot_command` ([]string) - This is an array of commands to type when the virtual machine is first\n  booted. The goal of these commands should be to type just enough to\n  initialize the operating system installer. Special keys can be typed as\n  well, and are covered in the section below on the boot command. If this\n  is not specified, it is assumed the installer will start itself.\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\n### HTTP Directory Configuration\n\n<!-- Code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; DO NOT EDIT MANUALLY -->\n\nPacker will create an http server serving `http_directory` when it is set, a\nrandom free port will be selected and the architecture of the directory\nreferenced will be available in your builder.\n\nExample usage from a builder:\n\n```\nwget http://{{ .HTTPIP }}:{{ .HTTPPort }}/foo/bar/preseed.cfg\n```\n\n<!-- End of code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; DO NOT EDIT MANUALLY -->\n\n- `http_directory` (string) - Path to a directory to serve using an HTTP server. The files in this\n  directory will be available over HTTP that will be requestable from the\n  virtual machine. This is useful for hosting kickstart files and so on.\n  By default this is an empty string, which means no HTTP server will be\n  started. The address and port of the HTTP server will be available as\n  variables in `boot_command`. This is covered in more detail below.\n\n- `http_content` (map[string]string) - Key/Values to serve using an HTTP server. `http_content` works like and\n  conflicts with `http_directory`. The keys represent the paths and the\n  values contents, the keys must start with a slash, ex: `/path/to/file`.\n  `http_content` is useful for hosting kickstart files and so on. By\n  default this is empty, which means no HTTP server will be started. The\n  address and port of the HTTP server will be available as variables in\n  `boot_command`. This is covered in more detail below.\n  Example:\n  ```hcl\n    http_content = {\n      \"/a/b\"     = file(\"http/b\")\n      \"/foo/bar\" = templatefile(\"${path.root}/preseed.cfg\", { packages = [\"nginx\"] })\n    }\n  ```\n\n- `http_port_min` (int) - These are the minimum and maximum port to use for the HTTP server\n  started to serve the `http_directory`. Because Packer often runs in\n  parallel, Packer will choose a randomly available port in this range to\n  run the HTTP server. If you want to force the HTTP server to be on one\n  port, make this minimum and maximum port the same. By default the values\n  are `8000` and `9000`, respectively.\n\n- `http_port_max` (int) - HTTP Port Max\n\n- `http_bind_address` (string) - This is the bind address for the HTTP server. Defaults to 0.0.0.0 so that\n  it will work with any network interface.\n\n<!-- End of code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; -->\n\n\n- `http_interface` (string) - The network interface (for example, `en0`, `ens192`, etc.) that the\n  HTTP server will use to serve the `http_directory`. The plugin will identify the IP address\n  associated with this network interface and bind to it.\n\n<!-- Code generated from the comments of the BootConfig struct in builder/vsphere/common/step_boot_command.go; DO NOT EDIT MANUALLY -->\n\n- `http_ip` (string) - The IP address to use for the HTTP server to serve the `http_directory`.\n\n<!-- End of code generated from the comments of the BootConfig struct in builder/vsphere/common/step_boot_command.go; -->\n\n\n~> **Notes:**\n  - The options `http_bind_address` and `http_interface` are mutually exclusive.\n  - Both `http_bind_address` and `http_interface` have higher priority than `http_ip`.\n  - The `http_bind_address` is matched against the IP addresses of the host's network interfaces. If\n    no match is found, the plugin will terminate.\n  - Similarly, `http_interface` is compared with the host's network interfaces. If there's no\n    corresponding network interface, the plugin will also terminate.\n  - If neither `http_bind_address`, `http_interface`, and `http_ip` are provided, the plugin will\n    automatically find and use the IP address of the first non-loopback interface for `http_ip`.\n\n### Floppy Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the FloppyConfig struct in builder/vsphere/common/step_add_floppy.go; DO NOT EDIT MANUALLY -->\n\n- `floppy_img_path` (string) - Datastore path to a floppy image that will be mounted to the virtual\n  machine. Example: `[datastore] iso/foo.flp`.\n\n- `floppy_files` ([]string) - A list of local files to be mounted to the virtual machine's floppy\n  drive.\n\n- `floppy_dirs` ([]string) - A list of directories to copy files from.\n\n- `floppy_content` (map[string]string) - Key/Values to add to the floppy disk. The keys represent the paths, and\n  the values contents. It can be used alongside `floppy_files` or\n  `floppy_dirs`, which is useful to add large files without loading them\n  into memory. If any paths are specified by both, the contents in\n  `floppy_content` will take precedence.\n  \n  HCL Example:\n  \n  ```hcl\n  floppy_content = {\n    \"meta-data\" = jsonencode(local.instance_data)\n    \"user-data\" = templatefile(\"user-data\", { packages = [\"nginx\"] })\n  }\n  ```\n\n- `floppy_label` (string) - The label to use for the floppy disk that is attached when the virtual\n  machine is booted. This is most useful for cloud-init, Kickstart or other\n  early initialization tools, which can benefit from labelled floppy disks.\n  By default, the floppy label will be 'packer'.\n\n<!-- End of code generated from the comments of the FloppyConfig struct in builder/vsphere/common/step_add_floppy.go; -->\n\n\n### Connection Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the ConnectConfig struct in builder/vsphere/common/step_connect.go; DO NOT EDIT MANUALLY -->\n\n- `vcenter_server` (string) - The fully qualified domain name or IP address of the vCenter Server\n  instance.\n\n- `username` (string) - The username to authenticate with the vCenter Server instance.\n\n- `password` (string) - The password to authenticate with the vCenter Server instance.\n\n- `insecure_connection` (bool) - Do not validate the certificate of the vCenter Server instance.\n  Defaults to `false`.\n  \n  -> **Note:** This option is beneficial in scenarios where the certificate\n  is self-signed or does not meet standard validation criteria.\n\n- `datacenter` (string) - The name of the datacenter object in the vSphere inventory.\n  \n  -> **Note:** Required if more than one datacenter object exists in the\n  vSphere inventory.\n\n<!-- End of code generated from the comments of the ConnectConfig struct in builder/vsphere/common/step_connect.go; -->\n\n\n### Hardware Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the HardwareConfig struct in builder/vsphere/common/step_hardware.go; DO NOT EDIT MANUALLY -->\n\n- `CPUs` (int32) - The number of virtual CPUs cores for the virtual machine.\n\n- `cpu_cores` (int32) - The number of virtual CPU cores per socket for the virtual machine.\n\n- `CPU_reservation` (int64) - The CPU reservation in MHz.\n\n- `CPU_limit` (int64) - The upper limit of available CPU resources in MHz.\n\n- `CPU_hot_plug` (bool) - Enable CPU hot plug setting for virtual machine. Defaults to `false`\n\n- `RAM` (int64) - The amount of memory for the virtual machine in MB.\n\n- `RAM_reservation` (int64) - The guaranteed minimum allocation of memory for the virtual machine in MB.\n\n- `RAM_reserve_all` (bool) - Reserve all allocated memory. Defaults to `false`.\n  \n  -> **Note:** May not be used together with `RAM_reservation`.\n\n- `RAM_hot_plug` (bool) - Enable memory hot add setting for virtual machine. Defaults to `false`.\n\n- `video_ram` (int64) - The amount of video memory in KB. Defaults to 4096 KB.\n  \n  -> **Note:** Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-789C3913-1053-4850-A0F0-E29C3D32B6DA.html)\n  for supported maximums.\n\n- `displays` (int32) - The number of video displays. Defaults to `1`.\n  \n  `-> **Note:** Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-789C3913-1053-4850-A0F0-E29C3D32B6DA.html)\n  for supported maximums.\n\n- `pci_passthrough_allowed_device` ([]PCIPassthroughAllowedDevice) - Configure Dynamic DirectPath I/O [PCI Passthrough](#pci-passthrough-configuration) for\n  virtual machine. Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-5B3CAB26-5D06-4A99-92A0-3A04C69CE64B.html)\n\n- `vgpu_profile` (string) - vGPU profile for accelerated graphics. Refer to the [NVIDIA GRID vGPU documentation](https://docs.nvidia.com/grid/latest/grid-vgpu-user-guide/index.html#configure-vmware-vsphere-vm-with-vgpu)\n  for examples of profile names. Defaults to none.\n\n- `NestedHV` (bool) - Enable nested hardware virtualization for the virtual machine.\n  Defaults to `false`.\n\n- `firmware` (string) - The firmware for the virtual machine.\n  \n  The available options for this setting are: 'bios', 'efi', and\n  'efi-secure'.\n  \n  -> **Note:** Use `efi-secure` for UEFI Secure Boot.\n\n- `force_bios_setup` (bool) - Force entry into the BIOS setup screen during boot. Defaults to `false`.\n\n- `vTPM` (bool) - Enable virtual trusted platform module (TPM) device for the virtual\n  machine. Defaults to `false`.\n\n- `precision_clock` (string) - The virtual precision clock device for the virtual machine.\n  Defaults to `none`.\n  \n  The available options for this setting are: `none`, `ntp`, and `ptp`.\n\n<!-- End of code generated from the comments of the HardwareConfig struct in builder/vsphere/common/step_hardware.go; -->\n\n\n### Location Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the LocationConfig struct in builder/vsphere/common/config_location.go; DO NOT EDIT MANUALLY -->\n\n- `vm_name` (string) - The name of the virtual machine.\n\n- `folder` (string) - The virtual machine folder where the virtual machine is created.\n\n- `cluster` (string) - The cluster where the virtual machine is created.\n  Refer to the [Working With Clusters And Hosts](#working-with-clusters-and-hosts)\n  section for more details.\n\n- `host` (string) - The ESXi host where the virtual machine is created. A full path must be\n  specified if the ESXi host is in a folder. For example `folder/host`.\n  Refer to the [Working With Clusters And Hosts](#working-with-clusters-and-hosts)\n  section for more details.\n\n- `resource_pool` (string) - The resource pool where the virtual machine is created.\n  If this is not specified, the root resource pool associated with the\n  `host` or `cluster` is used.\n  \n  ~> **Note:**  The full path to the resource pool must be provided.\n  For example, a simple resource pool path might resemble `rp-packer` and\n  a nested path might resemble 'rp-packer/rp-linux-images'.\n\n- `datastore` (string) - The datastore where the virtual machine is created.\n  Required if `host` is a cluster, or if `host` has multiple datastores.\n\n- `set_host_for_datastore_uploads` (bool) - The ESXI host used for uploading files to the datastore.\n  Defaults to `false`.\n\n<!-- End of code generated from the comments of the LocationConfig struct in builder/vsphere/common/config_location.go; -->\n\n\n### Run Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the RunConfig struct in builder/vsphere/common/step_run.go; DO NOT EDIT MANUALLY -->\n\n- `boot_order` (string) - The priority of boot devices. Defaults to `disk,cdrom`.\n  \n  The available boot devices are: `floppy`, `cdrom`, `ethernet`, and\n  `disk`.\n  \n  -> **Note:** If not set, the boot order is temporarily set to\n  `disk,cdrom` for the duration of the build and then cleared upon\n  build completion.\n\n<!-- End of code generated from the comments of the RunConfig struct in builder/vsphere/common/step_run.go; -->\n\n\n### Shutdown Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the ShutdownConfig struct in builder/vsphere/common/step_shutdown.go; DO NOT EDIT MANUALLY -->\n\n- `shutdown_command` (string) - Specify a VM guest shutdown command. This command will be executed using\n  the `communicator`. Otherwise, the VMware Tools are used to gracefully shutdown\n  the VM.\n\n- `shutdown_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for graceful VM shutdown.\n  Defaults to 5m or five minutes.\n  This will likely need to be modified if the `communicator` is 'none'.\n\n- `disable_shutdown` (bool) - Packer normally halts the virtual machine after all provisioners have\n  run when no `shutdown_command` is defined. If this is set to `true`, Packer\n  *will not* halt the virtual machine but will assume that you will send the stop\n  signal yourself through a preseed.cfg, a script or the final provisioner.\n  Packer will wait for a default of five minutes until the virtual machine is shutdown.\n  The timeout can be changed using `shutdown_timeout` option.\n\n<!-- End of code generated from the comments of the ShutdownConfig struct in builder/vsphere/common/step_shutdown.go; -->\n\n\n### Wait Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the WaitIpConfig struct in builder/vsphere/common/step_wait_for_ip.go; DO NOT EDIT MANUALLY -->\n\n- `ip_wait_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'.\n  Defaults to 30m (30 minutes). See the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration) documentation\n  for full details.\n\n- `ip_settle_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP to settle down, sometimes VM may\n  report incorrect IP initially, then its recommended to set that\n  parameter to apx. 2 minutes. Examples 45s and 10m. Defaults to\n  5s(5 seconds). Refer to the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration) documentation\n   for full details.\n\n- `ip_wait_address` (\\*string) - Set this to a CIDR address to cause the service to wait for an address that is contained in\n  this network range. Defaults to \"0.0.0.0/0\" for any ipv4 address. Examples include:\n  \n  * empty string (\"\") - remove all filters\n  * `0:0:0:0:0:0:0:0/0` - allow only ipv6 addresses\n  * `192.168.1.0/24` - only allow ipv4 addresses from 192.168.1.1 to 192.168.1.254\n\n<!-- End of code generated from the comments of the WaitIpConfig struct in builder/vsphere/common/step_wait_for_ip.go; -->\n\n\n### CD-ROM Configuration\n\n<!-- Code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; DO NOT EDIT MANUALLY -->\n\nAn iso (CD) containing custom files can be made available for your build.\n\nBy default, no extra CD will be attached. All files listed in this setting\nget placed into the root directory of the CD and the CD is attached as the\nsecond CD device.\n\nThis config exists to work around modern operating systems that have no\nway to mount floppy disks, which was our previous go-to for adding files at\nboot time.\n\n<!-- End of code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; DO NOT EDIT MANUALLY -->\n\n- `cd_files` ([]string) - A list of files to place onto a CD that is attached when the VM is\n  booted. This can include either files or directories; any directories\n  will be copied onto the CD recursively, preserving directory structure\n  hierarchy. Symlinks will have the link's target copied into the directory\n  tree on the CD where the symlink was. File globbing is allowed.\n  \n  Usage example (JSON):\n  \n  ```json\n  \"cd_files\": [\"./somedirectory/meta-data\", \"./somedirectory/user-data\"],\n  \"cd_label\": \"cidata\",\n  ```\n  \n  Usage example (HCL):\n  \n  ```hcl\n  cd_files = [\"./somedirectory/meta-data\", \"./somedirectory/user-data\"]\n  cd_label = \"cidata\"\n  ```\n  \n  The above will create a CD with two files, user-data and meta-data in the\n  CD root. This specific example is how you would create a CD that can be\n  used for an Ubuntu 20.04 autoinstall.\n  \n  Since globbing is also supported,\n  \n  ```hcl\n  cd_files = [\"./somedirectory/*\"]\n  cd_label = \"cidata\"\n  ```\n  \n  Would also be an acceptable way to define the above cd. The difference\n  between providing the directory with or without the glob is whether the\n  directory itself or its contents will be at the CD root.\n  \n  Use of this option assumes that you have a command line tool installed\n  that can handle the iso creation. Packer will use one of the following\n  tools:\n  \n    * xorriso\n    * mkisofs\n    * hdiutil (normally found in macOS)\n    * oscdimg (normally found in Windows as part of the Windows ADK)\n\n- `cd_content` (map[string]string) - Key/Values to add to the CD. The keys represent the paths, and the values\n  contents. It can be used alongside `cd_files`, which is useful to add large\n  files without loading them into memory. If any paths are specified by both,\n  the contents in `cd_content` will take precedence.\n  \n  Usage example (HCL):\n  \n  ```hcl\n  cd_files = [\"vendor-data\"]\n  cd_content = {\n    \"meta-data\" = jsonencode(local.instance_data)\n    \"user-data\" = templatefile(\"user-data\", { packages = [\"nginx\"] })\n  }\n  cd_label = \"cidata\"\n  ```\n\n- `cd_label` (string) - CD Label\n\n<!-- End of code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; -->\n\n\n<!-- Code generated from the comments of the CDRomConfig struct in builder/vsphere/common/step_add_cdrom.go; DO NOT EDIT MANUALLY -->\n\n- `cdrom_type` (string) - The type of controller to use for the CD-ROM device. Defaults to `ide`.\n  \n  The available options for this setting are: `ide` and `sata`.\n\n- `iso_paths` ([]string) - A list of paths to ISO files in either a datastore or a content library\n  that will be attached to the virtual machine.\n  \n  HCL Example:\n  \n  ```hcl\n  iso_paths = [\n    \"[nfs] iso/ubuntu-server-amd64.iso\",\n    \"Example Content Library/ubuntu-server-amd64/ubuntu-server-amd64.iso\"\n  ]\n  ```\n  \n  JSON Example:\n  \n  ```json\n  \"iso_paths\": [\n    \"[nfs] iso/ubuntu-server-amd64.iso\",\n    \"Example Content Library/ubuntu-server-amd64/ubuntu-server-amd64.iso\"\n  ]\n  ```\n  \n  Two ISOs are referenced:\n  \n  1. An ISO in the \"_iso_\" folder of the \"_nfs_\" datastore with the file\n    name of \"_ubuntu-server-amd64.iso_\". \"_ubuntu-server-amd64.iso_\".\n  2. An ISO in the \"_Example Content Library_\" content library with the\n    item name of \"_ubuntu-server-amd64_\".\n  \n  -> **Note:** All files in a content library have an associated item name.\n  To determine the file name, view the datastore backing the content\n  library or use the `govc` vSphere CLI.\n\n<!-- End of code generated from the comments of the CDRomConfig struct in builder/vsphere/common/step_add_cdrom.go; -->\n\n\n<!-- Code generated from the comments of the RemoveCDRomConfig struct in builder/vsphere/common/step_remove_cdrom.go; DO NOT EDIT MANUALLY -->\n\n- `remove_cdrom` (bool) - Remove all CD-ROM devices from the virtual machine when the build is\n  complete. Defaults to `false`.\n\n<!-- End of code generated from the comments of the RemoveCDRomConfig struct in builder/vsphere/common/step_remove_cdrom.go; -->\n\n\n### Communicator Configuration\n\n#### Common\n\n**Optional:**\n\n<!-- Code generated from the comments of the Config struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `communicator` (string) - Packer currently supports three kinds of communicators:\n  \n  -   `none` - No communicator will be used. If this is set, most\n      provisioners also can't be used.\n  \n  -   `ssh` - An SSH connection will be established to the machine. This\n      is usually the default.\n  \n  -   `winrm` - A WinRM connection will be established.\n  \n  In addition to the above, some builders have custom communicators they\n  can use. For example, the Docker builder has a \"docker\" communicator\n  that uses `docker exec` and `docker cp` to execute scripts and copy\n  files.\n\n- `pause_before_connecting` (duration string | ex: \"1h5m2s\") - We recommend that you enable SSH or WinRM as the very last step in your\n  guest's bootstrap script, but sometimes you may have a race condition\n  where you need Packer to wait before attempting to connect to your\n  guest.\n  \n  If you end up in this situation, you can use the template option\n  `pause_before_connecting`. By default, there is no pause. For example if\n  you set `pause_before_connecting` to `10m` Packer will check whether it\n  can connect, as normal. But once a connection attempt is successful, it\n  will disconnect and then wait 10 minutes before connecting to the guest\n  and beginning provisioning.\n\n<!-- End of code generated from the comments of the Config struct in communicator/config.go; -->\n\n\n#### SSH\n\n**Optional:**\n\n<!-- Code generated from the comments of the SSH struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `ssh_host` (string) - The address to SSH to. This usually is automatically configured by the\n  builder.\n\n- `ssh_port` (int) - The port to connect to SSH. This defaults to `22`.\n\n- `ssh_username` (string) - The username to connect to SSH with. Required if using SSH.\n\n- `ssh_password` (string) - A plaintext password to use to authenticate with SSH.\n\n- `ssh_ciphers` ([]string) - This overrides the value of ciphers supported by default by Golang.\n  The default value is [\n    \"aes128-gcm@openssh.com\",\n    \"chacha20-poly1305@openssh.com\",\n    \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n  ]\n  \n  Valid options for ciphers include:\n  \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"aes128-gcm@openssh.com\",\n  \"chacha20-poly1305@openssh.com\",\n  \"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",\n\n- `ssh_clear_authorized_keys` (bool) - If true, Packer will attempt to remove its temporary key from\n  `~/.ssh/authorized_keys` and `/root/.ssh/authorized_keys`. This is a\n  mostly cosmetic option, since Packer will delete the temporary private\n  key from the host system regardless of whether this is set to true\n  (unless the user has set the `-debug` flag). Defaults to \"false\";\n  currently only works on guests with `sed` installed.\n\n- `ssh_key_exchange_algorithms` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\n  supported by default by Golang. Acceptable values include:\n  \"curve25519-sha256@libssh.org\", \"ecdh-sha2-nistp256\",\n  \"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n  \"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".\n\n- `ssh_certificate_file` (string) - Path to user certificate used to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_pty` (bool) - If `true`, a PTY will be requested for the SSH connection. This defaults\n  to `false`.\n\n- `ssh_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\n  determine when the machine has booted so this is usually quite long.\n  Example value: `10m`.\n  This defaults to `5m`, unless `ssh_handshake_attempts` is set.\n\n- `ssh_disable_agent_forwarding` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `false`.\n\n- `ssh_handshake_attempts` (int) - The number of handshakes to attempt with SSH once it can connect.\n  This defaults to `10`, unless a `ssh_timeout` is set.\n\n- `ssh_bastion_host` (string) - A bastion host to use for the actual SSH connection.\n\n- `ssh_bastion_port` (int) - The port of the bastion host. Defaults to `22`.\n\n- `ssh_bastion_agent_auth` (bool) - If `true`, the local SSH agent will be used to authenticate with the\n  bastion host. Defaults to `false`.\n\n- `ssh_bastion_username` (string) - The username to connect to the bastion host.\n\n- `ssh_bastion_password` (string) - The password to use to authenticate with the bastion host.\n\n- `ssh_bastion_interactive` (bool) - If `true`, the keyboard-interactive used to authenticate with bastion host.\n\n- `ssh_bastion_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with the\n  bastion host. The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_bastion_certificate_file` (string) - Path to user certificate used to authenticate with bastion host.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_file_transfer_method` (string) - `scp` or `sftp` - How to transfer files, Secure copy (default) or SSH\n  File Transfer Protocol.\n  \n  **NOTE**: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n  (the default protocol for copying data) returns a a non-zero error code since the MOTW\n  cannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\n  with SFTP instead `ssh_file_transfer_method = \"sftp\"`.\n\n- `ssh_proxy_host` (string) - A SOCKS proxy host to use for SSH connection\n\n- `ssh_proxy_port` (int) - A port of the SOCKS proxy. Defaults to `1080`.\n\n- `ssh_proxy_username` (string) - The optional username to authenticate with the proxy server.\n\n- `ssh_proxy_password` (string) - The optional password to use to authenticate with the proxy server.\n\n- `ssh_keep_alive_interval` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\n  value (`-1s`) to disable. Example value: `10s`. Defaults to `5s`.\n\n- `ssh_read_write_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\n  useful if, for example, packer hangs on a connection after a reboot.\n  Example: `5m`. Disabled by default.\n\n- `ssh_remote_tunnels` ([]string) - \n\n- `ssh_local_tunnels` ([]string) - \n\n<!-- End of code generated from the comments of the SSH struct in communicator/config.go; -->\n\n\n<!-- Code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `temporary_key_pair_type` (string) - `dsa` | `ecdsa` | `ed25519` | `rsa` ( the default )\n  \n  Specifies the type of key to create. The possible values are 'dsa',\n  'ecdsa', 'ed25519', or 'rsa'.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure, please\n  consider other alternatives like RSA or ED25519.\n\n- `temporary_key_pair_bits` (int) - Specifies the number of bits in the key to create. For RSA keys, the\n  minimum size is 1024 bits and the default is 4096 bits. Generally, 3072\n  bits is considered sufficient. DSA keys must be exactly 1024 bits as\n  specified by FIPS 186-2. For ECDSA keys, bits determines the key length\n  by selecting from one of three elliptic curve sizes: 256, 384 or 521\n  bits. Attempting to use bit lengths other than these three values for\n  ECDSA keys will fail. Ed25519 keys have a fixed length and bits will be\n  ignored.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure as specified\n  by FIPS 186-5, please consider other alternatives like RSA or ED25519.\n\n<!-- End of code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; -->\n\n\n- `ssh_keypair_name` (string) - If specified, this is the key that will be used for SSH with the\n  machine. The key must match a key pair name loaded up into the remote.\n  By default, this is blank, and Packer will generate a temporary keypair\n  unless [`ssh_password`](#ssh_password) is used.\n  [`ssh_private_key_file`](#ssh_private_key_file) or\n  [`ssh_agent_auth`](#ssh_agent_auth) must be specified when\n  [`ssh_keypair_name`](#ssh_keypair_name) is utilized.\n\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n- `ssh_agent_auth` (bool) - If true, the local SSH agent will be used to authenticate connections to\n  the source instance. No temporary keypair will be created, and the\n  values of [`ssh_password`](#ssh_password) and\n  [`ssh_private_key_file`](#ssh_private_key_file) will be ignored. The\n  environment variable `SSH_AUTH_SOCK` must be set for this option to work\n  properly.\n\n\n-> **NOTE:** The builder uses vApp Options to inject SSH public keys to the virtual machine. The `temporary_key_pair_name`\nwill only work if the template being cloned contains the vApp property `public-keys`. If using `ssh_private_key_file`,\nprovide the public key using the `configuration_parameters` or [vApp Options Configuration](/packer/integrations/hashicorp/vsphere/latest/components/builder/vsphere-clone#vapp-options-configuration) whenever the `guestinto.userdata` is available.\nRefer to the [VMware](https://docs.cloud-init.io/en/latest/reference/data-source/vmware.html) datasource in cloud-init 21.3 and later for additional information.\n\n#### Windows Remote Management (WinRM)\n\n**Optional:**\n\n<!-- Code generated from the comments of the WinRM struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `winrm_username` (string) - The username to use to connect to WinRM.\n\n- `winrm_password` (string) - The password to use to connect to WinRM.\n\n- `winrm_host` (string) - The address for WinRM to connect to.\n  \n  NOTE: If using an Amazon EBS builder, you can specify the interface\n  WinRM connects to via\n  [`ssh_interface`](/packer/integrations/hashicorp/amazon/latest/components/builder/ebs#ssh_interface)\n\n- `winrm_no_proxy` (bool) - Setting this to `true` adds the remote\n  `host:port` to the `NO_PROXY` environment variable. This has the effect of\n  bypassing any configured proxies when connecting to the remote host.\n  Default to `false`.\n\n- `winrm_port` (int) - The WinRM port to connect to. This defaults to `5985` for plain\n  unencrypted connection and `5986` for SSL when `winrm_use_ssl` is set to\n  true.\n\n- `winrm_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for WinRM to become available. This defaults\n  to `30m` since setting up a Windows machine generally takes a long time.\n\n- `winrm_use_ssl` (bool) - If `true`, use HTTPS for WinRM.\n\n- `winrm_insecure` (bool) - If `true`, do not check server certificate chain and host name.\n\n- `winrm_use_ntlm` (bool) - If `true`, NTLMv2 authentication (with session security) will be used\n  for WinRM, rather than default (basic authentication), removing the\n  requirement for basic authentication to be enabled within the target\n  guest. Further reading for remote connection authentication can be found\n  [here](https://msdn.microsoft.com/en-us/library/aa384295(v=vs.85).aspx).\n\n<!-- End of code generated from the comments of the WinRM struct in communicator/config.go; -->\n\n\n### Export Configuration\n\n<!-- Code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; DO NOT EDIT MANUALLY -->\n\nYou can export an image in Open Virtualization Format (OVF) to the Packer\nhost.\n\nHCL Example:\n\n```hcl\n\n\t# ...\n\tvm_name = \"example-ubuntu\"\n\t# ...\n\texport {\n\t  force = true\n\t  output_directory = \"./output-artifacts\"\n\t}\n\n```\n\nJSON Example:\n\n```json\n...\n\n\t\"vm_name\": \"example-ubuntu\",\n\n...\n\n\t\"export\": {\n\t  \"force\": true,\n\t  \"output_directory\": \"./output-artifacts\"\n\t},\n\n```\n\nThe above configuration would create the following files:\n\n```text\n./output-artifacts/example-ubuntu-disk-0.vmdk\n./output-artifacts/example-ubuntu.mf\n./output-artifacts/example-ubuntu.ovf\n```\n\n<!-- End of code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; DO NOT EDIT MANUALLY -->\n\n- `name` (string) - The name of the exported image in Open Virtualization Format (OVF).\n  \n  -> **Note:** The name of the virtual machine with the `.ovf` extension is\n  used if this option is not specified.\n\n- `force` (bool) - Forces the export to overwrite existing files. Defaults to `false`.\n  If set to `false`, an error is returned if the file(s) already exists.\n\n- `image_files` (bool) - Include additional image files that are that are associated with the\n  virtual machine. Defaults to `false`. For example, `.nvram` and `.log`\n  files.\n\n- `manifest` (string) - The hash algorithm to use when generating a manifest file. Defaults to\n  `sha256`.\n  \n  The available options for this setting are: 'none', 'sha1', 'sha256', and\n  'sha512'.\n  \n  --> **Tip:** Use `none` to disable the creation of a manifest file.\n\n- `options` ([]string) - Advanced image export options. Available options include:\n  * `mac` - MAC address is exported for each Ethernet device.\n  * `uuid` - UUID is exported for the virtual machine.\n  * `extraconfig` - Extra configuration options are exported for the\n    virtual machine.\n  * `nodevicesubtypes` - Resource subtypes for CD/DVD drives, floppy\n    drives, and SCSI controllers are not exported.\n  \n  For example, adding the following export configuration option outputs the\n  MAC addresses for each Ethernet device in the OVF descriptor:\n  \n  HCL Example:\n  \n  ```hcl\n  ...\n    export {\n      options = [\"mac\"]\n    }\n  ```\n  \n  JSON: Example:\n  \n  ```json\n  ...\n    \"export\": {\n      \"options\": [\"mac\"]\n    },\n  ```\n\n- `output_format` (string) - The output format for the exported virtual machine image.\n  Defaults to `ovf`. Available options include `ovf` and `ova`.\n  \n  When set to `ova`, the image is first exported using Open Virtualization\n  Format (`.ovf`) and then converted to an Open Virtualization Archive\n  (`.ova`) using the VMware [Open Virtualization Format Tool](https://developer.broadcom.com/tools/open-virtualization-format-ovf-tool/latest)\n  (ovftool). The intermediate files are removed after the conversion.\n  \n  ~> **Note:** To use the `ova` format option, VMware ovftool must be\n  installed on the Packer host and accessible in either the system `PATH`\n  or the user's `PATH`.\n\n<!-- End of code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; -->\n\n\n### Output Configuration\n\n**Optional:**\n\n<!-- Code generated from the comments of the OutputConfig struct in builder/vsphere/common/output_config.go; DO NOT EDIT MANUALLY -->\n\n- `output_directory` (string) - The directory where artifacts from the build, such as the virtual machine\n  files and disks, will be output to. The path to the directory may be\n  relative or absolute. If relative, the path is relative to the working\n  directory Packer is run from. This directory must not exist or, if\n  created, must be empty prior to running the builder. By default this is\n  \"output-<buildName>\" where \"buildName\" is the name of the build.\n\n- `directory_permission` (os.FileMode) - The permissions to apply to the \"output_directory\", and to any parent\n  directories that get created for output_directory.  By default this is\n  \"0750\". You should express the permission as quoted string with a\n  leading zero such as \"0755\" in JSON file, because JSON does not support\n  octal value. In Unix-like OS, the actual permission may differ from\n  this value because of umask.\n\n<!-- End of code generated from the comments of the OutputConfig struct in builder/vsphere/common/output_config.go; -->\n\n\n### Content Library Configuration\n\n<!-- Code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; DO NOT EDIT MANUALLY -->\n\nCreate a content library item in a content library whose content is a VM\ntemplate or an OVF template created from the virtual machine image after\nthe build is complete.\n\nThe template is stored in a existing or newly created library item.\n\n<!-- End of code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; DO NOT EDIT MANUALLY -->\n\n- `library` (string) - The name of the content library in which the new content library item\n  containing the template will be created or updated. The content library\n  must be of type Local to allow deploying virtual machines.\n\n- `name` (string) - The name of the content library item that will be created or updated.\n  For VM templates, the name of the item should be different from\n  [vm_name](#vm_name) and the default is [vm_name](#vm_name) + timestamp\n  when not set. VM templates will be always imported to a new library item.\n  For OVF templates, the name defaults to [vm_name](#vm_name) when not set,\n  and if an item with the same name already exists it will be then updated\n  with the new OVF template, otherwise a new item will be created.\n  \n  ~> **Note:** It's not possible to update existing content library items\n  with a new VM template. If updating an existing content library item is\n  necessary, use an OVF template instead by setting the [ovf](#ovf) option\n  as `true`.\n\n- `description` (string) - A description for the content library item that will be created.\n  Defaults to \"Packer imported [vm_name](#vm_name) VM template\".\n\n- `cluster` (string) - The cluster where the VM template will be placed.\n  If `cluster` and `resource_pool` are both specified, `resource_pool` must\n  belong to cluster. If `cluster` and `host` are both specified, the ESXi\n  host must be a member of the cluster. This option is not used when\n  importing OVF templates. Defaults to [`cluster`](#cluster).\n\n- `folder` (string) - The virtual machine folder where the VM template will be placed.\n  This option is not used when importing OVF templates. Defaults to\n  the same folder as the source virtual machine.\n\n- `host` (string) - The ESXi host where the virtual machine template will be placed.\n  If `host` and `resource_pool` are both specified, `resource_pool` must\n  belong to host. If `host` and `cluster` are both specified, `host` must\n  be a member of the cluster. This option is not used when importing OVF\n  templates. Defaults to [`host`](#host).\n\n- `resource_pool` (string) - The resource pool where the virtual machine template will be placed.\n  Defaults to [`resource_pool`](#resource_pool). If [`resource_pool`](#resource_pool)\n  is unset, the system will attempt to choose a suitable resource pool\n  for the VM template.\n\n- `datastore` (string) - The datastore for the virtual machine template's configuration and log\n  files. This option is not used when importing OVF templates.\n  Defaults to the storage backing associated with the content library.\n\n- `destroy` (bool) - Destroy the virtual machine after the import to the content library.\n  Defaults to `false`.\n\n- `ovf` (bool) - Import an OVF template to the content library item. Defaults to `false`.\n\n- `skip_import` (bool) - Skip the import to the content library item. Useful during a build test\n  stage. Defaults to `false`.\n\n- `ovf_flags` ([]string) - Flags to use for OVF package creation. The supported flags can be\n  obtained using ExportFlag.list. If unset, no flags will be used.\n  Known values: `EXTRA_CONFIG`, `PRESERVE_MAC`.\n\n<!-- End of code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; -->\n\n\nHCL Example:\n\n```hcl\n\tcontent_library_destination {\n\t\tlibrary = \"Example Content Library\"\n\t}\n```\n\nJSON Example:\n\n```json\n\t\"content_library_destination\" : {\n\t    \"library\": \"Example Content Library\"\n\t}\n```\n\n## Working with Clusters and Hosts\n\n### Standalone ESXi Hosts\n\nOnly use the `host` option. Optionally, specify a `resource_pool`:\n\nHCL Example:\n\n```hcl\n  host = \"esxi-01.example.com\"\n  resource_pool = \"example_resource_pool\"\n```\n\nJSON Example:\n\n```json\n  \"host\": \"esxi-01.example.com\",\n  \"resource_pool\": \"example_resource_pool\",\n```\n\n### Clusters with Distributed Resource Scheduler Enabled\n\nOnly use the `cluster` option. Optionally, specify a `resource_pool`:\n\nHCL Example:\n\n```hcl\n  cluster = \"cluster-01\"\n  resource_pool = \"example_resource_pool\"\n```\n\nJSON Example:\n\n```json\n  \"cluster\": \"cluster-01\",\n  \"resource_pool\": \"example_resource_pool\",\n```\n\n### Clusters without Distributed Resource Scheduler Enabled\n\nUse the `cluster` and `host` parameters:\n\nHCL Example:\n\n```hcl\n  cluster = \"cluster-01\"\n  host = \"esxi-01.example.com\"\n```\n\nJSON Example:\n\n```json\n  \"cluster\": \"cluster-01\",\n  \"host\": \"esxi-01.example.com\",\n```\n\n## Privileges\n\n- VM folder (this object and children):\n\n  ```text\n  Virtual machine > Inventory\n  Virtual machine > Configuration\n  Virtual machine > Interaction\n  Virtual machine > Snapshot management\n  Virtual machine > Provisioning\n  ```\n\n- Resource pool, host, or cluster (this object):\n\n  ```text\n  Resource -> Assign virtual machine to resource pool\n  ```\n\n- Host in clusters without DRS (this object):\n\n  ```text\n  Read-only\n  ```\n\n- Datastore (this object):\n\n  ```text\n  Datastore > Allocate space\n  Datastore > Browse datastore\n  Datastore > Low level file operations\n  ```\n\n- Network (this object):\n\n  ```text\n  Network > Assign network\n  ```\n\n- Distributed switch (this object):\n\n  ```text\n  Read-only\n  ```\n\n- Datacenter (this object):\n\n  ```text\n  Datastore > Low level file operations\n  ```\n\n- Host (this object):\n\n  ```text\n  Host > Configuration > System Management\n  ```\n","created_at":"2024-10-17T21:00:16.080Z","updated_at":"2024-10-17T21:00:16.080Z","name":"vSphere Clone","slug":"vsphere-clone","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},{"id":"f192b554-cf60-4528-8271-77bb246eb235","integration_release_id":"1ee34d8e-f6a0-4142-80c4-96b24f19da59","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `vsphere-supervisor`\n\nArtifact BuilderId: `vsphere.supervisor`\n\nThis builder creates a virtual machine on a vSphere Supervisor cluster using the VM-Operator API.\n\nRefer to [Deploying and Managing Virtual Machines in vSphere with Tanzu](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-with-tanzu-services-workloads/GUID-F81E3535-C275-4DDE-B35F-CE759EA3B4A0.html)\nfor more information on the VM Service functionality in vSphere with Tanzu.\n\n- It uses a `kubeconfig` file to connect to the vSphere Supervisor cluster.\n- It uses the [VM-Operator API](https://vm-operator.readthedocs.io/en/latest/concepts/) to deploy\n  and configure the source virtual machine.\n- It cna use Packer provisioners to customize the virtual machine after establishing a successful\n  connection.\n- It publishes the customized virtual machine as a new virtual machine image to the designated\n  content library in vSphere.\n\n-> **Note:** This builder is developed to maintain compatibility with VMware vSphere versions until\ntheir respective End of General Support dates. For detailed information, refer to the\n[Broadcom Product Lifecycle](https://support.broadcom.com/group/ecx/productlifecycle).\n\n## Examples\n\nExamples are available in the [examples](https://github.com/hashicorp/packer-plugin-vsphere/tree/main/examples/)\ndirectory of the GitHub repository.\n\nHCL Example:\n\n```hcl\nsource \"vsphere-supervisor\" \"example-vm\" {\n  image_name = \"<Image name of the source VM, e.g. 'ubuntu-impish-21.10-cloudimg'>\"\n  class_name = \"<VM class that describes the virtual hardware settings, e.g. 'best-effort-large'>\"\n  storage_class = \"<Storage class that provides the backing storage for volume, e.g. 'wcplocal-storage-profile'>\"\n  bootstrap_provider = \"<CloudInit, Sysprep, or vAppConfig to customize the guest OS>\"\n  bootstrap_data_file = \"<Path to the file containing the bootstrap data for guest OS customization>\"\n  publish_location_name = \"<target location / content library for the published image, optional, e.g. 'cl-6066c61f7931c5ef9'>\"\n}\n\nbuild {\n  sources = [\"source.vsphere-supervisor.example-vm\"]\n}\n```\n\nHCL Example with image import:\n\n```hcl\nsource \"vsphere-supervisor\" \"example-vm\" {\n  import_source_url = \"<Remote URL to import image from, optional, e.g. 'https://example.com/example.ovf'>\"\n  import_source_ssl_certificate = \"<SSL certificate of the remote HTTPS server, optional, e.g. '-----BEGIN CERTIFICATE-----xxxxx-----END CERTIFICATE-----'>\"\n  import_target_location_name = \"<Target location / content library for the imported image, optional, e.g. 'cl-6066c61f7931c5ef9'>\"\n  import_target_image_type = \"<Target image type of the imported image, optional, e.g. 'ovf'>\"\n  import_target_image_name = \"<Target image name of the imported image for the source VM, e.g. 'ubuntu-impish-21.10-cloudimg'>\"\n  class_name = \"<VM class that describes the virtual hardware settings, e.g. 'best-effort-large'>\"\n  storage_class = \"<Storage class that provides the backing storage for volume, e.g. 'wcplocal-storage-profile'>\"\n  bootstrap_provider = \"<CloudInit, Sysprep, or vAppConfig to customize the guest OS>\"\n  bootstrap_data_file = \"<Path to the file containing the bootstrap data for guest OS customization>\"\n  publish_location_name = \"<target location / content library for the published image, optional, e.g. 'cl-6066c61f7931c5ef9'>\"\n}\n\nbuild {\n  sources = [\"source.vsphere-supervisor.example-vm\"]\n}\n```\n\nJSON Example:\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"vsphere-supervisor\",\n      \"image_name\": \"<Image name of the source VM, e.g. 'ubuntu-impish-21.10-cloudimg'>\",\n      \"class_name\": \"<VM class that describes the virtual hardware settings, e.g. 'best-effort-large'>\",\n      \"storage_class\": \"<Storage class that provides the backing storage for volume, e.g. 'wcplocal-storage-profile'>\",\n      \"bootstrap_provider\": \"<CloudInit, Sysprep, or vAppConfig to customize the guest OS>\",\n      \"bootstrap_data_file\": \"<Path to the file containing the bootstrap data for guest OS customization>\",\n      \"publish_location_name\": \"<target location / content library for the published image, optional, e.g. 'cl-6066c61f7931c5ef9'>\"\n    }\n  ]\n}\n```\n\nJSON Example with image import:\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"vsphere-supervisor\",\n      \"import_source_url\": \"<Remote URL to import image from, optional, e.g. 'https://example.com/example.ovf'>\",\n      \"import_source_ssl_certificate\": \"<SSL certificate of the remote HTTPS server, optional, e.g. '-----BEGIN CERTIFICATE-----xxxxx-----END CERTIFICATE-----'>\",\n      \"import_target_location_name\": \"<Target location / content library for the import image, optional, e.g. 'cl-6066c61f7931c5ef9'>\",\n      \"import_target_image_type\": \"<Target image type of the imported image, optional, e.g. 'ovf'>\",\n      \"import_target_image_name\": \"<Target image name of the imported image for the source VM, e.g. 'ubuntu-impish-21.10-cloudimg'>\",\n      \"class_name\": \"<VM class that describes the virtual hardware settings, e.g. 'best-effort-large'>\",\n      \"storage_class\": \"<Storage class that provides the backing storage for volume, e.g. 'wcplocal-storage-profile'>\",\n      \"bootstrap_provider\": \"<CloudInit, Sysprep, or vAppConfig to customize the guest OS>\",\n      \"bootstrap_data_file\": \"<Path to the file containing the bootstrap data for guest OS customization>\",\n      \"publish_location_name\": \"<target location / content library for the published image, optional, e.g. 'cl-6066c61f7931c5ef9'>\"\n    }\n  ]\n}\n```\n\n## Configuration Reference\n\nThere are various configuration options available for each step in this builder. The _required_\nitems are listed below as well as the _optional_ configurations.\n\n**Required**:\n\n<!-- Code generated from the comments of the CreateSourceConfig struct in builder/vsphere/supervisor/step_create_source.go; DO NOT EDIT MANUALLY -->\n\n- `class_name` (string) - Name of the VM class that describes virtual hardware settings.\n\n- `storage_class` (string) - Name of the storage class that configures storage-related attributes.\n\n<!-- End of code generated from the comments of the CreateSourceConfig struct in builder/vsphere/supervisor/step_create_source.go; -->\n\n\n### Supervisor Connection\n\n**Optional**:\n\n<!-- Code generated from the comments of the ConnectSupervisorConfig struct in builder/vsphere/supervisor/step_connect_supervisor.go; DO NOT EDIT MANUALLY -->\n\n- `kubeconfig_path` (string) - The path to kubeconfig file for accessing to the vSphere Supervisor cluster. Defaults to the value of `KUBECONFIG` envvar or `$HOME/.kube/config` if the envvar is not set.\n\n- `supervisor_namespace` (string) - The Supervisor namespace to deploy the source VM. Defaults to the current context's namespace in kubeconfig.\n\n<!-- End of code generated from the comments of the ConnectSupervisorConfig struct in builder/vsphere/supervisor/step_connect_supervisor.go; -->\n\n\n#### Source VM Image Importing\n\n**Optional:**\n\n<!-- Code generated from the comments of the ImportImageConfig struct in builder/vsphere/supervisor/step_import_image.go; DO NOT EDIT MANUALLY -->\n\n- `import_source_url` (string) - The remote URL where the to-be-imported image is hosted.\n\n- `import_source_ssl_certificate` (string) - The SSL certificate of the remote HTTP server that hosts the to-be-imported image.\n\n- `import_target_location_name` (string) - Name of a writable and import-allowed ContentLibrary resource in the namespace where the image will be imported.\n\n- `import_target_image_type` (string) - The type of imported image.\n  Defaults to `ovf`. Available options include `ovf`.\n\n- `import_target_image_name` (string) - Name of the imported image.\n  Defaults to the file name of the image referenced in the source URL.\n\n- `import_request_name` (string) - The name of the image import request.\n  Defaults to `packer-vsphere-supervisor-import-req-<random-suffix>`.\n\n- `watch_import_timeout_sec` (int) - The timeout in seconds to wait for the image to be imported.\n  Defaults to `600`.\n\n- `keep_import_request` (bool) - Preserve the import request in the Supervisor cluster after the build finishes.\n  Defaults to `false`.\n\n- `clean_imported_image` (bool) - Clean the imported image after the build finishes. If set to `true`, the imported image will be deleted.\n  Defaults to `false`.\n\n<!-- End of code generated from the comments of the ImportImageConfig struct in builder/vsphere/supervisor/step_import_image.go; -->\n\n\n#### Source Virtual Machine Creation\n\n<!-- Code generated from the comments of the CreateSourceConfig struct in builder/vsphere/supervisor/step_create_source.go; DO NOT EDIT MANUALLY -->\n\n- `image_name` (string) - Name of the source virtual machine (VM) image. If it is specified, the image with the name will be used for the\n  source VM, otherwise the image name from imported image will be used.\n\n- `source_name` (string) - Name of the source VM. Limited to 15 characters. Defaults to `source-<random-5-digit-suffix>`.\n\n- `network_type` (string) - Name of the network type to attach to the source VM's network interface. Defaults to empty.\n\n- `network_name` (string) - Name of the network to attach to the source VM's network interface. Defaults to empty.\n\n- `keep_input_artifact` (bool) - Preserve all the created objects in Supervisor cluster after the build finishes. Defaults to `false`.\n\n- `bootstrap_provider` (string) - Name of the bootstrap provider to use for configuring the source VM.\n  Supported values are `CloudInit`, `Sysprep`, and `vAppConfig`. Defaults to `CloudInit`.\n\n- `bootstrap_data_file` (string) - Path to a file with bootstrap configuration data. Required if `bootstrap_provider` is not set to `CloudInit`.\n  Defaults to a basic cloud config that sets up the user account from the SSH communicator config.\n\n<!-- End of code generated from the comments of the CreateSourceConfig struct in builder/vsphere/supervisor/step_create_source.go; -->\n\n\n### Source Virtual Machine Watching\n\n**Optional**:\n\n<!-- Code generated from the comments of the WatchSourceConfig struct in builder/vsphere/supervisor/step_watch_source.go; DO NOT EDIT MANUALLY -->\n\n- `watch_source_timeout_sec` (int) - The timeout in seconds to wait for the source VM to be ready. Defaults to `1800`.\n\n<!-- End of code generated from the comments of the WatchSourceConfig struct in builder/vsphere/supervisor/step_watch_source.go; -->\n\n\n### Source Virtual Machine Publishing\n\n**Optional**:\n\n<!-- Code generated from the comments of the PublishSourceConfig struct in builder/vsphere/supervisor/step_publish_source.go; DO NOT EDIT MANUALLY -->\n\n- `publish_image_name` (string) - The name of the published VM image. If not specified, the vm-operator API will set a default name.\n\n- `watch_publish_timeout_sec` (int) - The timeout in seconds to wait for the VM to be published. Defaults to `600`.\n\n<!-- End of code generated from the comments of the PublishSourceConfig struct in builder/vsphere/supervisor/step_publish_source.go; -->\n\n\n### Communicator Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the SSH struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `ssh_host` (string) - The address to SSH to. This usually is automatically configured by the\n  builder.\n\n- `ssh_port` (int) - The port to connect to SSH. This defaults to `22`.\n\n- `ssh_username` (string) - The username to connect to SSH with. Required if using SSH.\n\n- `ssh_password` (string) - A plaintext password to use to authenticate with SSH.\n\n- `ssh_ciphers` ([]string) - This overrides the value of ciphers supported by default by Golang.\n  The default value is [\n    \"aes128-gcm@openssh.com\",\n    \"chacha20-poly1305@openssh.com\",\n    \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n  ]\n  \n  Valid options for ciphers include:\n  \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"aes128-gcm@openssh.com\",\n  \"chacha20-poly1305@openssh.com\",\n  \"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",\n\n- `ssh_clear_authorized_keys` (bool) - If true, Packer will attempt to remove its temporary key from\n  `~/.ssh/authorized_keys` and `/root/.ssh/authorized_keys`. This is a\n  mostly cosmetic option, since Packer will delete the temporary private\n  key from the host system regardless of whether this is set to true\n  (unless the user has set the `-debug` flag). Defaults to \"false\";\n  currently only works on guests with `sed` installed.\n\n- `ssh_key_exchange_algorithms` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\n  supported by default by Golang. Acceptable values include:\n  \"curve25519-sha256@libssh.org\", \"ecdh-sha2-nistp256\",\n  \"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n  \"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".\n\n- `ssh_certificate_file` (string) - Path to user certificate used to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_pty` (bool) - If `true`, a PTY will be requested for the SSH connection. This defaults\n  to `false`.\n\n- `ssh_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\n  determine when the machine has booted so this is usually quite long.\n  Example value: `10m`.\n  This defaults to `5m`, unless `ssh_handshake_attempts` is set.\n\n- `ssh_disable_agent_forwarding` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `false`.\n\n- `ssh_handshake_attempts` (int) - The number of handshakes to attempt with SSH once it can connect.\n  This defaults to `10`, unless a `ssh_timeout` is set.\n\n- `ssh_bastion_host` (string) - A bastion host to use for the actual SSH connection.\n\n- `ssh_bastion_port` (int) - The port of the bastion host. Defaults to `22`.\n\n- `ssh_bastion_agent_auth` (bool) - If `true`, the local SSH agent will be used to authenticate with the\n  bastion host. Defaults to `false`.\n\n- `ssh_bastion_username` (string) - The username to connect to the bastion host.\n\n- `ssh_bastion_password` (string) - The password to use to authenticate with the bastion host.\n\n- `ssh_bastion_interactive` (bool) - If `true`, the keyboard-interactive used to authenticate with bastion host.\n\n- `ssh_bastion_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with the\n  bastion host. The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_bastion_certificate_file` (string) - Path to user certificate used to authenticate with bastion host.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_file_transfer_method` (string) - `scp` or `sftp` - How to transfer files, Secure copy (default) or SSH\n  File Transfer Protocol.\n  \n  **NOTE**: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n  (the default protocol for copying data) returns a a non-zero error code since the MOTW\n  cannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\n  with SFTP instead `ssh_file_transfer_method = \"sftp\"`.\n\n- `ssh_proxy_host` (string) - A SOCKS proxy host to use for SSH connection\n\n- `ssh_proxy_port` (int) - A port of the SOCKS proxy. Defaults to `1080`.\n\n- `ssh_proxy_username` (string) - The optional username to authenticate with the proxy server.\n\n- `ssh_proxy_password` (string) - The optional password to use to authenticate with the proxy server.\n\n- `ssh_keep_alive_interval` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\n  value (`-1s`) to disable. Example value: `10s`. Defaults to `5s`.\n\n- `ssh_read_write_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\n  useful if, for example, packer hangs on a connection after a reboot.\n  Example: `5m`. Disabled by default.\n\n- `ssh_remote_tunnels` ([]string) - \n\n- `ssh_local_tunnels` ([]string) - \n\n<!-- End of code generated from the comments of the SSH struct in communicator/config.go; -->\n\n\n<!-- Code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `temporary_key_pair_type` (string) - `dsa` | `ecdsa` | `ed25519` | `rsa` ( the default )\n  \n  Specifies the type of key to create. The possible values are 'dsa',\n  'ecdsa', 'ed25519', or 'rsa'.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure, please\n  consider other alternatives like RSA or ED25519.\n\n- `temporary_key_pair_bits` (int) - Specifies the number of bits in the key to create. For RSA keys, the\n  minimum size is 1024 bits and the default is 4096 bits. Generally, 3072\n  bits is considered sufficient. DSA keys must be exactly 1024 bits as\n  specified by FIPS 186-2. For ECDSA keys, bits determines the key length\n  by selecting from one of three elliptic curve sizes: 256, 384 or 521\n  bits. Attempting to use bit lengths other than these three values for\n  ECDSA keys will fail. Ed25519 keys have a fixed length and bits will be\n  ignored.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure as specified\n  by FIPS 186-5, please consider other alternatives like RSA or ED25519.\n\n<!-- End of code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; -->\n\n\n<!-- Code generated from the comments of the WinRM struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `winrm_username` (string) - The username to use to connect to WinRM.\n\n- `winrm_password` (string) - The password to use to connect to WinRM.\n\n- `winrm_host` (string) - The address for WinRM to connect to.\n  \n  NOTE: If using an Amazon EBS builder, you can specify the interface\n  WinRM connects to via\n  [`ssh_interface`](/packer/integrations/hashicorp/amazon/latest/components/builder/ebs#ssh_interface)\n\n- `winrm_no_proxy` (bool) - Setting this to `true` adds the remote\n  `host:port` to the `NO_PROXY` environment variable. This has the effect of\n  bypassing any configured proxies when connecting to the remote host.\n  Default to `false`.\n\n- `winrm_port` (int) - The WinRM port to connect to. This defaults to `5985` for plain\n  unencrypted connection and `5986` for SSL when `winrm_use_ssl` is set to\n  true.\n\n- `winrm_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for WinRM to become available. This defaults\n  to `30m` since setting up a Windows machine generally takes a long time.\n\n- `winrm_use_ssl` (bool) - If `true`, use HTTPS for WinRM.\n\n- `winrm_insecure` (bool) - If `true`, do not check server certificate chain and host name.\n\n- `winrm_use_ntlm` (bool) - If `true`, NTLMv2 authentication (with session security) will be used\n  for WinRM, rather than default (basic authentication), removing the\n  requirement for basic authentication to be enabled within the target\n  guest. Further reading for remote connection authentication can be found\n  [here](https://msdn.microsoft.com/en-us/library/aa384295(v=vs.85).aspx).\n\n<!-- End of code generated from the comments of the WinRM struct in communicator/config.go; -->\n\n\n## Deprovisioning Tasks\n\nIf you would like to clean up the virtual machine after the build is complete, you can use the\n[Ansible provisioner](https://developer.hashicorp.com/packer/integrations/hashicorp/ansible/latest/components/provisioner/ansible)\nto run the following tasks to delete machine-specific files and data.\n\nHCL Example:\n\n```hcl\nbuild {\n  sources = [\"source.vsphere-supervisor.vm\"]\n\n  provisioner \"ansible\" {\n    playbook_file = \"cleanup-playbook.yml\"\n  }\n}\n```\n\nJSON Example:\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"vsphere-supervisor\"\n    }\n  ],\n  \"provisioners\": [\n    {\n      \"type\": \"ansible\",\n      \"playbook_file\": \"./cleanup-playbook.yml\"\n    }\n  ]\n}\n```\n\nContent of `cleanup-playbook.yml`:\n\n```yaml\n---\n# cleanup-playbook.yml\n- name: Clean up source virtual machine\n  hosts: default\n  become: true\n  tasks:\n    - name: Truncate machine id\n      file:\n        state: \"{{ item.state }}\"\n        path: \"{{ item.path }}\"\n        owner: root\n        group: root\n        mode: \"{{ item.mode }}\"\n      loop:\n        - { path: /etc/machine-id, state: absent, mode: \"0644\" }\n        - { path: /etc/machine-id, state: touch, mode: \"0644\" }\n\n    - name: Truncate audit logs\n      file:\n        state: \"{{ item.state }}\"\n        path: \"{{ item.path }}\"\n        owner: root\n        group: utmp\n        mode: \"{{ item.mode }}\"\n      loop:\n        - { path: /var/log/wtmp, state: absent, mode: \"0664\" }\n        - { path: /var/log/lastlog, state: absent, mode: \"0644\" }\n        - { path: /var/log/wtmp, state: touch, mode: \"0664\" }\n        - { path: /var/log/lastlog, state: touch, mode: \"0644\" }\n\n    - name: Remove cloud-init lib dir and logs\n      file:\n        state: absent\n        path: \"{{ item }}\"\n      loop:\n        - /var/lib/cloud\n        - /var/log/cloud-init.log\n        - /var/log/cloud-init-output.log\n        - /var/run/cloud-init\n\n    - name: Truncate all remaining log files in /var/log\n      shell:\n        cmd: |\n          find /var/log -type f -iname '*.log' | xargs truncate -s 0\n\n    - name: Delete all logrotated log zips\n      shell:\n        cmd: |\n          find /var/log -type f -name '*.gz' -exec rm {} +\n\n    - name: Find temp files\n      find:\n        depth: 1\n        file_type: any\n        paths:\n          - /tmp\n          - /var/tmp\n        pattern: \"*\"\n      register: temp_files\n\n    - name: Reset temp space\n      file:\n        state: absent\n        path: \"{{ item.path }}\"\n      loop: \"{{ temp_files.files }}\"\n\n    - name: Truncate shell history\n      file:\n        state: absent\n        path: \"{{ item.path }}\"\n      loop:\n        - { path: /root/.bash_history }\n        - {\n            path: \"/home/{{ ansible_env.SUDO_USER | default(ansible_user_id) }}/.bash_history\",\n          }\n```\n","created_at":"2024-10-17T21:00:16.183Z","updated_at":"2024-10-17T21:00:16.183Z","name":"vSphere Supervisor","slug":"vsphere-supervisor","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},{"id":"2022be47-3ab1-4cdb-96e6-6fe53c8a858e","integration_release_id":"1ee34d8e-f6a0-4142-80c4-96b24f19da59","component_id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","readme":"Type: `vsphere`\n\nArtifact BuilderId: `packer.post-processor.vsphere`\n\nThis post-processor uploads an artifact to a vSphere endpoint.\n\nThe artifact must be a VMX, OVA, or OVF file.\n\n-> **Note:** This post-processor is developed to maintain compatibility with VMware vSphere versions until\ntheir respective End of General Support dates. For detailed information, refer to the\n[Broadcom Product Lifecycle](https://support.broadcom.com/group/ecx/productlifecycle).\n\n## Examples\n\nExamples are available in the [examples](https://github.com/hashicorp/packer-plugin-vsphere/tree/main/examples/)\ndirectory of the GitHub repository.\n\n## Configuration Reference\n\nThe following configuration options are available for the post-processor.\n\n**Required:**\n\n<!-- Code generated from the comments of the Config struct in post-processor/vsphere/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `cluster` (string) - The cluster or ESXi host to upload the virtual machine.\n  This can be either the name of the vSphere cluster or the fully qualified domain name (FQDN)\n  or IP address of the ESXi host.\n\n- `datacenter` (string) - The name of the vSphere datacenter object to place the virtual machine.\n  This is _not required_ if `resource_pool` is specified.\n\n- `datastore` (string) - The name of the vSphere datastore to place the virtual machine.\n\n- `host` (string) - The fully qualified domain name or IP address of the vCenter Server or ESXi host.\n\n- `password` (string) - The password to use to authenticate to the vSphere endpoint.\n\n- `username` (string) - The username to use to authenticate to the vSphere endpoint.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/vsphere/post-processor.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the Config struct in post-processor/vsphere/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `disk_mode` (string) - The disk format of the target virtual machine. One of `thin`, `thick`,\n\n- `esxi_host` (string) - The fully qualified domain name or IP address of the ESXi host to upload the\n  virtual machine. This is _not required_ if `host` is a vCenter Server.\n\n- `insecure` (bool) - Skip the verification of the server certificate. Defaults to `false`.\n\n- `options` ([]string) - Options to send to `ovftool` when uploading the virtual machine.\n  Use `ovftool --help` to list all the options available.\n\n- `overwrite` (bool) - Overwrite existing files.\n  If `true`, forces overwrites of existing files. Defaults to `false`.\n\n- `resource_pool` (string) - The name of the resource pool to place the virtual machine.\n\n- `vm_folder` (string) - The name of the virtual machine folder path where the virtual machine will be\n  placed.\n\n- `vm_name` (string) - The name of the virtual machine to be created on the vSphere endpoint.\n\n- `vm_network` (string) - The name of the network in which to place the virtual machine.\n\n- `hardware_version` (string) - The maximum virtual hardware version for the deployed virtual machine.\n  \n  It does not upgrade the virtual hardware version of the source VM. Instead, it limits the\n  virtual hardware version of the deployed virtual machine  to the specified version.\n  If the source virtual machine's hardware version is higher than the specified version, the\n  deployed virtual machine's hardware version will be downgraded to the specified version.\n  \n  If the source virtual machine's hardware version is lower than or equal to the specified\n  version, the deployed virtual machine's hardware version will be the same as the source\n  virtual machine's.\n  \n  This option is useful when deploying to vCenter Server instance ot an ESXi host whose\n  version is different than the one used to create the artifact.\n  \n  Refer to [KB 315655](https://knowledge.broadcom.com/external/article?articleNumber=315655)\n  for more information on supported virtual hardware versions.\n\n- `max_retries` (int) - The maximum number of times to retry the upload operation if it fails.\n  Defaults to `5`.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/vsphere/post-processor.go; -->\n\n\n- `keep_input_artifact` (boolean) - Preserve the local virtual machines files, even after importing\n  them to the vSphere endpoint. Defaults to `false`.\n\n## Example Usage\n\nThe following is an example of the post-processor used in conjunction with the `null` builder to\nupload a VMX to a vSphere cluster. You can also use this post-processor with the VMX artifact from a\nbuild.\n\nAn example is shown below, showing only the post-processor configuration:\n\nHCL Example:\n\n```hcl\nsource \"null\" \"example\" {\n    communicator = \"none\"\n}\n\nbuild {\n    sources = [\n        \"source.null.example\"\n    ]\n\n    post-processors {\n      post-processor \"vsphere\"{\n          vm_name             = \"foo\"\n          host                = \"vcenter.example.com\"\n          username            = \"administrator@vsphere.local\"\n          password            = \"VMw@re1!\"\n          datacenter          = \"dc-01\"\n          cluster             = \"cluster-01\"\n          datastore           = \"datastore-01\"\n          vm_network          = \"VM Network\"\n          keep_input_artifact = true\n      }\n    }\n}\n```\n\nJSON Example:\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"null\",\n      \"communicator\": \"none\"\n    }\n  ],\n  \"post-processors\": [\n    [\n      {\n        \"type\": \"vsphere\",\n        \"vm_name\": \"foo\",\n        \"host\": \"vcenter.example.com\",\n        \"username\": \"administrator@vsphere.local\",\n        \"password\": \"VMw@re1!\",\n        \"datacenter\": \"dc-01\",\n        \"cluster\": \"cluster-01\",\n        \"datastore\": \"datastore-01\",\n        \"vm_network\": \"VM Network\",\n        \"keep_input_artifact\": true\n      }\n    ]\n  ]\n}\n```\n\n## Privileges\n\nThe post-processor uses `ovftool` and needs several privileges to be able to run `ovftool`.\n\nRather than giving Administrator access, you can create a role to give the post-processor the\nprivileges necessary to run.\n\nBelow is an example role that will work. Please note that this is a user-supplied list so there may\nbe a few extraneous privileges that are not strictly required.\n\nFor vSphere, the role needs the following privileges:\n\n- `Datastore.AllocateSpace`\n- `Host.Config.AdvancedConfig`\n- `Host.Config.NetService`\n- `Host.Config.Network`\n- `Network.Assign`\n- `System.Anonymous`\n- `System.Read`\n- `System.View`\n- `VApp.Import`\n- `VirtualMachine.Config.AddNewDisk`\n- `VirtualMachine.Config.AdvancedConfig`\n- `VirtualMachine.Inventory.Delete`\n\nThe role must be authorized on the:\n\n- Cluster of the host.\n- The destination folder.\n- The destination datastore.\n- The network to be assigned.\n","created_at":"2024-10-17T21:00:16.382Z","updated_at":"2024-10-17T21:00:16.382Z","name":"vSphere","slug":"vsphere","component":{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.157Z","updated_at":"2023-07-26T17:26:54.831Z"},"variable_groups":[]},{"id":"f6de2afe-ac12-4832-89a7-e71585a2633d","integration_release_id":"1ee34d8e-f6a0-4142-80c4-96b24f19da59","component_id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","readme":"Type: `vsphere-template`\n\nArtifact BuilderId: `packer.post-processor.vsphere`\n\nThis post-processor uses an artifact from the `vmware-iso` builder with an ESXi host or an artifact\nfrom the [vSphere](/packer/integrations/hashicorp/vsphere/latest/components/post-processor/vsphere) post-processor. It then marks\nthe virtual machine as a template and moves it to your specified path.\n\n-> **Note:** This post-processor is developed to maintain compatibility with VMware vSphere versions until\ntheir respective End of General Support dates. For detailed information, refer to the\n[Broadcom Product Lifecycle](https://support.broadcom.com/group/ecx/productlifecycle).\n\n## Examples\n\nExamples are available in the [examples](https://github.com/hashicorp/packer-plugin-vsphere/tree/main/examples/)\ndirectory of the GitHub repository.\n\n## Configuration Reference\n\nThe following configuration options are available for the post-processor.\n\n**Required:**\n\n<!-- Code generated from the comments of the Config struct in post-processor/vsphere-template/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `host` (string) - The fully qualified domain name or IP address of the vSphere endpoint.\n\n- `username` (string) - The username to use to authenticate to the vSphere endpoint.\n\n- `password` (string) - The password to use to authenticate to the vSphere endpoint.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/vsphere-template/post-processor.go; -->\n\n\n**Optional:**\n\n<!-- Code generated from the comments of the Config struct in post-processor/vsphere-template/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `insecure` (bool) - Skip the verification of the server certificate. Defaults to `false`.\n\n- `datacenter` (string) - The name of the datacenter to use.\n  Required when the vCenter Server instance endpoint has more than one datacenter.\n\n- `template_name` (string) - The name of the template.\n  If not specified, the name of the virtual machine will be used.\n\n- `folder` (string) - The name of the virtual machine folder path where the template will be created.\n\n- `snapshot_enable` (bool) - Create a snapshot before marking as a template. Defaults to `false`.\n\n- `snapshot_name` (string) - The name of the snapshot. Required when `snapshot_enable` is `true`.\n\n- `snapshot_description` (string) - A description for the snapshot. Required when `snapshot_enable` is `true`.\n\n- `reregister_vm` (boolean) - Keepe the virtual machine registered after marking as a template.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/vsphere-template/post-processor.go; -->\n\n\n- `keep_input_artifact` (boolean) - This option is not applicable to `vsphere-template`. For a\n  template to function, the original virtual machine from which it was generated cannot be deleted.\n  Therefore, the vSphere Template post-processor always preserves the original virtual machine.\n\n  ~> **Note**: If you are getting permission denied errors when trying to mark as a template, but it\n  works in the vSphere UI, set this to `false`. Default is `true`.\n\n## Example Usage\n\nAn example is shown below, showing only the post-processor configuration:\n\nHCL Example:\n\n```hcl\nsource \"null\" \"example\" {\n    communicator = \"none\"\n}\n\nbuild {\n    sources = [\n        \"source.null.example\"\n    ]\n\n    post-processors {\n      post-processor \"vsphere-template\"{\n          host                = \"vcenter.example.com\"\n          insecure            = false\n          username            = \"administrator@vsphere.local\"\n          password            = \"VMw@re1!\"\n          datacenter          = \"dc-01\"\n          folder              = \"/templates/os/distro\"\n      }\n    }\n}\n```\n\nJSON Example:\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"null\",\n      \"communicator\": \"none\"\n    }\n  ],\n  \"post-processors\": [\n    [\n      {\n        \"type\": \"vsphere-template\",\n        \"host\": \"vcenter.example.com\",\n        \"insecure\": true,\n        \"username\": \"administrator@vsphere.local\",\n        \"password\": \"VMw@re1!\",\n        \"datacenter\": \"dc-01\",\n        \"folder\": \"/templates/os/distro\"\n      }\n    ]\n  ]\n}\n```\n\n## Using the vSphere Template with Local Builders\n\nOnce the [vSphere](/packer/integrations/hashicorp/vsphere/latest/components/post-processor/vsphere) post-processor takes an artifact\nfrom the builder and uploads it to a vSphere endpoint, you may want the virtual machine to be marked\nas a template.\n\nHCL Example:\n\n```hcl\nbuild {\n    sources = [\n        \"source.null.example\"\n    ]\n\n  post-processors {\n    post-processor \"vsphere\" {\n      # ...\n    }\n\n    post-processor \"vsphere-template\" {\n      # ...\n    }\n  }\n}\n```\n\nJSON Example:\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"null\",\n      \"communicator\": \"none\"\n    }\n  ],\n  \"post-processors\": [\n    [\n      {\n        \"type\": \"vsphere\",\n         ...\n      },\n      {\n        \"type\": \"vsphere-template\",\n         ...\n      }\n    ],\n    {\n      \"type\": \"...\",\n      ...\n    }\n  ]\n}\n```\n\nIn the example above, the result of each builder is passed through the defined sequence of\npost-processors starting with the `vsphere` post-processor which will upload the artifact to a\nvSphere endpoint. The resulting artifact is then passed on to the `vsphere-template` post-processor\nwhich handles marking a virtual machine as a template.\n\nIn JSON, note that the `vsphere` and `vsphere-template` post-processors can be paired together in\ntheir own array.\n\n## Privileges\n\nThe post processor needs several privileges to be able to mark the virtual as a template.\n\nRather than giving full administrator access, you can create a role to give the post-processor the\nprivileges necessary to run.\n\nBelow is an example role that will work. Please note that this is a user-supplied list so there may\nbe a few extraneous privileges that are not strictly required.\n\nFor vSphere, the role needs the following privileges:\n\n- `Datastore.AllocateSpace`\n- `Host.Config.AdvancedConfig`\n- `Host.Config.NetService`\n- `Host.Config.Network`\n- `Network.Assign`\n- `System.Anonymous`\n- `System.Read`\n- `System.View`\n- `VApp.Import`\n- `VirtualMachine.Config.AddNewDisk`\n- `VirtualMachine.Config.AdvancedConfig`\n- `VirtualMachine.Inventory.Delete`\n\n  and either (if `reregister_vm` is `false`):\n\n  - `VirtualMachine.Provisioning.MarkAsTemplate`\n\n  or (if `reregister_vm` is `true` or unset):\n\n  - `VirtualMachine.Inventory.Register`\n  - `VirtualMachine.Inventory.Unregister`\n\nThe role must be authorized on the:\n\n- Cluster of the host.\n- The destination folder.\n- The destination datastore.\n- The network to be assigned.\n\n# Troubleshooting\n\nSome users have reported that vSphere templates created from local vSphere builds get their boot\norder reset to CD-ROM only instead of the original boot order defined by the template. If this issue\naffects you, the solution is to set `\"bios.hddOrder\": \"scsi0:0\"` in your builder's `vmx_data`.\n","created_at":"2024-10-17T21:00:16.561Z","updated_at":"2024-10-17T21:00:16.561Z","name":"vSphere Template","slug":"vsphere-template","component":{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.157Z","updated_at":"2023-07-26T17:26:54.831Z"},"variable_groups":[]}]},"component":{"id":"78eaf204-d616-4543-a1d8-5986af78768c","integration_release_id":"1ee34d8e-f6a0-4142-80c4-96b24f19da59","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `vsphere-iso`\n\nArtifact BuilderId: `jetbrains.vsphere`\n\nThis builder starts from a guest operating system ISO file and builds a virtual machine image on a\nvSphere cluster or an ESXi host using the vSphere API.\n\n-> **Note:** This builder is developed to maintain compatibility with VMware vSphere versions until\ntheir respective End of General Support dates. For detailed information, refer to the\n[Broadcom Product Lifecycle](https://support.broadcom.com/group/ecx/productlifecycle).\n\n## Examples\n\n- Basic examples are available in the [examples](https://github.com/hashicorp/packer-plugin-vsphere/tree/main/examples/)\n  directory of the GitHub repository.\n\n- Additional examples are available in the [`vmware-samples/packer-examples-for-vsphere`](https://github.com/vmware-samples/packer-examples-for-vsphere)\n  GitHub repository maintained by VMware by Broadcom.\n\n## Configuration Reference\n\n### HTTP Configuration\n\n<!-- Code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; DO NOT EDIT MANUALLY -->\n\nPacker will create an http server serving `http_directory` when it is set, a\nrandom free port will be selected and the architecture of the directory\nreferenced will be available in your builder.\n\nExample usage from a builder:\n\n```\nwget http://{{ .HTTPIP }}:{{ .HTTPPort }}/foo/bar/preseed.cfg\n```\n\n<!-- End of code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; DO NOT EDIT MANUALLY -->\n\n- `http_directory` (string) - Path to a directory to serve using an HTTP server. The files in this\n  directory will be available over HTTP that will be requestable from the\n  virtual machine. This is useful for hosting kickstart files and so on.\n  By default this is an empty string, which means no HTTP server will be\n  started. The address and port of the HTTP server will be available as\n  variables in `boot_command`. This is covered in more detail below.\n\n- `http_content` (map[string]string) - Key/Values to serve using an HTTP server. `http_content` works like and\n  conflicts with `http_directory`. The keys represent the paths and the\n  values contents, the keys must start with a slash, ex: `/path/to/file`.\n  `http_content` is useful for hosting kickstart files and so on. By\n  default this is empty, which means no HTTP server will be started. The\n  address and port of the HTTP server will be available as variables in\n  `boot_command`. This is covered in more detail below.\n  Example:\n  ```hcl\n    http_content = {\n      \"/a/b\"     = file(\"http/b\")\n      \"/foo/bar\" = templatefile(\"${path.root}/preseed.cfg\", { packages = [\"nginx\"] })\n    }\n  ```\n\n- `http_port_min` (int) - These are the minimum and maximum port to use for the HTTP server\n  started to serve the `http_directory`. Because Packer often runs in\n  parallel, Packer will choose a randomly available port in this range to\n  run the HTTP server. If you want to force the HTTP server to be on one\n  port, make this minimum and maximum port the same. By default the values\n  are `8000` and `9000`, respectively.\n\n- `http_port_max` (int) - HTTP Port Max\n\n- `http_bind_address` (string) - This is the bind address for the HTTP server. Defaults to 0.0.0.0 so that\n  it will work with any network interface.\n\n<!-- End of code generated from the comments of the HTTPConfig struct in multistep/commonsteps/http_config.go; -->\n\n\n- `http_interface` (string) - The network interface (for example, `en0`, `ens192`, etc.) that the\n  HTTP server will use to serve the `http_directory`. The plugin will identify the IP address\n  associated with this network interface and bind to it.\n\n<!-- Code generated from the comments of the BootConfig struct in builder/vsphere/common/step_boot_command.go; DO NOT EDIT MANUALLY -->\n\n- `http_ip` (string) - The IP address to use for the HTTP server to serve the `http_directory`.\n\n<!-- End of code generated from the comments of the BootConfig struct in builder/vsphere/common/step_boot_command.go; -->\n\n\n~> **Notes:**\n  - The options `http_bind_address` and `http_interface` are mutually exclusive.\n  - Both `http_bind_address` and `http_interface` have higher priority than `http_ip`.\n  - The `http_bind_address` is matched against the IP addresses of the host's network interfaces. If\n    no match is found, the plugin will terminate.\n  - Similarly, `http_interface` is compared with the host's network interfaces. If there's no\n    corresponding network interface, the plugin will also terminate.\n  - If neither `http_bind_address`, `http_interface`, and `http_ip` are provided, the plugin will\n    automatically find and use the IP address of the first non-loopback interface for `http_ip`.\n\n### Connection Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the ConnectConfig struct in builder/vsphere/common/step_connect.go; DO NOT EDIT MANUALLY -->\n\n- `vcenter_server` (string) - The fully qualified domain name or IP address of the vCenter Server\n  instance.\n\n- `username` (string) - The username to authenticate with the vCenter Server instance.\n\n- `password` (string) - The password to authenticate with the vCenter Server instance.\n\n- `insecure_connection` (bool) - Do not validate the certificate of the vCenter Server instance.\n  Defaults to `false`.\n  \n  -> **Note:** This option is beneficial in scenarios where the certificate\n  is self-signed or does not meet standard validation criteria.\n\n- `datacenter` (string) - The name of the datacenter object in the vSphere inventory.\n  \n  -> **Note:** Required if more than one datacenter object exists in the\n  vSphere inventory.\n\n<!-- End of code generated from the comments of the ConnectConfig struct in builder/vsphere/common/step_connect.go; -->\n\n\n### Location Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the LocationConfig struct in builder/vsphere/common/config_location.go; DO NOT EDIT MANUALLY -->\n\n- `vm_name` (string) - The name of the virtual machine.\n\n- `folder` (string) - The virtual machine folder where the virtual machine is created.\n\n- `cluster` (string) - The cluster where the virtual machine is created.\n  Refer to the [Working With Clusters And Hosts](#working-with-clusters-and-hosts)\n  section for more details.\n\n- `host` (string) - The ESXi host where the virtual machine is created. A full path must be\n  specified if the ESXi host is in a folder. For example `folder/host`.\n  Refer to the [Working With Clusters And Hosts](#working-with-clusters-and-hosts)\n  section for more details.\n\n- `resource_pool` (string) - The resource pool where the virtual machine is created.\n  If this is not specified, the root resource pool associated with the\n  `host` or `cluster` is used.\n  \n  ~> **Note:**  The full path to the resource pool must be provided.\n  For example, a simple resource pool path might resemble `rp-packer` and\n  a nested path might resemble 'rp-packer/rp-linux-images'.\n\n- `datastore` (string) - The datastore where the virtual machine is created.\n  Required if `host` is a cluster, or if `host` has multiple datastores.\n\n- `set_host_for_datastore_uploads` (bool) - The ESXI host used for uploading files to the datastore.\n  Defaults to `false`.\n\n<!-- End of code generated from the comments of the LocationConfig struct in builder/vsphere/common/config_location.go; -->\n\n\n<!-- Code generated from the comments of the Config struct in builder/vsphere/iso/config.go; DO NOT EDIT MANUALLY -->\n\n- `create_snapshot` (bool) - Create a snapshot of the virtual machine to use as a base for linked clones.\n  Defaults to `false`.\n\n- `snapshot_name` (string) - The name of the snapshot when `create_snapshot` is `true`.\n  Defaults to `Created By Packer`.\n\n- `convert_to_template` (bool) - Convert the virtual machine to a template after the build is complete.\n  Defaults to `false`.\n  If set to `true`, the virtual machine can not be imported into a content library.\n\n- `export` (\\*common.ExportConfig) - The configuration for exporting the virtual machine to an OVF.\n  The virtual machine is not exported if [export configuration](#export-configuration) is not specified.\n\n- `content_library_destination` (\\*common.ContentLibraryDestinationConfig) - Import the virtual machine as a VM template or OVF template to a content library.\n  The template will not be imported if no [content library import configuration](#content-library-import-configuration) is specified.\n  If set, `convert_to_template` must be set to `false`.\n\n- `local_cache_overwrite` (bool) - Overwrite files in the local cache if they already exist.\n  Defaults to `false`.\n\n- `remote_cache_cleanup` (bool) - Cleanup items added to the remote cache after the build is complete.\n  Defaults to `false`.\n  \n  -> **Note:** If the local cache overwrite flag is set to `true`, `RemoteCacheOverwrite` will\n  implicitly be set to `true`. This is to ensure consistency between the local and remote\n  cache.\n\n- `remote_cache_overwrite` (bool) - Overwrite files in the remote cache if they already exist.\n  Defaults to `false`.\n\n- `remote_cache_datastore` (string) - The remote cache datastore to use for the build.\n  If not set, the datastore of the virtual machine is used.\n\n- `remote_cache_path` (string) - The directory path on the remote cache datastore to use for the build.\n  If not set, the default path is `packer_cache/`.\n\n<!-- End of code generated from the comments of the Config struct in builder/vsphere/iso/config.go; -->\n\n\n### Hardware Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the HardwareConfig struct in builder/vsphere/common/step_hardware.go; DO NOT EDIT MANUALLY -->\n\n- `CPUs` (int32) - The number of virtual CPUs cores for the virtual machine.\n\n- `cpu_cores` (int32) - The number of virtual CPU cores per socket for the virtual machine.\n\n- `CPU_reservation` (int64) - The CPU reservation in MHz.\n\n- `CPU_limit` (int64) - The upper limit of available CPU resources in MHz.\n\n- `CPU_hot_plug` (bool) - Enable CPU hot plug setting for virtual machine. Defaults to `false`\n\n- `RAM` (int64) - The amount of memory for the virtual machine in MB.\n\n- `RAM_reservation` (int64) - The guaranteed minimum allocation of memory for the virtual machine in MB.\n\n- `RAM_reserve_all` (bool) - Reserve all allocated memory. Defaults to `false`.\n  \n  -> **Note:** May not be used together with `RAM_reservation`.\n\n- `RAM_hot_plug` (bool) - Enable memory hot add setting for virtual machine. Defaults to `false`.\n\n- `video_ram` (int64) - The amount of video memory in KB. Defaults to 4096 KB.\n  \n  -> **Note:** Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-789C3913-1053-4850-A0F0-E29C3D32B6DA.html)\n  for supported maximums.\n\n- `displays` (int32) - The number of video displays. Defaults to `1`.\n  \n  `-> **Note:** Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-789C3913-1053-4850-A0F0-E29C3D32B6DA.html)\n  for supported maximums.\n\n- `pci_passthrough_allowed_device` ([]PCIPassthroughAllowedDevice) - Configure Dynamic DirectPath I/O [PCI Passthrough](#pci-passthrough-configuration) for\n  virtual machine. Refer to the [vSphere documentation](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-5B3CAB26-5D06-4A99-92A0-3A04C69CE64B.html)\n\n- `vgpu_profile` (string) - vGPU profile for accelerated graphics. Refer to the [NVIDIA GRID vGPU documentation](https://docs.nvidia.com/grid/latest/grid-vgpu-user-guide/index.html#configure-vmware-vsphere-vm-with-vgpu)\n  for examples of profile names. Defaults to none.\n\n- `NestedHV` (bool) - Enable nested hardware virtualization for the virtual machine.\n  Defaults to `false`.\n\n- `firmware` (string) - The firmware for the virtual machine.\n  \n  The available options for this setting are: 'bios', 'efi', and\n  'efi-secure'.\n  \n  -> **Note:** Use `efi-secure` for UEFI Secure Boot.\n\n- `force_bios_setup` (bool) - Force entry into the BIOS setup screen during boot. Defaults to `false`.\n\n- `vTPM` (bool) - Enable virtual trusted platform module (TPM) device for the virtual\n  machine. Defaults to `false`.\n\n- `precision_clock` (string) - The virtual precision clock device for the virtual machine.\n  Defaults to `none`.\n  \n  The available options for this setting are: `none`, `ntp`, and `ptp`.\n\n<!-- End of code generated from the comments of the HardwareConfig struct in builder/vsphere/common/step_hardware.go; -->\n\n\n### Create Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the CreateConfig struct in builder/vsphere/iso/step_create.go; DO NOT EDIT MANUALLY -->\n\n- `vm_version` (uint) - Specifies the virtual machine hardware version. Defaults to the most\n  current virtual machine hardware version supported by the ESXi host.\n  Refer to [KB 315655](https://knowledge.broadcom.com/external/article?articleNumber=315655)\n  for more information on supported virtual hardware versions.\n\n- `guest_os_type` (string) - The guest operating system identifier for the virtual machine.\n  Defaults to `otherGuest`.\n  \n  To get a list of supported guest operating system identifiers for your\n  ESXi host, run the following PowerShell command using `VMware.PowerCLI`:\n  \n  ```powershell\n  Connect-VIServer -Server \"vcenter.example.com\" -User \"administrator@vsphere.local\" -Password \"password\"\n  $esxiHost = Get-VMHost -Name \"esxi-01.example.com\"\n  $environmentBrowser = Get-View -Id $esxiHost.ExtensionData.Parent.ExtensionData.ConfigManager.EnvironmentBrowser\n  $vmxVersion = ($environmentBrowser.QueryConfigOptionDescriptor() | Where-Object DefaultConfigOption).Key\n  $osDescriptor = $environmentBrowser.QueryConfigOption($vmxVersion, $null).GuestOSDescriptor\n  $osDescriptor | Select-Object Id, Fullname\n  ```\n\n- `network_adapters` ([]NIC) - The network adapters for the virtual machine.\n  \n  -> **Note:** If no network adapter is defined, all network-related\n  operations are skipped.\n\n- `usb_controller` ([]string) - The USB controllers for the virtual machine.\n  \n  The available options for this setting are: `usb` and `xhci`.\n  \n  - `usb`: USB 2.0\n  - `xhci`: USB 3.0\n  \n  -> **Note:** A maximum of one of each controller type can be defined.\n\n- `notes` (string) - The annotations for the virtual machine.\n\n- `destroy` (bool) - Destroy the virtual machine after the build completes.\n  Defaults to `false`.\n\n<!-- End of code generated from the comments of the CreateConfig struct in builder/vsphere/iso/step_create.go; -->\n\n\n### ISO Configuration\n\n<!-- Code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; DO NOT EDIT MANUALLY -->\n\nBy default, Packer will symlink, download or copy image files to the Packer\ncache into a \"`hash($iso_url+$iso_checksum).$iso_target_extension`\" file.\nPacker uses [hashicorp/go-getter](https://github.com/hashicorp/go-getter) in\nfile mode in order to perform a download.\n\ngo-getter supports the following protocols:\n\n* Local files\n* Git\n* Mercurial\n* HTTP\n* Amazon S3\n\nExamples:\ngo-getter can guess the checksum type based on `iso_checksum` length, and it is\nalso possible to specify the checksum type.\n\nIn JSON:\n\n```json\n\n\t\"iso_checksum\": \"946a6077af6f5f95a51f82fdc44051c7aa19f9cfc5f737954845a6050543d7c2\",\n\t\"iso_url\": \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```json\n\n\t\"iso_checksum\": \"file:ubuntu.org/..../ubuntu-14.04.1-server-amd64.iso.sum\",\n\t\"iso_url\": \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```json\n\n\t\"iso_checksum\": \"file://./shasums.txt\",\n\t\"iso_url\": \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```json\n\n\t\"iso_checksum\": \"file:./shasums.txt\",\n\t\"iso_url\": \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\nIn HCL2:\n\n```hcl\n\n\tiso_checksum = \"946a6077af6f5f95a51f82fdc44051c7aa19f9cfc5f737954845a6050543d7c2\"\n\tiso_url = \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```hcl\n\n\tiso_checksum = \"file:ubuntu.org/..../ubuntu-14.04.1-server-amd64.iso.sum\"\n\tiso_url = \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```hcl\n\n\tiso_checksum = \"file://./shasums.txt\"\n\tiso_url = \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n```hcl\n\n\tiso_checksum = \"file:./shasums.txt\",\n\tiso_url = \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"\n\n```\n\n<!-- End of code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; -->\n\n\n**Required**:\n\n<!-- Code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; DO NOT EDIT MANUALLY -->\n\n- `iso_checksum` (string) - The checksum for the ISO file or virtual hard drive file. The type of\n  the checksum is specified within the checksum field as a prefix, ex:\n  \"md5:{$checksum}\". The type of the checksum can also be omitted and\n  Packer will try to infer it based on string length. Valid values are\n  \"none\", \"{$checksum}\", \"md5:{$checksum}\", \"sha1:{$checksum}\",\n  \"sha256:{$checksum}\", \"sha512:{$checksum}\" or \"file:{$path}\". Here is a\n  list of valid checksum values:\n   * md5:090992ba9fd140077b0661cb75f7ce13\n   * 090992ba9fd140077b0661cb75f7ce13\n   * sha1:ebfb681885ddf1234c18094a45bbeafd91467911\n   * ebfb681885ddf1234c18094a45bbeafd91467911\n   * sha256:ed363350696a726b7932db864dda019bd2017365c9e299627830f06954643f93\n   * ed363350696a726b7932db864dda019bd2017365c9e299627830f06954643f93\n   * file:http://releases.ubuntu.com/20.04/SHA256SUMS\n   * file:file://./local/path/file.sum\n   * file:./local/path/file.sum\n   * none\n  Although the checksum will not be verified when it is set to \"none\",\n  this is not recommended since these files can be very large and\n  corruption does happen from time to time.\n\n- `iso_url` (string) - A URL to the ISO containing the installation image or virtual hard drive\n  (VHD or VHDX) file to clone.\n\n<!-- End of code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; DO NOT EDIT MANUALLY -->\n\n- `iso_urls` ([]string) - Multiple URLs for the ISO to download. Packer will try these in order.\n  If anything goes wrong attempting to download or while downloading a\n  single URL, it will move on to the next. All URLs must point to the same\n  file (same checksum). By default this is empty and `iso_url` is used.\n  Only one of `iso_url` or `iso_urls` can be specified.\n\n- `iso_target_path` (string) - The path where the iso should be saved after download. By default will\n  go in the packer cache, with a hash of the original filename and\n  checksum as its name.\n\n- `iso_target_extension` (string) - The extension of the iso file after download. This defaults to `iso`.\n\n<!-- End of code generated from the comments of the ISOConfig struct in multistep/commonsteps/iso_config.go; -->\n\n\n### CD-ROM Configuration\n\nFor each ISO defined in the CD-ROM configuration, a CD-ROM device is added.\n\nIf the `iso_url` is defined in addition to the `iso_paths`, the `iso_url` is added to the virtual\nmachine first. This keeps the `iso_url` first in the boot order by default, allowing the boot ISO to\nbe defined by the `iso_url` and the VMware Tools ISO added from ESXi host.\n\nHCL Example:\n\n```hcl\n  iso_urls = [\n    \"windows-server.iso\",\n    \"https://example.com/isos/windows-server.iso\"\n  ]\n\n  iso_paths = [\n    \"[] /usr/lib/vmware/isoimages/windows.iso\"\n  ]\n```\n\nJSON Example:\n\n```json\n  \"iso_urls\": [\n    \"windows-server.iso\",\n    \"https://example.com/isos/windows-server.iso\"\n  ],\n  \"iso_paths\": [\n      \"[] /usr/lib/vmware/isoimages/windows.iso\"\n  ],\n```\n\n<!-- Code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; DO NOT EDIT MANUALLY -->\n\nAn iso (CD) containing custom files can be made available for your build.\n\nBy default, no extra CD will be attached. All files listed in this setting\nget placed into the root directory of the CD and the CD is attached as the\nsecond CD device.\n\nThis config exists to work around modern operating systems that have no\nway to mount floppy disks, which was our previous go-to for adding files at\nboot time.\n\n<!-- End of code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; DO NOT EDIT MANUALLY -->\n\n- `cd_files` ([]string) - A list of files to place onto a CD that is attached when the VM is\n  booted. This can include either files or directories; any directories\n  will be copied onto the CD recursively, preserving directory structure\n  hierarchy. Symlinks will have the link's target copied into the directory\n  tree on the CD where the symlink was. File globbing is allowed.\n  \n  Usage example (JSON):\n  \n  ```json\n  \"cd_files\": [\"./somedirectory/meta-data\", \"./somedirectory/user-data\"],\n  \"cd_label\": \"cidata\",\n  ```\n  \n  Usage example (HCL):\n  \n  ```hcl\n  cd_files = [\"./somedirectory/meta-data\", \"./somedirectory/user-data\"]\n  cd_label = \"cidata\"\n  ```\n  \n  The above will create a CD with two files, user-data and meta-data in the\n  CD root. This specific example is how you would create a CD that can be\n  used for an Ubuntu 20.04 autoinstall.\n  \n  Since globbing is also supported,\n  \n  ```hcl\n  cd_files = [\"./somedirectory/*\"]\n  cd_label = \"cidata\"\n  ```\n  \n  Would also be an acceptable way to define the above cd. The difference\n  between providing the directory with or without the glob is whether the\n  directory itself or its contents will be at the CD root.\n  \n  Use of this option assumes that you have a command line tool installed\n  that can handle the iso creation. Packer will use one of the following\n  tools:\n  \n    * xorriso\n    * mkisofs\n    * hdiutil (normally found in macOS)\n    * oscdimg (normally found in Windows as part of the Windows ADK)\n\n- `cd_content` (map[string]string) - Key/Values to add to the CD. The keys represent the paths, and the values\n  contents. It can be used alongside `cd_files`, which is useful to add large\n  files without loading them into memory. If any paths are specified by both,\n  the contents in `cd_content` will take precedence.\n  \n  Usage example (HCL):\n  \n  ```hcl\n  cd_files = [\"vendor-data\"]\n  cd_content = {\n    \"meta-data\" = jsonencode(local.instance_data)\n    \"user-data\" = templatefile(\"user-data\", { packages = [\"nginx\"] })\n  }\n  cd_label = \"cidata\"\n  ```\n\n- `cd_label` (string) - CD Label\n\n<!-- End of code generated from the comments of the CDConfig struct in multistep/commonsteps/extra_iso_config.go; -->\n\n\n<!-- Code generated from the comments of the CDRomConfig struct in builder/vsphere/common/step_add_cdrom.go; DO NOT EDIT MANUALLY -->\n\n- `cdrom_type` (string) - The type of controller to use for the CD-ROM device. Defaults to `ide`.\n  \n  The available options for this setting are: `ide` and `sata`.\n\n- `iso_paths` ([]string) - A list of paths to ISO files in either a datastore or a content library\n  that will be attached to the virtual machine.\n  \n  HCL Example:\n  \n  ```hcl\n  iso_paths = [\n    \"[nfs] iso/ubuntu-server-amd64.iso\",\n    \"Example Content Library/ubuntu-server-amd64/ubuntu-server-amd64.iso\"\n  ]\n  ```\n  \n  JSON Example:\n  \n  ```json\n  \"iso_paths\": [\n    \"[nfs] iso/ubuntu-server-amd64.iso\",\n    \"Example Content Library/ubuntu-server-amd64/ubuntu-server-amd64.iso\"\n  ]\n  ```\n  \n  Two ISOs are referenced:\n  \n  1. An ISO in the \"_iso_\" folder of the \"_nfs_\" datastore with the file\n    name of \"_ubuntu-server-amd64.iso_\". \"_ubuntu-server-amd64.iso_\".\n  2. An ISO in the \"_Example Content Library_\" content library with the\n    item name of \"_ubuntu-server-amd64_\".\n  \n  -> **Note:** All files in a content library have an associated item name.\n  To determine the file name, view the datastore backing the content\n  library or use the `govc` vSphere CLI.\n\n<!-- End of code generated from the comments of the CDRomConfig struct in builder/vsphere/common/step_add_cdrom.go; -->\n\n\n<!-- Code generated from the comments of the RemoveCDRomConfig struct in builder/vsphere/common/step_remove_cdrom.go; DO NOT EDIT MANUALLY -->\n\n- `remove_cdrom` (bool) - Remove all CD-ROM devices from the virtual machine when the build is\n  complete. Defaults to `false`.\n\n<!-- End of code generated from the comments of the RemoveCDRomConfig struct in builder/vsphere/common/step_remove_cdrom.go; -->\n\n\n<!-- Code generated from the comments of the ReattachCDRomConfig struct in builder/vsphere/common/step_reattach_cdrom.go; DO NOT EDIT MANUALLY -->\n\n- `reattach_cdroms` (int) - The number of CD-ROM devices to reattach to the final build artifact.\n  Range: 0 - 4. Defaults to 0.\n  \n  -> **Note:** If set to 0, the step is skipped. When set to a value in the\n  range, `remove_cdrom` is ignored and the CD-ROM devices are kept without\n  any attached media.\n\n<!-- End of code generated from the comments of the ReattachCDRomConfig struct in builder/vsphere/common/step_reattach_cdrom.go; -->\n\n\n### Floppy Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the FloppyConfig struct in builder/vsphere/common/step_add_floppy.go; DO NOT EDIT MANUALLY -->\n\n- `floppy_img_path` (string) - Datastore path to a floppy image that will be mounted to the virtual\n  machine. Example: `[datastore] iso/foo.flp`.\n\n- `floppy_files` ([]string) - A list of local files to be mounted to the virtual machine's floppy\n  drive.\n\n- `floppy_dirs` ([]string) - A list of directories to copy files from.\n\n- `floppy_content` (map[string]string) - Key/Values to add to the floppy disk. The keys represent the paths, and\n  the values contents. It can be used alongside `floppy_files` or\n  `floppy_dirs`, which is useful to add large files without loading them\n  into memory. If any paths are specified by both, the contents in\n  `floppy_content` will take precedence.\n  \n  HCL Example:\n  \n  ```hcl\n  floppy_content = {\n    \"meta-data\" = jsonencode(local.instance_data)\n    \"user-data\" = templatefile(\"user-data\", { packages = [\"nginx\"] })\n  }\n  ```\n\n- `floppy_label` (string) - The label to use for the floppy disk that is attached when the virtual\n  machine is booted. This is most useful for cloud-init, Kickstart or other\n  early initialization tools, which can benefit from labelled floppy disks.\n  By default, the floppy label will be 'packer'.\n\n<!-- End of code generated from the comments of the FloppyConfig struct in builder/vsphere/common/step_add_floppy.go; -->\n\n\n### Network Adapter Configuration\n\n<!-- Code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; DO NOT EDIT MANUALLY -->\n\nIf no adapter is defined, network tasks (communicators, most provisioners)\nwill not work, so it's advised to define one.\n\nExample configuration with two network adapters:\n\nHCL Example:\n\n```hcl\n\n\tnetwork_adapters {\n\t    network = \"VM Network\"\n\t    network_card = \"vmxnet3\"\n\t}\n\tnetwork_adapters {\n\t    network = \"OtherNetwork\"\n\t    network_card = \"vmxnet3\"\n\t}\n\n```\n\nJSON Example:\n\n```json\n\n\t\"network_adapters\": [\n\t  {\n\t    \"network\": \"VM Network\",\n\t    \"network_card\": \"vmxnet3\"\n\t  },\n\t  {\n\t    \"network\": \"OtherNetwork\",\n\t    \"network_card\": \"vmxnet3\"\n\t  }\n\t],\n\n```\n\n<!-- End of code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; -->\n\n\n**Required**:\n\n<!-- Code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; DO NOT EDIT MANUALLY -->\n\n- `network_card` (string) - The virtual machine network card type. For example `vmxnet3`.\n\n<!-- End of code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; DO NOT EDIT MANUALLY -->\n\n- `network` (string) - The network to which the virtual machine will connect.\n  \n  For example:\n  \n  - Name: `<NetworkName>`\n  - Inventory Path: `/<DatacenterName>/<FolderName>/<NetworkName>`\n  - Managed Object ID (Port Group): `Network:network-<xxxxx>`\n  - Managed Object ID (Distributed Port Group): `DistributedVirtualPortgroup::dvportgroup-<xxxxx>`\n  - Logical Switch UUID: `<uuid>`\n  - Segment ID: `/infra/segments/<SegmentID>`\n  \n  ~> **Note:** If more than one network resolves to the same name, either\n  the inventory path to network or an ID must be provided.\n  \n  ~> **Note:** If no network is specified, provide `host` to allow the\n  plugin to search for an available network.\n\n- `mac_address` (string) - The network card MAC address. For example `00:50:56:00:00:00`.\n\n- `passthrough` (\\*bool) - Enable DirectPath I/O passthrough for the network device.\n  Defaults to `false`.\n\n<!-- End of code generated from the comments of the NIC struct in builder/vsphere/iso/step_create.go; -->\n\n\n<!-- Code generated from the comments of the RemoveNetworkConfig struct in builder/vsphere/common/step_remove_network.go; DO NOT EDIT MANUALLY -->\n\n- `remove_network_adapter` (bool) - Remove all network adapters from template. Defaults to `false`.\n\n<!-- End of code generated from the comments of the RemoveNetworkConfig struct in builder/vsphere/common/step_remove_network.go; -->\n\n\n### Storage Configuration\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\nThe following example that will create a 15GB and a 20GB disk on the virtual\nmachine. The second disk will be thin provisioned:\n\nHCL Example:\n\n```hcl\n\n\tstorage {\n\t    disk_size = 15000\n\t}\n\tstorage {\n\t    disk_size = 20000\n\t    disk_thin_provisioned = true\n\t}\n\n```\n\nJSON Example:\n\n```json\n\n\t\"storage\": [\n\t  {\n\t    \"disk_size\": 15000\n\t  },\n\t  {\n\t    \"disk_size\": 20000,\n\t    \"disk_thin_provisioned\": true\n\t  }\n\t],\n\n```\n\nThe following example will use two PVSCSI controllers and two disks on each\ncontroller.\n\nHCL Example:\n\n```hcl\n\n\t disk_controller_type = [\"pvscsi\", \"pvscsi\"]\n\t\tstorage {\n\t\t   disk_size = 15000,\n\t\t   disk_controller_index = 0\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 0\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 1\n\t\t}\n\t\tstorage {\n\t\t   disk_size = 15000\n\t\t   disk_controller_index = 1\n\t\t}\n\n```\n\nJSON Example:\n\n```json\n\n\t\"disk_controller_type\": [\"pvscsi\", \"pvscsi\"],\n\t\"storage\": [\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 0\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 0\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 1\n\t  },\n\t  {\n\t    \"disk_size\": 15000,\n\t    \"disk_controller_index\": 1\n\t  }\n\t],\n\n```\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n**Required**:\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_size` (int64) - The size of the disk in MiB.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_thin_provisioned` (bool) - Enable thin provisioning for the disk.\n  Defaults to `false`.\n\n- `disk_eagerly_scrub` (bool) - Enable eager scrubbing for the disk.\n  Defaults to `false`.\n\n- `disk_controller_index` (int) - The assigned disk controller for the disk.\n  Defaults to the first controller, `(0)`.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n<!-- Code generated from the comments of the StorageConfig struct in builder/vsphere/common/storage_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_controller_type` ([]string) - The disk controller type. One of `lsilogic`, `lsilogic-sas`, `pvscsi`,\n  `nvme`, `scsi`, or `sata`. Defaults to `lsilogic`. Use a list to define\n  additional controllers. Refer to [SCSI, SATA, and NVMe Storage Controller\n  Conditions, Limitations, and Compatibility](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-5872D173-A076-42FE-8D0B-9DB0EB0E7362.html)\n  for additional information.\n\n- `storage` ([]DiskConfig) - A collection of one or more disks to be provisioned.\n  Refer to the [Storage Configuration](#storage-configuration) section for additional information.\n\n<!-- End of code generated from the comments of the StorageConfig struct in builder/vsphere/common/storage_config.go; -->\n\n\n### Flag Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the FlagConfig struct in builder/vsphere/common/step_add_flag.go; DO NOT EDIT MANUALLY -->\n\n- `vbs_enabled` (bool) - Enable Virtualization Based Security option for virtual machine. Defaults to `false`.\n  Requires `vvtd_enabled` and `NestedHV` to be set to `true`.\n  Requires `firmware` to be set to `efi-secure`.\n\n- `vvtd_enabled` (bool) - Enable IO/MMU option for virtual machine. Defaults to `false`.\n\n<!-- End of code generated from the comments of the FlagConfig struct in builder/vsphere/common/step_add_flag.go; -->\n\n\n### Boot Configuration\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\nThe boot configuration is very important: `boot_command` specifies the keys\nto type when the virtual machine is first booted in order to start the OS\ninstaller. This command is typed after boot_wait, which gives the virtual\nmachine some time to actually load.\n\nThe boot_command is an array of strings. The strings are all typed in\nsequence. It is an array only to improve readability within the template.\n\nThere are a set of special keys available. If these are in your boot\ncommand, they will be replaced by the proper key:\n\n-   `<bs>` - Backspace\n\n-   `<del>` - Delete\n\n-   `<enter> <return>` - Simulates an actual \"enter\" or \"return\" keypress.\n\n-   `<esc>` - Simulates pressing the escape key.\n\n-   `<tab>` - Simulates pressing the tab key.\n\n-   `<f1> - <f12>` - Simulates pressing a function key.\n\n-   `<up> <down> <left> <right>` - Simulates pressing an arrow key.\n\n-   `<spacebar>` - Simulates pressing the spacebar.\n\n-   `<insert>` - Simulates pressing the insert key.\n\n-   `<home> <end>` - Simulates pressing the home and end keys.\n\n  - `<pageUp> <pageDown>` - Simulates pressing the page up and page down\n    keys.\n\n-   `<menu>` - Simulates pressing the Menu key.\n\n-   `<leftAlt> <rightAlt>` - Simulates pressing the alt key.\n\n-   `<leftCtrl> <rightCtrl>` - Simulates pressing the ctrl key.\n\n-   `<leftShift> <rightShift>` - Simulates pressing the shift key.\n\n-   `<leftSuper> <rightSuper>` - Simulates pressing the ⌘ or Windows key.\n\n  - `<wait> <wait5> <wait10>` - Adds a 1, 5 or 10 second pause before\n    sending any additional keys. This is useful if you have to generally\n    wait for the UI to update before typing more.\n\n  - `<waitXX>` - Add an arbitrary pause before sending any additional keys.\n    The format of `XX` is a sequence of positive decimal numbers, each with\n    optional fraction and a unit suffix, such as `300ms`, `1.5h` or `2h45m`.\n    Valid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. For\n    example `<wait10m>` or `<wait1m20s>`.\n\n  - `<XXXOn> <XXXOff>` - Any printable keyboard character, and of these\n    \"special\" expressions, with the exception of the `<wait>` types, can\n    also be toggled on or off. For example, to simulate ctrl+c, use\n    `<leftCtrlOn>c<leftCtrlOff>`. Be sure to release them, otherwise they\n    will be held down until the machine reboots. To hold the `c` key down,\n    you would use `<cOn>`. Likewise, `<cOff>` to release.\n\n  - `{{ .HTTPIP }} {{ .HTTPPort }}` - The IP and port, respectively of an\n    HTTP server that is started serving the directory specified by the\n    `http_directory` configuration parameter. If `http_directory` isn't\n    specified, these will be blank!\n\n-   `{{ .Name }}` - The name of the VM.\n\nExample boot command. This is actually a working boot command used to start an\nCentOS 6.4 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nThe example shown below is a working boot command used to start an Ubuntu\n12.04 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nFor more examples of various boot commands, see the sample projects from our\n[community templates page](https://packer.io/community-tools#templates).\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\nPacker sends each character to the virtual machine with a default delay of 100ms between groups. The\ndelay alleviates possible issues with latency and CPU contention. If you notice missing keys, you\ncan tune this delay by specifying `boot_keygroup_interval` in your template.\n\nHCL Example:\n\n```hcl\nsource \"vsphere-iso\" \"example\" {\n    boot_keygroup_interval = \"500ms\"\n    # ...\n}\n```\n\nJSON Example:\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"vsphere-iso\",\n      \"boot_keygroup_interval\": \"500ms\"\n    }\n  ]\n}\n```\n\n**Optional**:\n\n<!-- Code generated from the comments of the RunConfig struct in builder/vsphere/common/step_run.go; DO NOT EDIT MANUALLY -->\n\n- `boot_order` (string) - The priority of boot devices. Defaults to `disk,cdrom`.\n  \n  The available boot devices are: `floppy`, `cdrom`, `ethernet`, and\n  `disk`.\n  \n  -> **Note:** If not set, the boot order is temporarily set to\n  `disk,cdrom` for the duration of the build and then cleared upon\n  build completion.\n\n<!-- End of code generated from the comments of the RunConfig struct in builder/vsphere/common/step_run.go; -->\n\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\n- `boot_keygroup_interval` (duration string | ex: \"1h5m2s\") - Time to wait after sending a group of key pressses. The value of this\n  should be a duration. Examples are `5s` and `1m30s` which will cause\n  Packer to wait five seconds and one minute 30 seconds, respectively. If\n  this isn't specified, a sensible default value is picked depending on\n  the builder type.\n\n- `boot_wait` (duration string | ex: \"1h5m2s\") - The time to wait after booting the initial virtual machine before typing\n  the `boot_command`. The value of this should be a duration. Examples are\n  `5s` and `1m30s` which will cause Packer to wait five seconds and one\n  minute 30 seconds, respectively. If this isn't specified, the default is\n  `10s` or 10 seconds. To set boot_wait to 0s, use a negative number, such\n  as \"-1s\"\n\n- `boot_command` ([]string) - This is an array of commands to type when the virtual machine is first\n  booted. The goal of these commands should be to type just enough to\n  initialize the operating system installer. Special keys can be typed as\n  well, and are covered in the section below on the boot command. If this\n  is not specified, it is assumed the installer will start itself.\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\n### Wait Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the WaitIpConfig struct in builder/vsphere/common/step_wait_for_ip.go; DO NOT EDIT MANUALLY -->\n\n- `ip_wait_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'.\n  Defaults to 30m (30 minutes). See the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration) documentation\n  for full details.\n\n- `ip_settle_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP to settle down, sometimes VM may\n  report incorrect IP initially, then its recommended to set that\n  parameter to apx. 2 minutes. Examples 45s and 10m. Defaults to\n  5s(5 seconds). Refer to the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration) documentation\n   for full details.\n\n- `ip_wait_address` (\\*string) - Set this to a CIDR address to cause the service to wait for an address that is contained in\n  this network range. Defaults to \"0.0.0.0/0\" for any ipv4 address. Examples include:\n  \n  * empty string (\"\") - remove all filters\n  * `0:0:0:0:0:0:0:0/0` - allow only ipv6 addresses\n  * `192.168.1.0/24` - only allow ipv4 addresses from 192.168.1.1 to 192.168.1.254\n\n<!-- End of code generated from the comments of the WaitIpConfig struct in builder/vsphere/common/step_wait_for_ip.go; -->\n\n\n## Export Configuration\n\n<!-- Code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; DO NOT EDIT MANUALLY -->\n\nYou can export an image in Open Virtualization Format (OVF) to the Packer\nhost.\n\nHCL Example:\n\n```hcl\n\n\t# ...\n\tvm_name = \"example-ubuntu\"\n\t# ...\n\texport {\n\t  force = true\n\t  output_directory = \"./output-artifacts\"\n\t}\n\n```\n\nJSON Example:\n\n```json\n...\n\n\t\"vm_name\": \"example-ubuntu\",\n\n...\n\n\t\"export\": {\n\t  \"force\": true,\n\t  \"output_directory\": \"./output-artifacts\"\n\t},\n\n```\n\nThe above configuration would create the following files:\n\n```text\n./output-artifacts/example-ubuntu-disk-0.vmdk\n./output-artifacts/example-ubuntu.mf\n./output-artifacts/example-ubuntu.ovf\n```\n\n<!-- End of code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; DO NOT EDIT MANUALLY -->\n\n- `name` (string) - The name of the exported image in Open Virtualization Format (OVF).\n  \n  -> **Note:** The name of the virtual machine with the `.ovf` extension is\n  used if this option is not specified.\n\n- `force` (bool) - Forces the export to overwrite existing files. Defaults to `false`.\n  If set to `false`, an error is returned if the file(s) already exists.\n\n- `image_files` (bool) - Include additional image files that are that are associated with the\n  virtual machine. Defaults to `false`. For example, `.nvram` and `.log`\n  files.\n\n- `manifest` (string) - The hash algorithm to use when generating a manifest file. Defaults to\n  `sha256`.\n  \n  The available options for this setting are: 'none', 'sha1', 'sha256', and\n  'sha512'.\n  \n  --> **Tip:** Use `none` to disable the creation of a manifest file.\n\n- `options` ([]string) - Advanced image export options. Available options include:\n  * `mac` - MAC address is exported for each Ethernet device.\n  * `uuid` - UUID is exported for the virtual machine.\n  * `extraconfig` - Extra configuration options are exported for the\n    virtual machine.\n  * `nodevicesubtypes` - Resource subtypes for CD/DVD drives, floppy\n    drives, and SCSI controllers are not exported.\n  \n  For example, adding the following export configuration option outputs the\n  MAC addresses for each Ethernet device in the OVF descriptor:\n  \n  HCL Example:\n  \n  ```hcl\n  ...\n    export {\n      options = [\"mac\"]\n    }\n  ```\n  \n  JSON: Example:\n  \n  ```json\n  ...\n    \"export\": {\n      \"options\": [\"mac\"]\n    },\n  ```\n\n- `output_format` (string) - The output format for the exported virtual machine image.\n  Defaults to `ovf`. Available options include `ovf` and `ova`.\n  \n  When set to `ova`, the image is first exported using Open Virtualization\n  Format (`.ovf`) and then converted to an Open Virtualization Archive\n  (`.ova`) using the VMware [Open Virtualization Format Tool](https://developer.broadcom.com/tools/open-virtualization-format-ovf-tool/latest)\n  (ovftool). The intermediate files are removed after the conversion.\n  \n  ~> **Note:** To use the `ova` format option, VMware ovftool must be\n  installed on the Packer host and accessible in either the system `PATH`\n  or the user's `PATH`.\n\n<!-- End of code generated from the comments of the ExportConfig struct in builder/vsphere/common/step_export.go; -->\n\n\n### Output Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the OutputConfig struct in builder/vsphere/common/output_config.go; DO NOT EDIT MANUALLY -->\n\n- `output_directory` (string) - The directory where artifacts from the build, such as the virtual machine\n  files and disks, will be output to. The path to the directory may be\n  relative or absolute. If relative, the path is relative to the working\n  directory Packer is run from. This directory must not exist or, if\n  created, must be empty prior to running the builder. By default this is\n  \"output-<buildName>\" where \"buildName\" is the name of the build.\n\n- `directory_permission` (os.FileMode) - The permissions to apply to the \"output_directory\", and to any parent\n  directories that get created for output_directory.  By default this is\n  \"0750\". You should express the permission as quoted string with a\n  leading zero such as \"0755\" in JSON file, because JSON does not support\n  octal value. In Unix-like OS, the actual permission may differ from\n  this value because of umask.\n\n<!-- End of code generated from the comments of the OutputConfig struct in builder/vsphere/common/output_config.go; -->\n\n\n### Content Library Configuration\n\n<!-- Code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; DO NOT EDIT MANUALLY -->\n\nCreate a content library item in a content library whose content is a VM\ntemplate or an OVF template created from the virtual machine image after\nthe build is complete.\n\nThe template is stored in a existing or newly created library item.\n\n<!-- End of code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; DO NOT EDIT MANUALLY -->\n\n- `library` (string) - The name of the content library in which the new content library item\n  containing the template will be created or updated. The content library\n  must be of type Local to allow deploying virtual machines.\n\n- `name` (string) - The name of the content library item that will be created or updated.\n  For VM templates, the name of the item should be different from\n  [vm_name](#vm_name) and the default is [vm_name](#vm_name) + timestamp\n  when not set. VM templates will be always imported to a new library item.\n  For OVF templates, the name defaults to [vm_name](#vm_name) when not set,\n  and if an item with the same name already exists it will be then updated\n  with the new OVF template, otherwise a new item will be created.\n  \n  ~> **Note:** It's not possible to update existing content library items\n  with a new VM template. If updating an existing content library item is\n  necessary, use an OVF template instead by setting the [ovf](#ovf) option\n  as `true`.\n\n- `description` (string) - A description for the content library item that will be created.\n  Defaults to \"Packer imported [vm_name](#vm_name) VM template\".\n\n- `cluster` (string) - The cluster where the VM template will be placed.\n  If `cluster` and `resource_pool` are both specified, `resource_pool` must\n  belong to cluster. If `cluster` and `host` are both specified, the ESXi\n  host must be a member of the cluster. This option is not used when\n  importing OVF templates. Defaults to [`cluster`](#cluster).\n\n- `folder` (string) - The virtual machine folder where the VM template will be placed.\n  This option is not used when importing OVF templates. Defaults to\n  the same folder as the source virtual machine.\n\n- `host` (string) - The ESXi host where the virtual machine template will be placed.\n  If `host` and `resource_pool` are both specified, `resource_pool` must\n  belong to host. If `host` and `cluster` are both specified, `host` must\n  be a member of the cluster. This option is not used when importing OVF\n  templates. Defaults to [`host`](#host).\n\n- `resource_pool` (string) - The resource pool where the virtual machine template will be placed.\n  Defaults to [`resource_pool`](#resource_pool). If [`resource_pool`](#resource_pool)\n  is unset, the system will attempt to choose a suitable resource pool\n  for the VM template.\n\n- `datastore` (string) - The datastore for the virtual machine template's configuration and log\n  files. This option is not used when importing OVF templates.\n  Defaults to the storage backing associated with the content library.\n\n- `destroy` (bool) - Destroy the virtual machine after the import to the content library.\n  Defaults to `false`.\n\n- `ovf` (bool) - Import an OVF template to the content library item. Defaults to `false`.\n\n- `skip_import` (bool) - Skip the import to the content library item. Useful during a build test\n  stage. Defaults to `false`.\n\n- `ovf_flags` ([]string) - Flags to use for OVF package creation. The supported flags can be\n  obtained using ExportFlag.list. If unset, no flags will be used.\n  Known values: `EXTRA_CONFIG`, `PRESERVE_MAC`.\n\n<!-- End of code generated from the comments of the ContentLibraryDestinationConfig struct in builder/vsphere/common/step_import_to_content_library.go; -->\n\n\n**VM Template**\n\nHCL Example:\n\n```hcl\n\tcontent_library_destination {\n\t\t\tlibrary = \"Example Content Library\"\n\t}\n```\n\nJSON Example:\n\n```json\n\t\"content_library_destination\" : {\n\t    \"library\": \"Example Content Library\"\n\t}\n```\n\n**OVF Template**\n\nHCL Example:\n\n```hcl\n\tcontent_library_destination {\n\t\t\tlibrary = \"Example Content Library\"\n\t\t\tovf = true\n\t}\n```\n\nJSON Example:\n\n```json\n\t\"content_library_destination\" : {\n\t    \"library\": \"Example Content Library\",\n\t    \"ovf\": true\n\t}\n```\n\n### Extra Configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the ConfigParamsConfig struct in builder/vsphere/common/step_config_params.go; DO NOT EDIT MANUALLY -->\n\n- `configuration_parameters` (map[string]string) - A map of key-value pairs to sent to the [`extraConfig`](https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html#extraConfig).\n  in the vSphere API's `VirtualMachineConfigSpec`.\n  \n  HCL Example:\n  \n  ```hcl\n    configuration_parameters = {\n      \"disk.EnableUUID\" = \"TRUE\"\n      \"svga.autodetect\" = \"TRUE\"\n      \"log.keepOld\"     = \"15\"\n    }\n  ```\n  \n  JSON Example:\n  \n  ```json\n    \"configuration_parameters\": {\n      \"disk.EnableUUID\": \"TRUE\",\n      \"svga.autodetect\": \"TRUE\",\n      \"log.keepOld\": \"15\"\n    }\n  ```\n  \n  ~> **Note:** Configuration keys that would conflict with parameters that\n  are explicitly configurable through other fields in the `ConfigSpec`` object\n  are silently ignored. Refer to the [`VirtualMachineConfigSpec`](https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html)\n  in the vSphere API documentation.\n\n- `tools_sync_time` (bool) - Enable time synchronization with the ESXi host where the virtual machine\n  is running. Defaults to `false`.\n\n- `tools_upgrade_policy` (bool) - Automatically check for and upgrade VMware Tools after a virtual machine\n  power cycle. Defaults to `false`.\n\n<!-- End of code generated from the comments of the ConfigParamsConfig struct in builder/vsphere/common/step_config_params.go; -->\n\n\n### Communicator Configuration\n\n**Optional**:\n\n##### Common\n\n<!-- Code generated from the comments of the Config struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `communicator` (string) - Packer currently supports three kinds of communicators:\n  \n  -   `none` - No communicator will be used. If this is set, most\n      provisioners also can't be used.\n  \n  -   `ssh` - An SSH connection will be established to the machine. This\n      is usually the default.\n  \n  -   `winrm` - A WinRM connection will be established.\n  \n  In addition to the above, some builders have custom communicators they\n  can use. For example, the Docker builder has a \"docker\" communicator\n  that uses `docker exec` and `docker cp` to execute scripts and copy\n  files.\n\n- `pause_before_connecting` (duration string | ex: \"1h5m2s\") - We recommend that you enable SSH or WinRM as the very last step in your\n  guest's bootstrap script, but sometimes you may have a race condition\n  where you need Packer to wait before attempting to connect to your\n  guest.\n  \n  If you end up in this situation, you can use the template option\n  `pause_before_connecting`. By default, there is no pause. For example if\n  you set `pause_before_connecting` to `10m` Packer will check whether it\n  can connect, as normal. But once a connection attempt is successful, it\n  will disconnect and then wait 10 minutes before connecting to the guest\n  and beginning provisioning.\n\n<!-- End of code generated from the comments of the Config struct in communicator/config.go; -->\n\n\n##### SSH\n\n<!-- Code generated from the comments of the SSH struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `ssh_host` (string) - The address to SSH to. This usually is automatically configured by the\n  builder.\n\n- `ssh_port` (int) - The port to connect to SSH. This defaults to `22`.\n\n- `ssh_username` (string) - The username to connect to SSH with. Required if using SSH.\n\n- `ssh_password` (string) - A plaintext password to use to authenticate with SSH.\n\n- `ssh_ciphers` ([]string) - This overrides the value of ciphers supported by default by Golang.\n  The default value is [\n    \"aes128-gcm@openssh.com\",\n    \"chacha20-poly1305@openssh.com\",\n    \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n  ]\n  \n  Valid options for ciphers include:\n  \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"aes128-gcm@openssh.com\",\n  \"chacha20-poly1305@openssh.com\",\n  \"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",\n\n- `ssh_clear_authorized_keys` (bool) - If true, Packer will attempt to remove its temporary key from\n  `~/.ssh/authorized_keys` and `/root/.ssh/authorized_keys`. This is a\n  mostly cosmetic option, since Packer will delete the temporary private\n  key from the host system regardless of whether this is set to true\n  (unless the user has set the `-debug` flag). Defaults to \"false\";\n  currently only works on guests with `sed` installed.\n\n- `ssh_key_exchange_algorithms` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\n  supported by default by Golang. Acceptable values include:\n  \"curve25519-sha256@libssh.org\", \"ecdh-sha2-nistp256\",\n  \"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n  \"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".\n\n- `ssh_certificate_file` (string) - Path to user certificate used to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_pty` (bool) - If `true`, a PTY will be requested for the SSH connection. This defaults\n  to `false`.\n\n- `ssh_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\n  determine when the machine has booted so this is usually quite long.\n  Example value: `10m`.\n  This defaults to `5m`, unless `ssh_handshake_attempts` is set.\n\n- `ssh_disable_agent_forwarding` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `false`.\n\n- `ssh_handshake_attempts` (int) - The number of handshakes to attempt with SSH once it can connect.\n  This defaults to `10`, unless a `ssh_timeout` is set.\n\n- `ssh_bastion_host` (string) - A bastion host to use for the actual SSH connection.\n\n- `ssh_bastion_port` (int) - The port of the bastion host. Defaults to `22`.\n\n- `ssh_bastion_agent_auth` (bool) - If `true`, the local SSH agent will be used to authenticate with the\n  bastion host. Defaults to `false`.\n\n- `ssh_bastion_username` (string) - The username to connect to the bastion host.\n\n- `ssh_bastion_password` (string) - The password to use to authenticate with the bastion host.\n\n- `ssh_bastion_interactive` (bool) - If `true`, the keyboard-interactive used to authenticate with bastion host.\n\n- `ssh_bastion_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with the\n  bastion host. The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_bastion_certificate_file` (string) - Path to user certificate used to authenticate with bastion host.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_file_transfer_method` (string) - `scp` or `sftp` - How to transfer files, Secure copy (default) or SSH\n  File Transfer Protocol.\n  \n  **NOTE**: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n  (the default protocol for copying data) returns a a non-zero error code since the MOTW\n  cannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\n  with SFTP instead `ssh_file_transfer_method = \"sftp\"`.\n\n- `ssh_proxy_host` (string) - A SOCKS proxy host to use for SSH connection\n\n- `ssh_proxy_port` (int) - A port of the SOCKS proxy. Defaults to `1080`.\n\n- `ssh_proxy_username` (string) - The optional username to authenticate with the proxy server.\n\n- `ssh_proxy_password` (string) - The optional password to use to authenticate with the proxy server.\n\n- `ssh_keep_alive_interval` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\n  value (`-1s`) to disable. Example value: `10s`. Defaults to `5s`.\n\n- `ssh_read_write_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\n  useful if, for example, packer hangs on a connection after a reboot.\n  Example: `5m`. Disabled by default.\n\n- `ssh_remote_tunnels` ([]string) - \n\n- `ssh_local_tunnels` ([]string) - \n\n<!-- End of code generated from the comments of the SSH struct in communicator/config.go; -->\n\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n##### Windows Remote Management (WinRM)\n\n<!-- Code generated from the comments of the WinRM struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `winrm_username` (string) - The username to use to connect to WinRM.\n\n- `winrm_password` (string) - The password to use to connect to WinRM.\n\n- `winrm_host` (string) - The address for WinRM to connect to.\n  \n  NOTE: If using an Amazon EBS builder, you can specify the interface\n  WinRM connects to via\n  [`ssh_interface`](/packer/integrations/hashicorp/amazon/latest/components/builder/ebs#ssh_interface)\n\n- `winrm_no_proxy` (bool) - Setting this to `true` adds the remote\n  `host:port` to the `NO_PROXY` environment variable. This has the effect of\n  bypassing any configured proxies when connecting to the remote host.\n  Default to `false`.\n\n- `winrm_port` (int) - The WinRM port to connect to. This defaults to `5985` for plain\n  unencrypted connection and `5986` for SSL when `winrm_use_ssl` is set to\n  true.\n\n- `winrm_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for WinRM to become available. This defaults\n  to `30m` since setting up a Windows machine generally takes a long time.\n\n- `winrm_use_ssl` (bool) - If `true`, use HTTPS for WinRM.\n\n- `winrm_insecure` (bool) - If `true`, do not check server certificate chain and host name.\n\n- `winrm_use_ntlm` (bool) - If `true`, NTLMv2 authentication (with session security) will be used\n  for WinRM, rather than default (basic authentication), removing the\n  requirement for basic authentication to be enabled within the target\n  guest. Further reading for remote connection authentication can be found\n  [here](https://msdn.microsoft.com/en-us/library/aa384295(v=vs.85).aspx).\n\n<!-- End of code generated from the comments of the WinRM struct in communicator/config.go; -->\n\n\n## Working with Clusters and Hosts\n\n### Standalone ESXi Hosts\n\nOnly use the `host` option. Optionally, specify a `resource_pool`:\n\nHCL Example:\n\n```hcl\n  host = \"\"esxi-01.example.com\"\"\n  resource_pool = \"example_resource_pool\"\n```\n\nJSON Example:\n\n```json\n  \"host\": \"esxi-01.example.com\",\n  \"resource_pool\": \"example_resource_pool\",\n```\n\n### Clusters with Distributed Resource Scheduler Enabled\n\nOnly use the `cluster` option. Optionally, specify a `resource_pool`:\n\nHCL Example:\n\n```hcl\n  cluster = \"cluster-01\"\n  resource_pool = \"example_resource_pool\"\n```\n\nJSON Example:\n\n```json\n  \"cluster\": \"cluster-01\",\n  \"resource_pool\": \"example_resource_pool\",\n```\n\n### Clusters without Distributed Resource Scheduler Enabled\n\nUse the `cluster` and `host`parameters:\n\nHCL Example:\n\n```hcl\n  cluster = \"cluster-01\"\n  host = \"esxi-01.example.com\"\n```\n\nJSON Example:\n\n```json\n  \"cluster\": \"cluster-01\",\n  \"host\": \"esxi-01.example.com\",\n```\n\n## Privileges\n\nIt is recommended to create a custom vSphere role with the required privileges to integrate Packer\nwith vSphere. Accounts or groups can be added to the role to ensure that Packer has least privilege\naccess to the infrastructure.\n\nFor example, a named service account (_e.g._ `svc-packer-vsphere@example.com`).\n\nClone the default **Read-Only** vSphere role and add the following privileges, which are based on\nthe capabilities of the `vsphere-iso` plugin:\n\n| Category        | Privilege                                           | Reference                                          |\n| --------------- | --------------------------------------------------- | -------------------------------------------------- |\n| Content Library | Add library item                                    | `ContentLibrary.AddLibraryItem`                    |\n| ...             | Update Library Item                                 | `ContentLibrary.UpdateLibraryItem`                 |\n| Datastore       | Allocate space                                      | `Datastore.AllocateSpace`                          |\n| ...             | Browse datastore                                    | `Datastore.Browse`                                 |\n| ...             | Low level file operations                           | `Datastore.FileManagement`                         |\n| Network         | Assign network                                      | `Network.Assign`                                   |\n| Resource        | Assign virtual machine to resource pool             | `Resource.AssignVMToPool`                          |\n| vApp            | Export                                              | `vApp.Export`                                      |\n| Virtual Machine | Configuration > Add new disk                        | `VirtualMachine.Config.AddNewDisk`                 |\n| ...             | Configuration > Add or remove device                | `VirtualMachine.Config.AddRemoveDevice`            |\n| ...             | Configuration > Advanced configuration              | `VirtualMachine.Config.AdvancedConfig`             |\n| ...             | Configuration > Change CPU count                    | `VirtualMachine.Config.CPUCount`                   |\n| ...             | Configuration > Change memory                       | `VirtualMachine.Config.Memory`                     |\n| ...             | Configuration > Change settings                     | `VirtualMachine.Config.Settings`                   |\n| ...             | Configuration > Change Resource                     | `VirtualMachine.Config.Resource`                   |\n| ...             | Configuration > Set annotation                      | `VirtualMachine.Config.Annotation`                 |\n| ...             | Edit Inventory > Create from existing               | `VirtualMachine.Inventory.CreateFromExisting`      |\n| ...             | Edit Inventory > Create new                         | `VirtualMachine.Inventory.Create`                  |\n| ...             | Edit Inventory > Remove                             | `VirtualMachine.Inventory.Delete`                  |\n| ...             | Interaction > Configure CD media                    | `VirtualMachine.Interact.SetCDMedia`               |\n| ...             | Interaction > Configure floppy media                | `VirtualMachine.Interact.SetFloppyMedia`           |\n| ...             | Interaction > Connect devices                       | `VirtualMachine.Interact.DeviceConnection`         |\n| ...             | Interaction > Inject USB HID scan codes             | `VirtualMachine.Interact.PutUsbScanCodes`          |\n| ...             | Interaction > Power off                             | `VirtualMachine.Interact.PowerOff`                 |\n| ...             | Interaction > Power on                              | `VirtualMachine.Interact.PowerOn`                  |\n| ...             | Provisioning > Create template from virtual machine | `VirtualMachine.Provisioning.CreateTemplateFromVM` |\n| ...             | Provisioning > Mark as template                     | `VirtualMachine.Provisioning.MarkAsTemplate`       |\n| ...             | Provisioning > Mark as virtual machine              | `VirtualMachine.Provisioning.MarkAsVM`             |\n| ...             | State > Create snapshot                             | `VirtualMachine.State.CreateSnapshot`              |\n\nGlobal permissions **[are required](https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-security/GUID-74F53189-EF41-4AC1-A78E-D25621855800.html#how-do-permissions-work-in-vsphere-0)** for the content library based on the hierarchical inheritance of permissions. Once the custom vSphere role is created, assign **Global Permissions** in vSphere to the accounts or groups used for the Packer to vSphere integration, if using the content library.\n\nFor example:\n\n1. Log in to the vCenter Server at _https://<management_vcenter_server_fqdn>/ui_ as `administrator@vsphere.local`.\n2. Select **Menu** > **Administration**.\n3. In the left pane, select **Access control** > **Global permissions** and click the **Add permissions** icon.\n4. In the **Add permissions** dialog box, enter the service account (_e.g._\n   `svc-packer-vsphere@example.com`), select the custom role (_e.g._ Packer to vSphere Integration\n   Role) and the **Propagate to children** check box, and click **OK**.\n\nIn an environment with many vCenter Server instances, such as management and workload, in enhanced\nlinked-mode, you may wish to further reduce the scope of access across the vSphere infrastructure if\nyou do not want Packer to have access to the management vCenter Server instance, but only allow\naccess to workload vCenter Server instances.\n\nFor example:\n\n1. From the **Hosts and clusters** inventory, select management vCenter Server to restrict scope,\n   and click the **Permissions** tab.\n2. Select the service account with the custom role assigned and click the **Change role** icon.\n3. In the **Change role** dialog box, from the **Role** drop-down menu, select **No Access**, select\n   the **Propagate to children** check box, and click **OK**.\n","created_at":"2024-10-17T21:00:15.943Z","updated_at":"2024-10-17T21:00:15.943Z","name":"vSphere ISO","slug":"vsphere-iso","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},"processedVariablesMarkdown":{},"anchorLinks":[{"id":"examples","level":2,"title":"Examples"},{"id":"configuration-reference","level":2,"title":"Configuration Reference"},{"id":"http-configuration","level":3,"title":"HTTP Configuration"},{"id":"connection-configuration","level":3,"title":"Connection Configuration"},{"id":"location-configuration","level":3,"title":"Location Configuration"},{"id":"hardware-configuration","level":3,"title":"Hardware Configuration"},{"id":"create-configuration","level":3,"title":"Create Configuration"},{"id":"iso-configuration","level":3,"title":"ISO Configuration"},{"id":"cd-rom-configuration","level":3,"title":"CD-ROM Configuration"},{"id":"floppy-configuration","level":3,"title":"Floppy Configuration"},{"id":"network-adapter-configuration","level":3,"title":"Network Adapter Configuration"},{"id":"storage-configuration","level":3,"title":"Storage Configuration"},{"id":"flag-configuration","level":3,"title":"Flag Configuration"},{"id":"boot-configuration","level":3,"title":"Boot Configuration"},{"id":"wait-configuration","level":3,"title":"Wait Configuration"},{"id":"export-configuration","level":2,"title":"Export Configuration"},{"id":"output-configuration","level":3,"title":"Output Configuration"},{"id":"content-library-configuration","level":3,"title":"Content Library Configuration"},{"id":"extra-configuration","level":3,"title":"Extra Configuration"},{"id":"communicator-configuration","level":3,"title":"Communicator Configuration"},{"id":"common","level":5,"title":"Common"},{"id":"ssh","level":5,"title":"SSH"},{"id":"windows-remote-management-(winrm)","level":5,"title":"Windows Remote Management (WinRM)"},{"id":"working-with-clusters-and-hosts","level":2,"title":"Working with Clusters and Hosts"},{"id":"standalone-esxi-hosts","level":3,"title":"Standalone ESXi Hosts"},{"id":"clusters-with-distributed-resource-scheduler-enabled","level":3,"title":"Clusters with Distributed Resource Scheduler Enabled"},{"id":"clusters-without-distributed-resource-scheduler-enabled","level":3,"title":"Clusters without Distributed Resource Scheduler Enabled"},{"id":"privileges","level":2,"title":"Privileges"}],"serializedREADME":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",{\"className\":\"g-type-long-body\"},`Type: `,mdx(\"inlineCode\",{parentName:\"p\"},`vsphere-iso`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Artifact BuilderId: `,mdx(\"inlineCode\",{parentName:\"p\"},`jetbrains.vsphere`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`This builder starts from a guest operating system ISO file and builds a virtual machine image on a\nvSphere cluster or an ESXi host using the vSphere API.`),mdx(\"div\",{\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` This builder is developed to maintain compatibility with VMware vSphere versions until\ntheir respective End of General Support dates. For detailed information, refer to the\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://support.broadcom.com/group/ecx/productlifecycle\"},`Broadcom Product Lifecycle`),`.`)),mdx(\"h2\",{\"id\":\"user-content-examples\",\"data-text-content\":\"Examples\",\"className\":\"g-type-display-3\"},`Examples`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Basic examples are available in the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/packer-plugin-vsphere/tree/main/examples/\"},`examples`),`\ndirectory of the GitHub repository.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Additional examples are available in the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/vmware-samples/packer-examples-for-vsphere\"},mdx(\"inlineCode\",{parentName:\"a\"},`vmware-samples/packer-examples-for-vsphere`)),`\nGitHub repository maintained by VMware by Broadcom.`))),mdx(\"h2\",{\"id\":\"user-content-configuration-reference\",\"data-text-content\":\"Configuration Reference\",\"className\":\"g-type-display-3\"},`Configuration Reference`),mdx(\"h3\",{\"id\":\"user-content-http-configuration\",\"data-text-content\":\"HTTP Configuration\",\"className\":\"g-type-display-4\"},`HTTP Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Packer will create an http server serving `,mdx(\"inlineCode\",{parentName:\"p\"},`http_directory`),` when it is set, a\nrandom free port will be selected and the architecture of the directory\nreferenced will be available in your builder.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Example usage from a builder:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`wget http://{{ .HTTPIP }}:{{ .HTTPPort }}/foo/bar/preseed.cfg\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`http_directory`),` (string) - Path to a directory to serve using an HTTP server. The files in this\ndirectory will be available over HTTP that will be requestable from the\nvirtual machine. This is useful for hosting kickstart files and so on.\nBy default this is an empty string, which means no HTTP server will be\nstarted. The address and port of the HTTP server will be available as\nvariables in `,mdx(\"inlineCode\",{parentName:\"p\"},`boot_command`),`. This is covered in more detail below.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`http_content`),` (map`,`[string]`,`string) - Key/Values to serve using an HTTP server. `,mdx(\"inlineCode\",{parentName:\"p\"},`http_content`),` works like and\nconflicts with `,mdx(\"inlineCode\",{parentName:\"p\"},`http_directory`),`. The keys represent the paths and the\nvalues contents, the keys must start with a slash, ex: `,mdx(\"inlineCode\",{parentName:\"p\"},`/path/to/file`),`.\n`,mdx(\"inlineCode\",{parentName:\"p\"},`http_content`),` is useful for hosting kickstart files and so on. By\ndefault this is empty, which means no HTTP server will be started. The\naddress and port of the HTTP server will be available as variables in\n`,mdx(\"inlineCode\",{parentName:\"p\"},`boot_command`),`. This is covered in more detail below.\nExample:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  http_content `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"/a/b\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`     =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` file(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"http/b\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`)`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"/foo/bar\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` templatefile(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`\\${`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`path`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`root`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`}`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`/preseed.cfg\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` { packages `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"nginx\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`] })`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`http_port_min`),` (int) - These are the minimum and maximum port to use for the HTTP server\nstarted to serve the `,mdx(\"inlineCode\",{parentName:\"p\"},`http_directory`),`. Because Packer often runs in\nparallel, Packer will choose a randomly available port in this range to\nrun the HTTP server. If you want to force the HTTP server to be on one\nport, make this minimum and maximum port the same. By default the values\nare `,mdx(\"inlineCode\",{parentName:\"p\"},`8000`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`9000`),`, respectively.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`http_port_max`),` (int) - HTTP Port Max`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`http_bind_address`),` (string) - This is the bind address for the HTTP server. Defaults to 0.0.0.0 so that\nit will work with any network interface.`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`http_interface`),` (string) - The network interface (for example, `,mdx(\"inlineCode\",{parentName:\"li\"},`en0`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`ens192`),`, etc.) that the\nHTTP server will use to serve the `,mdx(\"inlineCode\",{parentName:\"li\"},`http_directory`),`. The plugin will identify the IP address\nassociated with this network interface and bind to it.`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`http_ip`),` (string) - The IP address to use for the HTTP server to serve the `,mdx(\"inlineCode\",{parentName:\"li\"},`http_directory`),`.`)),mdx(\"div\",{\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Notes:`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`The options `,mdx(\"inlineCode\",{parentName:\"li\"},`http_bind_address`),` and `,mdx(\"inlineCode\",{parentName:\"li\"},`http_interface`),` are mutually exclusive.`),mdx(\"li\",{parentName:\"ul\"},`Both `,mdx(\"inlineCode\",{parentName:\"li\"},`http_bind_address`),` and `,mdx(\"inlineCode\",{parentName:\"li\"},`http_interface`),` have higher priority than `,mdx(\"inlineCode\",{parentName:\"li\"},`http_ip`),`.`),mdx(\"li\",{parentName:\"ul\"},`The `,mdx(\"inlineCode\",{parentName:\"li\"},`http_bind_address`),` is matched against the IP addresses of the host's network interfaces. If\nno match is found, the plugin will terminate.`),mdx(\"li\",{parentName:\"ul\"},`Similarly, `,mdx(\"inlineCode\",{parentName:\"li\"},`http_interface`),` is compared with the host's network interfaces. If there's no\ncorresponding network interface, the plugin will also terminate.`),mdx(\"li\",{parentName:\"ul\"},`If neither `,mdx(\"inlineCode\",{parentName:\"li\"},`http_bind_address`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`http_interface`),`, and `,mdx(\"inlineCode\",{parentName:\"li\"},`http_ip`),` are provided, the plugin will\nautomatically find and use the IP address of the first non-loopback interface for `,mdx(\"inlineCode\",{parentName:\"li\"},`http_ip`),`.`)),mdx(\"h3\",{\"id\":\"user-content-connection-configuration\",\"data-text-content\":\"Connection Configuration\",\"className\":\"g-type-display-4\"},`Connection Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`vcenter_server`),` (string) - The fully qualified domain name or IP address of the vCenter Server\ninstance.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`username`),` (string) - The username to authenticate with the vCenter Server instance.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`password`),` (string) - The password to authenticate with the vCenter Server instance.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`insecure_connection`),` (bool) - Do not validate the certificate of the vCenter Server instance.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` This option is beneficial in scenarios where the certificate\nis self-signed or does not meet standard validation criteria.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`datacenter`),` (string) - The name of the datacenter object in the vSphere inventory.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` Required if more than one datacenter object exists in the\nvSphere inventory.`)))),mdx(\"h3\",{\"id\":\"user-content-location-configuration\",\"data-text-content\":\"Location Configuration\",\"className\":\"g-type-display-4\"},`Location Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`vm_name`),` (string) - The name of the virtual machine.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`folder`),` (string) - The virtual machine folder where the virtual machine is created.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`cluster`),` (string) - The cluster where the virtual machine is created.\nRefer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"#working-with-clusters-and-hosts\"},`Working With Clusters And Hosts`),`\nsection for more details.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`host`),` (string) - The ESXi host where the virtual machine is created. A full path must be\nspecified if the ESXi host is in a folder. For example `,mdx(\"inlineCode\",{parentName:\"p\"},`folder/host`),`.\nRefer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"#working-with-clusters-and-hosts\"},`Working With Clusters And Hosts`),`\nsection for more details.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`resource_pool`),` (string) - The resource pool where the virtual machine is created.\nIf this is not specified, the root resource pool associated with the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`cluster`),` is used.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),`  The full path to the resource pool must be provided.\nFor example, a simple resource pool path might resemble `,mdx(\"inlineCode\",{parentName:\"p\"},`rp-packer`),` and\na nested path might resemble 'rp-packer/rp-linux-images'.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`datastore`),` (string) - The datastore where the virtual machine is created.\nRequired if `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` is a cluster, or if `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` has multiple datastores.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`set_host_for_datastore_uploads`),` (bool) - The ESXI host used for uploading files to the datastore.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`create_snapshot`),` (bool) - Create a snapshot of the virtual machine to use as a base for linked clones.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`snapshot_name`),` (string) - The name of the snapshot when `,mdx(\"inlineCode\",{parentName:\"p\"},`create_snapshot`),` is `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`Created By Packer`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`convert_to_template`),` (bool) - Convert the virtual machine to a template after the build is complete.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.\nIf set to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, the virtual machine can not be imported into a content library.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`export`),` (`,`*`,`common.ExportConfig) - The configuration for exporting the virtual machine to an OVF.\nThe virtual machine is not exported if `,mdx(\"a\",{parentName:\"p\",\"href\":\"#export-configuration\"},`export configuration`),` is not specified.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`content_library_destination`),` (`,`*`,`common.ContentLibraryDestinationConfig) - Import the virtual machine as a VM template or OVF template to a content library.\nThe template will not be imported if no `,mdx(\"a\",{parentName:\"p\",\"href\":\"#content-library-import-configuration\"},`content library import configuration`),` is specified.\nIf set, `,mdx(\"inlineCode\",{parentName:\"p\"},`convert_to_template`),` must be set to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`local_cache_overwrite`),` (bool) - Overwrite files in the local cache if they already exist.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`remote_cache_cleanup`),` (bool) - Cleanup items added to the remote cache after the build is complete.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` If the local cache overwrite flag is set to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`RemoteCacheOverwrite`),` will\nimplicitly be set to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`. This is to ensure consistency between the local and remote\ncache.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`remote_cache_overwrite`),` (bool) - Overwrite files in the remote cache if they already exist.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`remote_cache_datastore`),` (string) - The remote cache datastore to use for the build.\nIf not set, the datastore of the virtual machine is used.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`remote_cache_path`),` (string) - The directory path on the remote cache datastore to use for the build.\nIf not set, the default path is `,mdx(\"inlineCode\",{parentName:\"p\"},`packer_cache/`),`.`))),mdx(\"h3\",{\"id\":\"user-content-hardware-configuration\",\"data-text-content\":\"Hardware Configuration\",\"className\":\"g-type-display-4\"},`Hardware Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`CPUs`),` (int32) - The number of virtual CPUs cores for the virtual machine.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`cpu_cores`),` (int32) - The number of virtual CPU cores per socket for the virtual machine.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`CPU_reservation`),` (int64) - The CPU reservation in MHz.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`CPU_limit`),` (int64) - The upper limit of available CPU resources in MHz.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`CPU_hot_plug`),` (bool) - Enable CPU hot plug setting for virtual machine. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`RAM`),` (int64) - The amount of memory for the virtual machine in MB.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`RAM_reservation`),` (int64) - The guaranteed minimum allocation of memory for the virtual machine in MB.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`RAM_reserve_all`),` (bool) - Reserve all allocated memory. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` May not be used together with `,mdx(\"inlineCode\",{parentName:\"p\"},`RAM_reservation`),`.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`RAM_hot_plug`),` (bool) - Enable memory hot add setting for virtual machine. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`video_ram`),` (int64) - The amount of video memory in KB. Defaults to 4096 KB.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` Refer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-789C3913-1053-4850-A0F0-E29C3D32B6DA.html\"},`vSphere documentation`),`\nfor supported maximums.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`displays`),` (int32) - The number of video displays. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`1`),`.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`\\`-> `,mdx(\"strong\",{parentName:\"p\"},`Note:`),` Refer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-789C3913-1053-4850-A0F0-E29C3D32B6DA.html\"},`vSphere documentation`),`\nfor supported maximums.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`pci_passthrough_allowed_device`),` ([]PCIPassthroughAllowedDevice) - Configure Dynamic DirectPath I/O `,mdx(\"a\",{parentName:\"p\",\"href\":\"#pci-passthrough-configuration\"},`PCI Passthrough`),` for\nvirtual machine. Refer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-5B3CAB26-5D06-4A99-92A0-3A04C69CE64B.html\"},`vSphere documentation`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`vgpu_profile`),` (string) - vGPU profile for accelerated graphics. Refer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://docs.nvidia.com/grid/latest/grid-vgpu-user-guide/index.html#configure-vmware-vsphere-vm-with-vgpu\"},`NVIDIA GRID vGPU documentation`),`\nfor examples of profile names. Defaults to none.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`NestedHV`),` (bool) - Enable nested hardware virtualization for the virtual machine.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`firmware`),` (string) - The firmware for the virtual machine.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`The available options for this setting are: 'bios', 'efi', and\n'efi-secure'.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` Use `,mdx(\"inlineCode\",{parentName:\"p\"},`efi-secure`),` for UEFI Secure Boot.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`force_bios_setup`),` (bool) - Force entry into the BIOS setup screen during boot. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`vTPM`),` (bool) - Enable virtual trusted platform module (TPM) device for the virtual\nmachine. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`precision_clock`),` (string) - The virtual precision clock device for the virtual machine.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`none`),`.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`The available options for this setting are: `,mdx(\"inlineCode\",{parentName:\"p\"},`none`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`ntp`),`, and `,mdx(\"inlineCode\",{parentName:\"p\"},`ptp`),`.`))),mdx(\"h3\",{\"id\":\"user-content-create-configuration\",\"data-text-content\":\"Create Configuration\",\"className\":\"g-type-display-4\"},`Create Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`vm_version`),` (uint) - Specifies the virtual machine hardware version. Defaults to the most\ncurrent virtual machine hardware version supported by the ESXi host.\nRefer to `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://knowledge.broadcom.com/external/article?articleNumber=315655\"},`KB 315655`),`\nfor more information on supported virtual hardware versions.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`guest_os_type`),` (string) - The guest operating system identifier for the virtual machine.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`otherGuest`),`.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`To get a list of supported guest operating system identifiers for your\nESXi host, run the following PowerShell command using `,mdx(\"inlineCode\",{parentName:\"p\"},`VMware.PowerCLI`),`:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`Connect-VIServer`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` -`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`Server `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"vcenter.example.com\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` -`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`User `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"administrator@vsphere.local\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` -`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`Password `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"password\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`$esxiHost `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` Get-VMHost`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` -`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`Name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"esxi-01.example.com\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`$environmentBrowser `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` Get-View`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` -`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`Id $esxiHost.ExtensionData.Parent.ExtensionData.ConfigManager.EnvironmentBrowser`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`$vmxVersion `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` ($environmentBrowser.QueryConfigOptionDescriptor() `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`|`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` Where-Object`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` DefaultConfigOption).Key`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`$osDescriptor `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` $environmentBrowser.QueryConfigOption($vmxVersion`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` $null`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`).GuestOSDescriptor`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`$osDescriptor `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`|`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` Select-Object`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` Id`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` Fullname`)),`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`network_adapters`),` ([]NIC) - The network adapters for the virtual machine.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` If no network adapter is defined, all network-related\noperations are skipped.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`usb_controller`),` ([]string) - The USB controllers for the virtual machine.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`The available options for this setting are: `,mdx(\"inlineCode\",{parentName:\"p\"},`usb`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`xhci`),`.`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`usb`),`: USB 2.0`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`xhci`),`: USB 3.0`)),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` A maximum of one of each controller type can be defined.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`notes`),` (string) - The annotations for the virtual machine.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`destroy`),` (bool) - Destroy the virtual machine after the build completes.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`))),mdx(\"h3\",{\"id\":\"user-content-iso-configuration\",\"data-text-content\":\"ISO Configuration\",\"className\":\"g-type-display-4\"},`ISO Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`By default, Packer will symlink, download or copy image files to the Packer\ncache into a \"`,mdx(\"inlineCode\",{parentName:\"p\"},`hash($iso_url+$iso_checksum).$iso_target_extension`),`\" file.\nPacker uses `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/go-getter\"},`hashicorp/go-getter`),` in\nfile mode in order to perform a download.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`go-getter supports the following protocols:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Local files`),mdx(\"li\",{parentName:\"ul\"},`Git`),mdx(\"li\",{parentName:\"ul\"},`Mercurial`),mdx(\"li\",{parentName:\"ul\"},`HTTP`),mdx(\"li\",{parentName:\"ul\"},`Amazon S3`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Examples:\ngo-getter can guess the checksum type based on `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_checksum`),` length, and it is\nalso possible to specify the checksum type.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In JSON:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"iso_checksum\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"946a6077af6f5f95a51f82fdc44051c7aa19f9cfc5f737954845a6050543d7c2\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"iso_url\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"`)),`\n`,`\n`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"iso_checksum\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"file:ubuntu.org/..../ubuntu-14.04.1-server-amd64.iso.sum\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"iso_url\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"`)),`\n`,`\n`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"iso_checksum\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"file://./shasums.txt\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"iso_url\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"`)),`\n`,`\n`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"iso_checksum\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"file:./shasums.txt\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"iso_url\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In HCL2:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    iso_checksum `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"946a6077af6f5f95a51f82fdc44051c7aa19f9cfc5f737954845a6050543d7c2\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    iso_url `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"`)),`\n`,`\n`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    iso_checksum `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"file:ubuntu.org/..../ubuntu-14.04.1-server-amd64.iso.sum\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    iso_url `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"`)),`\n`,`\n`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    iso_checksum `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"file://./shasums.txt\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    iso_url `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"`)),`\n`,`\n`)),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    iso_checksum `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"file:./shasums.txt\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    iso_url `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"ubuntu.org/.../ubuntu-14.04.1-server-amd64.iso\"`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Required`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`iso_checksum`),` (string) - The checksum for the ISO file or virtual hard drive file. The type of\nthe checksum is specified within the checksum field as a prefix, ex:\n\"md5:{$checksum}\". The type of the checksum can also be omitted and\nPacker will try to infer it based on string length. Valid values are\n\"none\", \"{$checksum}\", \"md5:{$checksum}\", \"sha1:{$checksum}\",\n\"sha256:{$checksum}\", \"sha512:{$checksum}\" or \"file:{$path}\". Here is a\nlist of valid checksum values:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},`md5:090992ba9fd140077b0661cb75f7ce13`),mdx(\"li\",{parentName:\"ul\"},`090992ba9fd140077b0661cb75f7ce13`),mdx(\"li\",{parentName:\"ul\"},`sha1:ebfb681885ddf1234c18094a45bbeafd91467911`),mdx(\"li\",{parentName:\"ul\"},`ebfb681885ddf1234c18094a45bbeafd91467911`),mdx(\"li\",{parentName:\"ul\"},`sha256:ed363350696a726b7932db864dda019bd2017365c9e299627830f06954643f93`),mdx(\"li\",{parentName:\"ul\"},`ed363350696a726b7932db864dda019bd2017365c9e299627830f06954643f93`),mdx(\"li\",{parentName:\"ul\"},`file:`,mdx(\"a\",{parentName:\"li\",\"href\":\"http://releases.ubuntu.com/20.04/SHA256SUMS\"},`http://releases.ubuntu.com/20.04/SHA256SUMS`)),mdx(\"li\",{parentName:\"ul\"},`file:file://./local/path/file.sum`),mdx(\"li\",{parentName:\"ul\"},`file:./local/path/file.sum`),mdx(\"li\",{parentName:\"ul\"},`none\nAlthough the checksum will not be verified when it is set to \"none\",\nthis is not recommended since these files can be very large and\ncorruption does happen from time to time.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`iso_url`),` (string) - A URL to the ISO containing the installation image or virtual hard drive\n(VHD or VHDX) file to clone.`))),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`iso_urls`),` ([]string) - Multiple URLs for the ISO to download. Packer will try these in order.\nIf anything goes wrong attempting to download or while downloading a\nsingle URL, it will move on to the next. All URLs must point to the same\nfile (same checksum). By default this is empty and `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_url`),` is used.\nOnly one of `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_url`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_urls`),` can be specified.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`iso_target_path`),` (string) - The path where the iso should be saved after download. By default will\ngo in the packer cache, with a hash of the original filename and\nchecksum as its name.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`iso_target_extension`),` (string) - The extension of the iso file after download. This defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`iso`),`.`))),mdx(\"h3\",{\"id\":\"user-content-cd-rom-configuration\",\"data-text-content\":\"CD-ROM Configuration\",\"className\":\"g-type-display-4\"},`CD-ROM Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`For each ISO defined in the CD-ROM configuration, a CD-ROM device is added.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`If the `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_url`),` is defined in addition to the `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_paths`),`, the `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_url`),` is added to the virtual\nmachine first. This keeps the `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_url`),` first in the boot order by default, allowing the boot ISO to\nbe defined by the `,mdx(\"inlineCode\",{parentName:\"p\"},`iso_url`),` and the VMware Tools ISO added from ESXi host.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  iso_urls `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"windows-server.iso\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"https://example.com/isos/windows-server.iso\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  ]`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  iso_paths `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"[] /usr/lib/vmware/isoimages/windows.iso\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  ]`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"iso_urls\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"windows-server.iso\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"https://example.com/isos/windows-server.iso\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  ],`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"iso_paths\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`      \"[] /usr/lib/vmware/isoimages/windows.iso\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  ],`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`An iso (CD) containing custom files can be made available for your build.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`By default, no extra CD will be attached. All files listed in this setting\nget placed into the root directory of the CD and the CD is attached as the\nsecond CD device.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`This config exists to work around modern operating systems that have no\nway to mount floppy disks, which was our previous go-to for adding files at\nboot time.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`cd_files`),` ([]string) - A list of files to place onto a CD that is attached when the VM is\nbooted. This can include either files or directories; any directories\nwill be copied onto the CD recursively, preserving directory structure\nhierarchy. Symlinks will have the link's target copied into the directory\ntree on the CD where the symlink was. File globbing is allowed.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Usage example (JSON):`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"cd_files\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"./somedirectory/meta-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"./somedirectory/user-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`],`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"cd_label\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"cidata\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`)),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Usage example (HCL):`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`cd_files `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"./somedirectory/meta-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"./somedirectory/user-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`cd_label `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"cidata\"`)),`\n`)),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`The above will create a CD with two files, user-data and meta-data in the\nCD root. This specific example is how you would create a CD that can be\nused for an Ubuntu 20.04 autoinstall.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Since globbing is also supported,`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`cd_files `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"./somedirectory/*\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`cd_label `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"cidata\"`)),`\n`)),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Would also be an acceptable way to define the above cd. The difference\nbetween providing the directory with or without the glob is whether the\ndirectory itself or its contents will be at the CD root.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Use of this option assumes that you have a command line tool installed\nthat can handle the iso creation. Packer will use one of the following\ntools:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},`xorriso`),mdx(\"li\",{parentName:\"ul\"},`mkisofs`),mdx(\"li\",{parentName:\"ul\"},`hdiutil (normally found in macOS)`),mdx(\"li\",{parentName:\"ul\"},`oscdimg (normally found in Windows as part of the Windows ADK)`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`cd_content`),` (map`,`[string]`,`string) - Key/Values to add to the CD. The keys represent the paths, and the values\ncontents. It can be used alongside `,mdx(\"inlineCode\",{parentName:\"p\"},`cd_files`),`, which is useful to add large\nfiles without loading them into memory. If any paths are specified by both,\nthe contents in `,mdx(\"inlineCode\",{parentName:\"p\"},`cd_content`),` will take precedence.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Usage example (HCL):`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`cd_files `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"vendor-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`cd_content `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"meta-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` jsonencode(local`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`instance_data)`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"user-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` templatefile(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"user-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` { packages `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"nginx\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`] })`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`cd_label `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"cidata\"`)),`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`cd_label`),` (string) - CD Label`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`cdrom_type`),` (string) - The type of controller to use for the CD-ROM device. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`ide`),`.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`The available options for this setting are: `,mdx(\"inlineCode\",{parentName:\"p\"},`ide`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`sata`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`iso_paths`),` ([]string) - A list of paths to ISO files in either a datastore or a content library\nthat will be attached to the virtual machine.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`iso_paths `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"[nfs] iso/ubuntu-server-amd64.iso\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"Example Content Library/ubuntu-server-amd64/ubuntu-server-amd64.iso\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`)),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"iso_paths\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"[nfs] iso/ubuntu-server-amd64.iso\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"Example Content Library/ubuntu-server-amd64/ubuntu-server-amd64.iso\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`)),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Two ISOs are referenced:`),mdx(\"ol\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ol\"},`An ISO in the \"`,mdx(\"em\",{parentName:\"li\"},`iso`),`\" folder of the \"`,mdx(\"em\",{parentName:\"li\"},`nfs`),`\" datastore with the file\nname of \"`,mdx(\"em\",{parentName:\"li\"},`ubuntu-server-amd64.iso`),`\". \"`,mdx(\"em\",{parentName:\"li\"},`ubuntu-server-amd64.iso`),`\".`),mdx(\"li\",{parentName:\"ol\"},`An ISO in the \"`,mdx(\"em\",{parentName:\"li\"},`Example Content Library`),`\" content library with the\nitem name of \"`,mdx(\"em\",{parentName:\"li\"},`ubuntu-server-amd64`),`\".`)),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` All files in a content library have an associated item name.\nTo determine the file name, view the datastore backing the content\nlibrary or use the `,mdx(\"inlineCode\",{parentName:\"p\"},`govc`),` vSphere CLI.`)))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`remove_cdrom`),` (bool) - Remove all CD-ROM devices from the virtual machine when the build is\ncomplete. Defaults to `,mdx(\"inlineCode\",{parentName:\"li\"},`false`),`.`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`reattach_cdroms`),` (int) - The number of CD-ROM devices to reattach to the final build artifact.\nRange: 0 - 4. Defaults to 0.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` If set to 0, the step is skipped. When set to a value in the\nrange, `,mdx(\"inlineCode\",{parentName:\"p\"},`remove_cdrom`),` is ignored and the CD-ROM devices are kept without\nany attached media.`)))),mdx(\"h3\",{\"id\":\"user-content-floppy-configuration\",\"data-text-content\":\"Floppy Configuration\",\"className\":\"g-type-display-4\"},`Floppy Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`floppy_img_path`),` (string) - Datastore path to a floppy image that will be mounted to the virtual\nmachine. Example: `,mdx(\"inlineCode\",{parentName:\"p\"},`[datastore] iso/foo.flp`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`floppy_files`),` ([]string) - A list of local files to be mounted to the virtual machine's floppy\ndrive.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`floppy_dirs`),` ([]string) - A list of directories to copy files from.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`floppy_content`),` (map`,`[string]`,`string) - Key/Values to add to the floppy disk. The keys represent the paths, and\nthe values contents. It can be used alongside `,mdx(\"inlineCode\",{parentName:\"p\"},`floppy_files`),` or\n`,mdx(\"inlineCode\",{parentName:\"p\"},`floppy_dirs`),`, which is useful to add large files without loading them\ninto memory. If any paths are specified by both, the contents in\n`,mdx(\"inlineCode\",{parentName:\"p\"},`floppy_content`),` will take precedence.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`floppy_content `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"meta-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` jsonencode(local`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`instance_data)`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"user-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` templatefile(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"user-data\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` { packages `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"nginx\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`] })`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`floppy_label`),` (string) - The label to use for the floppy disk that is attached when the virtual\nmachine is booted. This is most useful for cloud-init, Kickstart or other\nearly initialization tools, which can benefit from labelled floppy disks.\nBy default, the floppy label will be 'packer'.`))),mdx(\"h3\",{\"id\":\"user-content-network-adapter-configuration\",\"data-text-content\":\"Network Adapter Configuration\",\"className\":\"g-type-display-4\"},`Network Adapter Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`If no adapter is defined, network tasks (communicators, most provisioners)\nwill not work, so it's advised to define one.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Example configuration with two network adapters:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`    network_adapters`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        network `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"VM Network\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        network_card `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"vmxnet3\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`    network_adapters`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        network `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"OtherNetwork\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        network_card `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"vmxnet3\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"network_adapters\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"network\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"VM Network\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"network_card\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"vmxnet3\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      }`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"network\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"OtherNetwork\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"network_card\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"vmxnet3\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    ],`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Required`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`network_card`),` (string) - The virtual machine network card type. For example `,mdx(\"inlineCode\",{parentName:\"li\"},`vmxnet3`),`.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`network`),` (string) - The network to which the virtual machine will connect.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`For example:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},`Name: `,mdx(\"inlineCode\",{parentName:\"li\"},`<NetworkName>`)),mdx(\"li\",{parentName:\"ul\"},`Inventory Path: `,mdx(\"inlineCode\",{parentName:\"li\"},`/<DatacenterName>/<FolderName>/<NetworkName>`)),mdx(\"li\",{parentName:\"ul\"},`Managed Object ID (Port Group): `,mdx(\"inlineCode\",{parentName:\"li\"},`Network:network-<xxxxx>`)),mdx(\"li\",{parentName:\"ul\"},`Managed Object ID (Distributed Port Group): `,mdx(\"inlineCode\",{parentName:\"li\"},`DistributedVirtualPortgroup::dvportgroup-<xxxxx>`)),mdx(\"li\",{parentName:\"ul\"},`Logical Switch UUID: `,mdx(\"inlineCode\",{parentName:\"li\"},`<uuid>`)),mdx(\"li\",{parentName:\"ul\"},`Segment ID: `,mdx(\"inlineCode\",{parentName:\"li\"},`/infra/segments/<SegmentID>`))),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` If more than one network resolves to the same name, either\nthe inventory path to network or an ID must be provided.`)),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` If no network is specified, provide `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` to allow the\nplugin to search for an available network.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`mac_address`),` (string) - The network card MAC address. For example `,mdx(\"inlineCode\",{parentName:\"p\"},`00:50:56:00:00:00`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`passthrough`),` (`,`*`,`bool) - Enable DirectPath I/O passthrough for the network device.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`remove_network_adapter`),` (bool) - Remove all network adapters from template. Defaults to `,mdx(\"inlineCode\",{parentName:\"li\"},`false`),`.`)),mdx(\"h3\",{\"id\":\"user-content-storage-configuration\",\"data-text-content\":\"Storage Configuration\",\"className\":\"g-type-display-4\"},`Storage Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The following example that will create a 15GB and a 20GB disk on the virtual\nmachine. The second disk will be thin provisioned:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`    storage`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        disk_size `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`    storage`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        disk_size `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 20000`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        disk_thin_provisioned `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"storage\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_size\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      }`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_size\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 20000`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_thin_provisioned\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    ],`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The following example will use two PVSCSI controllers and two disks on each\ncontroller.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`     disk_controller_type `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"pvscsi\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"pvscsi\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`        storage`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`           disk_size `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`           disk_controller_index `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 0`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`        storage`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`           disk_size `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`           disk_controller_index `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 0`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`        storage`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`           disk_size `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`           disk_controller_index `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 1`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`        storage`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`           disk_size `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`           disk_controller_index `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 1`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`        }`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"disk_controller_type\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"pvscsi\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"pvscsi\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`],`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"storage\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_size\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_controller_index\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 0`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      }`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_size\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_controller_index\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 0`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      }`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_size\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_controller_index\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 1`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      }`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_size\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 15000`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"disk_controller_index\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 1`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    ],`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Required`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`disk_size`),` (int64) - The size of the disk in MiB.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`disk_thin_provisioned`),` (bool) - Enable thin provisioning for the disk.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`disk_eagerly_scrub`),` (bool) - Enable eager scrubbing for the disk.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`disk_controller_index`),` (int) - The assigned disk controller for the disk.\nDefaults to the first controller, `,mdx(\"inlineCode\",{parentName:\"p\"},`(0)`),`.`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`disk_controller_type`),` ([]string) - The disk controller type. One of `,mdx(\"inlineCode\",{parentName:\"p\"},`lsilogic`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`lsilogic-sas`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`pvscsi`),`,\n`,mdx(\"inlineCode\",{parentName:\"p\"},`nvme`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`scsi`),`, or `,mdx(\"inlineCode\",{parentName:\"p\"},`sata`),`. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`lsilogic`),`. Use a list to define\nadditional controllers. Refer to `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-vm-administration/GUID-5872D173-A076-42FE-8D0B-9DB0EB0E7362.html\"},`SCSI, SATA, and NVMe Storage Controller\nConditions, Limitations, and Compatibility`),`\nfor additional information.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`storage`),` ([]DiskConfig) - A collection of one or more disks to be provisioned.\nRefer to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"#storage-configuration\"},`Storage Configuration`),` section for additional information.`))),mdx(\"h3\",{\"id\":\"user-content-flag-configuration\",\"data-text-content\":\"Flag Configuration\",\"className\":\"g-type-display-4\"},`Flag Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`vbs_enabled`),` (bool) - Enable Virtualization Based Security option for virtual machine. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.\nRequires `,mdx(\"inlineCode\",{parentName:\"p\"},`vvtd_enabled`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`NestedHV`),` to be set to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`.\nRequires `,mdx(\"inlineCode\",{parentName:\"p\"},`firmware`),` to be set to `,mdx(\"inlineCode\",{parentName:\"p\"},`efi-secure`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`vvtd_enabled`),` (bool) - Enable IO/MMU option for virtual machine. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`))),mdx(\"h3\",{\"id\":\"user-content-boot-configuration\",\"data-text-content\":\"Boot Configuration\",\"className\":\"g-type-display-4\"},`Boot Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The boot configuration is very important: `,mdx(\"inlineCode\",{parentName:\"p\"},`boot_command`),` specifies the keys\nto type when the virtual machine is first booted in order to start the OS\ninstaller. This command is typed after boot_wait, which gives the virtual\nmachine some time to actually load.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The boot_command is an array of strings. The strings are all typed in\nsequence. It is an array only to improve readability within the template.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`There are a set of special keys available. If these are in your boot\ncommand, they will be replaced by the proper key:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<bs>`),` - Backspace`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<del>`),` - Delete`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<enter> <return>`),` - Simulates an actual \"enter\" or \"return\" keypress.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<esc>`),` - Simulates pressing the escape key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<tab>`),` - Simulates pressing the tab key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<f1> - <f12>`),` - Simulates pressing a function key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<up> <down> <left> <right>`),` - Simulates pressing an arrow key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<spacebar>`),` - Simulates pressing the spacebar.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<insert>`),` - Simulates pressing the insert key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<home> <end>`),` - Simulates pressing the home and end keys.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<pageUp> <pageDown>`),` - Simulates pressing the page up and page down\nkeys.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<menu>`),` - Simulates pressing the Menu key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<leftAlt> <rightAlt>`),` - Simulates pressing the alt key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<leftCtrl> <rightCtrl>`),` - Simulates pressing the ctrl key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<leftShift> <rightShift>`),` - Simulates pressing the shift key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<leftSuper> <rightSuper>`),` - Simulates pressing the ⌘ or Windows key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<wait> <wait5> <wait10>`),` - Adds a 1, 5 or 10 second pause before\nsending any additional keys. This is useful if you have to generally\nwait for the UI to update before typing more.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<waitXX>`),` - Add an arbitrary pause before sending any additional keys.\nThe format of `,mdx(\"inlineCode\",{parentName:\"p\"},`XX`),` is a sequence of positive decimal numbers, each with\noptional fraction and a unit suffix, such as `,mdx(\"inlineCode\",{parentName:\"p\"},`300ms`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`1.5h`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`2h45m`),`.\nValid time units are `,mdx(\"inlineCode\",{parentName:\"p\"},`ns`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`us`),` (or `,mdx(\"inlineCode\",{parentName:\"p\"},`\\xb5s`),`), `,mdx(\"inlineCode\",{parentName:\"p\"},`ms`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`s`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`m`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`h`),`. For\nexample `,mdx(\"inlineCode\",{parentName:\"p\"},`<wait10m>`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`<wait1m20s>`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<XXXOn> <XXXOff>`),` - Any printable keyboard character, and of these\n\"special\" expressions, with the exception of the `,mdx(\"inlineCode\",{parentName:\"p\"},`<wait>`),` types, can\nalso be toggled on or off. For example, to simulate ctrl+c, use\n`,mdx(\"inlineCode\",{parentName:\"p\"},`<leftCtrlOn>c<leftCtrlOff>`),`. Be sure to release them, otherwise they\nwill be held down until the machine reboots. To hold the `,mdx(\"inlineCode\",{parentName:\"p\"},`c`),` key down,\nyou would use `,mdx(\"inlineCode\",{parentName:\"p\"},`<cOn>`),`. Likewise, `,mdx(\"inlineCode\",{parentName:\"p\"},`<cOff>`),` to release.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`{{ .HTTPIP }} {{ .HTTPPort }}`),` - The IP and port, respectively of an\nHTTP server that is started serving the directory specified by the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`http_directory`),` configuration parameter. If `,mdx(\"inlineCode\",{parentName:\"p\"},`http_directory`),` isn't\nspecified, these will be blank!`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`{{ .Name }}`),` - The name of the VM.`))),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Example boot command. This is actually a working boot command used to start an\nCentOS 6.4 installer:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In JSON:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"boot_command\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`       \"<tab><wait>\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`       \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    ]`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In HCL2:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`boot_command `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`       \"<tab><wait>\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`       \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    ]`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The example shown below is a working boot command used to start an Ubuntu\n12.04 installer:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In JSON:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"boot_command\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"<esc><esc><enter><wait>\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"/install/vmlinuz noapic \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"hostname={{ .Name }} \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"fb=false debconf/frontend=noninteractive \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"keyboard-configuration/variant=USA console-setup/ask_detect=false \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"initrd=/install/initrd.gz -- <enter>\"`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In HCL2:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`boot_command `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"<esc><esc><enter><wait>\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"/install/vmlinuz noapic \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"hostname={{ .Name }} \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"fb=false debconf/frontend=noninteractive \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"keyboard-configuration/variant=USA console-setup/ask_detect=false \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"initrd=/install/initrd.gz -- <enter>\"`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`For more examples of various boot commands, see the sample projects from our\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://packer.io/community-tools#templates\"},`community templates page`),`.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Packer sends each character to the virtual machine with a default delay of 100ms between groups. The\ndelay alleviates possible issues with latency and CPU contention. If you notice missing keys, you\ncan tune this delay by specifying `,mdx(\"inlineCode\",{parentName:\"p\"},`boot_keygroup_interval`),` in your template.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`source`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` \"vsphere-iso\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` \"example\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    boot_keygroup_interval `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"500ms\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`    # ...`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`{`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`  \"builders\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`      \"type\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"vsphere-iso\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`      \"boot_keygroup_interval\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"500ms\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  ]`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`boot_order`),` (string) - The priority of boot devices. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`disk,cdrom`),`.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`The available boot devices are: `,mdx(\"inlineCode\",{parentName:\"p\"},`floppy`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`cdrom`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`ethernet`),`, and\n`,mdx(\"inlineCode\",{parentName:\"p\"},`disk`),`.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` If not set, the boot order is temporarily set to\n`,mdx(\"inlineCode\",{parentName:\"p\"},`disk,cdrom`),` for the duration of the build and then cleared upon\nbuild completion.`)))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`boot_keygroup_interval`),` (duration string | ex: \"1h5m2s\") - Time to wait after sending a group of key pressses. The value of this\nshould be a duration. Examples are `,mdx(\"inlineCode\",{parentName:\"p\"},`5s`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`1m30s`),` which will cause\nPacker to wait five seconds and one minute 30 seconds, respectively. If\nthis isn't specified, a sensible default value is picked depending on\nthe builder type.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`boot_wait`),` (duration string | ex: \"1h5m2s\") - The time to wait after booting the initial virtual machine before typing\nthe `,mdx(\"inlineCode\",{parentName:\"p\"},`boot_command`),`. The value of this should be a duration. Examples are\n`,mdx(\"inlineCode\",{parentName:\"p\"},`5s`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`1m30s`),` which will cause Packer to wait five seconds and one\nminute 30 seconds, respectively. If this isn't specified, the default is\n`,mdx(\"inlineCode\",{parentName:\"p\"},`10s`),` or 10 seconds. To set boot_wait to 0s, use a negative number, such\nas \"-1s\"`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`boot_command`),` ([]string) - This is an array of commands to type when the virtual machine is first\nbooted. The goal of these commands should be to type just enough to\ninitialize the operating system installer. Special keys can be typed as\nwell, and are covered in the section below on the boot command. If this\nis not specified, it is assumed the installer will start itself.`))),mdx(\"h3\",{\"id\":\"user-content-wait-configuration\",\"data-text-content\":\"Wait Configuration\",\"className\":\"g-type-display-4\"},`Wait Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ip_wait_timeout`),` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'.\nDefaults to 30m (30 minutes). See the Golang\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://golang.org/pkg/time/#ParseDuration\"},`ParseDuration`),` documentation\nfor full details.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ip_settle_timeout`),` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP to settle down, sometimes VM may\nreport incorrect IP initially, then its recommended to set that\nparameter to apx. 2 minutes. Examples 45s and 10m. Defaults to\n5s(5 seconds). Refer to the Golang\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://golang.org/pkg/time/#ParseDuration\"},`ParseDuration`),` documentation\nfor full details.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ip_wait_address`),` (`,`*`,`string) - Set this to a CIDR address to cause the service to wait for an address that is contained in\nthis network range. Defaults to \"0.0.0.0/0\" for any ipv4 address. Examples include:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},`empty string (\"\") - remove all filters`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`0:0:0:0:0:0:0:0/0`),` - allow only ipv6 addresses`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`192.168.1.0/24`),` - only allow ipv4 addresses from 192.168.1.1 to 192.168.1.254`)))),mdx(\"h2\",{\"id\":\"user-content-export-configuration\",\"data-text-content\":\"Export Configuration\",\"className\":\"g-type-display-3\"},`Export Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`You can export an image in Open Virtualization Format (OVF) to the Packer\nhost.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`    # ...`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    vm_name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"example-ubuntu\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`    # ...`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`    export`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      force `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      output_directory `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"./output-artifacts\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`...`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"vm_name\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"example-ubuntu\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`...`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"export\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`      \"force\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`      \"output_directory\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"./output-artifacts\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    },`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The above configuration would create the following files:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\"},`./output-artifacts/example-ubuntu-disk-0.vmdk`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\"},`./output-artifacts/example-ubuntu.mf`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\"},`./output-artifacts/example-ubuntu.ovf`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`name`),` (string) - The name of the exported image in Open Virtualization Format (OVF).`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-info g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` The name of the virtual machine with the `,mdx(\"inlineCode\",{parentName:\"p\"},`.ovf`),` extension is\nused if this option is not specified.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`force`),` (bool) - Forces the export to overwrite existing files. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.\nIf set to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`, an error is returned if the file(s) already exists.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`image_files`),` (bool) - Include additional image files that are that are associated with the\nvirtual machine. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`. For example, `,mdx(\"inlineCode\",{parentName:\"p\"},`.nvram`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`.log`),`\nfiles.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`manifest`),` (string) - The hash algorithm to use when generating a manifest file. Defaults to\n`,mdx(\"inlineCode\",{parentName:\"p\"},`sha256`),`.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`The available options for this setting are: 'none', 'sha1', 'sha256', and\n'sha512'.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`--> `,mdx(\"strong\",{parentName:\"p\"},`Tip:`),` Use `,mdx(\"inlineCode\",{parentName:\"p\"},`none`),` to disable the creation of a manifest file.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`options`),` ([]string) - Advanced image export options. Available options include:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`mac`),` - MAC address is exported for each Ethernet device.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`uuid`),` - UUID is exported for the virtual machine.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`extraconfig`),` - Extra configuration options are exported for the\nvirtual machine.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nodevicesubtypes`),` - Resource subtypes for CD/DVD drives, floppy\ndrives, and SCSI controllers are not exported.`)),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`For example, adding the following export configuration option outputs the\nMAC addresses for each Ethernet device in the OVF descriptor:`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`...`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  export`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    options `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"mac\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`JSON: Example:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`...`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"export\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`    \"options\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"mac\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  },`)),`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`output_format`),` (string) - The output format for the exported virtual machine image.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`ovf`),`. Available options include `,mdx(\"inlineCode\",{parentName:\"p\"},`ovf`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`ova`),`.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`When set to `,mdx(\"inlineCode\",{parentName:\"p\"},`ova`),`, the image is first exported using Open Virtualization\nFormat (`,mdx(\"inlineCode\",{parentName:\"p\"},`.ovf`),`) and then converted to an Open Virtualization Archive\n(`,mdx(\"inlineCode\",{parentName:\"p\"},`.ova`),`) using the VMware `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://developer.broadcom.com/tools/open-virtualization-format-ovf-tool/latest\"},`Open Virtualization Format Tool`),`\n(ovftool). The intermediate files are removed after the conversion.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` To use the `,mdx(\"inlineCode\",{parentName:\"p\"},`ova`),` format option, VMware ovftool must be\ninstalled on the Packer host and accessible in either the system `,mdx(\"inlineCode\",{parentName:\"p\"},`PATH`),`\nor the user's `,mdx(\"inlineCode\",{parentName:\"p\"},`PATH`),`.`)))),mdx(\"h3\",{\"id\":\"user-content-output-configuration\",\"data-text-content\":\"Output Configuration\",\"className\":\"g-type-display-4\"},`Output Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`output_directory`),` (string) - The directory where artifacts from the build, such as the virtual machine\nfiles and disks, will be output to. The path to the directory may be\nrelative or absolute. If relative, the path is relative to the working\ndirectory Packer is run from. This directory must not exist or, if\ncreated, must be empty prior to running the builder. By default this is\n\"output-`,`\" where \"buildName\" is the name of the build.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`directory_permission`),` (os.FileMode) - The permissions to apply to the \"output_directory\", and to any parent\ndirectories that get created for output_directory.  By default this is\n\"0750\". You should express the permission as quoted string with a\nleading zero such as \"0755\" in JSON file, because JSON does not support\noctal value. In Unix-like OS, the actual permission may differ from\nthis value because of umask.`))),mdx(\"h3\",{\"id\":\"user-content-content-library-configuration\",\"data-text-content\":\"Content Library Configuration\",\"className\":\"g-type-display-4\"},`Content Library Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Create a content library item in a content library whose content is a VM\ntemplate or an OVF template created from the virtual machine image after\nthe build is complete.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The template is stored in a existing or newly created library item.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`library`),` (string) - The name of the content library in which the new content library item\ncontaining the template will be created or updated. The content library\nmust be of type Local to allow deploying virtual machines.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`name`),` (string) - The name of the content library item that will be created or updated.\nFor VM templates, the name of the item should be different from\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"#vm_name\"},`vm_name`),` and the default is `,mdx(\"a\",{parentName:\"p\",\"href\":\"#vm_name\"},`vm_name`),` + timestamp\nwhen not set. VM templates will be always imported to a new library item.\nFor OVF templates, the name defaults to `,mdx(\"a\",{parentName:\"p\",\"href\":\"#vm_name\"},`vm_name`),` when not set,\nand if an item with the same name already exists it will be then updated\nwith the new OVF template, otherwise a new item will be created.`),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` It's not possible to update existing content library items\nwith a new VM template. If updating an existing content library item is\nnecessary, use an OVF template instead by setting the `,mdx(\"a\",{parentName:\"p\",\"href\":\"#ovf\"},`ovf`),` option\nas `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`description`),` (string) - A description for the content library item that will be created.\nDefaults to \"Packer imported `,mdx(\"a\",{parentName:\"p\",\"href\":\"#vm_name\"},`vm_name`),` VM template\".`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`cluster`),` (string) - The cluster where the VM template will be placed.\nIf `,mdx(\"inlineCode\",{parentName:\"p\"},`cluster`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`resource_pool`),` are both specified, `,mdx(\"inlineCode\",{parentName:\"p\"},`resource_pool`),` must\nbelong to cluster. If `,mdx(\"inlineCode\",{parentName:\"p\"},`cluster`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` are both specified, the ESXi\nhost must be a member of the cluster. This option is not used when\nimporting OVF templates. Defaults to `,mdx(\"a\",{parentName:\"p\",\"href\":\"#cluster\"},mdx(\"inlineCode\",{parentName:\"a\"},`cluster`)),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`folder`),` (string) - The virtual machine folder where the VM template will be placed.\nThis option is not used when importing OVF templates. Defaults to\nthe same folder as the source virtual machine.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`host`),` (string) - The ESXi host where the virtual machine template will be placed.\nIf `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`resource_pool`),` are both specified, `,mdx(\"inlineCode\",{parentName:\"p\"},`resource_pool`),` must\nbelong to host. If `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`cluster`),` are both specified, `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` must\nbe a member of the cluster. This option is not used when importing OVF\ntemplates. Defaults to `,mdx(\"a\",{parentName:\"p\",\"href\":\"#host\"},mdx(\"inlineCode\",{parentName:\"a\"},`host`)),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`resource_pool`),` (string) - The resource pool where the virtual machine template will be placed.\nDefaults to `,mdx(\"a\",{parentName:\"p\",\"href\":\"#resource_pool\"},mdx(\"inlineCode\",{parentName:\"a\"},`resource_pool`)),`. If `,mdx(\"a\",{parentName:\"p\",\"href\":\"#resource_pool\"},mdx(\"inlineCode\",{parentName:\"a\"},`resource_pool`)),`\nis unset, the system will attempt to choose a suitable resource pool\nfor the VM template.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`datastore`),` (string) - The datastore for the virtual machine template's configuration and log\nfiles. This option is not used when importing OVF templates.\nDefaults to the storage backing associated with the content library.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`destroy`),` (bool) - Destroy the virtual machine after the import to the content library.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ovf`),` (bool) - Import an OVF template to the content library item. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`skip_import`),` (bool) - Skip the import to the content library item. Useful during a build test\nstage. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ovf_flags`),` ([]string) - Flags to use for OVF package creation. The supported flags can be\nobtained using ExportFlag.list. If unset, no flags will be used.\nKnown values: `,mdx(\"inlineCode\",{parentName:\"p\"},`EXTRA_CONFIG`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`PRESERVE_MAC`),`.`))),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`VM Template`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`    content_library_destination`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`            library `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"Example Content Library\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"content_library_destination\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` : {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"library\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"Example Content Library\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`OVF Template`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`    content_library_destination`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`            library `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"Example Content Library\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`            ovf `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"content_library_destination\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` : {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"library\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"Example Content Library\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`        \"ovf\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    }`)),`\n`)),mdx(\"h3\",{\"id\":\"user-content-extra-configuration\",\"data-text-content\":\"Extra Configuration\",\"className\":\"g-type-display-4\"},`Extra Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`configuration_parameters`),` (map`,`[string]`,`string) - A map of key-value pairs to sent to the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html#extraConfig\"},mdx(\"inlineCode\",{parentName:\"a\"},`extraConfig`)),`.\nin the vSphere API's `,mdx(\"inlineCode\",{parentName:\"p\"},`VirtualMachineConfigSpec`),`.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  configuration_parameters `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"disk.EnableUUID\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"TRUE\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"svga.autodetect\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},` =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"TRUE\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"log.keepOld\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`     =`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"15\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"configuration_parameters\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`    \"disk.EnableUUID\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"TRUE\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`    \"svga.autodetect\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"TRUE\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`    \"log.keepOld\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`:`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"15\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"div\",{parentName:\"li\",\"className\":\"alert alert-warning g-type-body\"},mdx(\"p\",{parentName:\"div\",\"className\":\"g-type-long-body\"},``,mdx(\"strong\",{parentName:\"p\"},`Note:`),` Configuration keys that would conflict with parameters that\nare explicitly configurable through other fields in the `,mdx(\"inlineCode\",{parentName:\"p\"},`ConfigSpec\\`\\` object\nare silently ignored. Refer to the [`),`VirtualMachineConfigSpec\\`](`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html\"},`https://dp-downloads.broadcom.com/api-content/apis/API_VWSA_001/8.0U3/html/ReferenceGuides/vim.vm.ConfigSpec.html`),`)\nin the vSphere API documentation.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`tools_sync_time`),` (bool) - Enable time synchronization with the ESXi host where the virtual machine\nis running. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`tools_upgrade_policy`),` (bool) - Automatically check for and upgrade VMware Tools after a virtual machine\npower cycle. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`))),mdx(\"h3\",{\"id\":\"user-content-communicator-configuration\",\"data-text-content\":\"Communicator Configuration\",\"className\":\"g-type-display-4\"},`Communicator Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"h5\",{\"id\":\"user-content-common\",\"data-text-content\":\"Common\",\"className\":\"g-type-display-6\"},`Common`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`communicator`),` (string) - Packer currently supports three kinds of communicators:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`none`),` - No communicator will be used. If this is set, most\nprovisioners also can't be used.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh`),` - An SSH connection will be established to the machine. This\nis usually the default.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm`),` - A WinRM connection will be established.`))),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`In addition to the above, some builders have custom communicators they\ncan use. For example, the Docker builder has a \"docker\" communicator\nthat uses `,mdx(\"inlineCode\",{parentName:\"p\"},`docker exec`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`docker cp`),` to execute scripts and copy\nfiles.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`pause_before_connecting`),` (duration string | ex: \"1h5m2s\") - We recommend that you enable SSH or WinRM as the very last step in your\nguest's bootstrap script, but sometimes you may have a race condition\nwhere you need Packer to wait before attempting to connect to your\nguest.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`If you end up in this situation, you can use the template option\n`,mdx(\"inlineCode\",{parentName:\"p\"},`pause_before_connecting`),`. By default, there is no pause. For example if\nyou set `,mdx(\"inlineCode\",{parentName:\"p\"},`pause_before_connecting`),` to `,mdx(\"inlineCode\",{parentName:\"p\"},`10m`),` Packer will check whether it\ncan connect, as normal. But once a connection attempt is successful, it\nwill disconnect and then wait 10 minutes before connecting to the guest\nand beginning provisioning.`))),mdx(\"h5\",{\"id\":\"user-content-ssh\",\"data-text-content\":\"SSH\",\"className\":\"g-type-display-6\"},`SSH`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_host`),` (string) - The address to SSH to. This usually is automatically configured by the\nbuilder.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_port`),` (int) - The port to connect to SSH. This defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`22`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_username`),` (string) - The username to connect to SSH with. Required if using SSH.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_password`),` (string) - A plaintext password to use to authenticate with SSH.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_ciphers`),` ([]string) - This overrides the value of ciphers supported by default by Golang.\nThe default value is `,`[\n\"aes128-gcm@openssh.com\",\n\"chacha20-poly1305@openssh.com\",\n\"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n]`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Valid options for ciphers include:\n\"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"`,mdx(\"a\",{parentName:\"p\",\"href\":\"mailto:aes128-gcm@openssh.com\"},`aes128-gcm@openssh.com`),`\",\n\"`,mdx(\"a\",{parentName:\"p\",\"href\":\"mailto:chacha20-poly1305@openssh.com\"},`chacha20-poly1305@openssh.com`),`\",\n\"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_clear_authorized_keys`),` (bool) - If true, Packer will attempt to remove its temporary key from\n`,mdx(\"inlineCode\",{parentName:\"p\"},`~/.ssh/authorized_keys`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`/root/.ssh/authorized_keys`),`. This is a\nmostly cosmetic option, since Packer will delete the temporary private\nkey from the host system regardless of whether this is set to true\n(unless the user has set the `,mdx(\"inlineCode\",{parentName:\"p\"},`-debug`),` flag). Defaults to \"false\";\ncurrently only works on guests with `,mdx(\"inlineCode\",{parentName:\"p\"},`sed`),` installed.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_key_exchange_algorithms`),` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\nsupported by default by Golang. Acceptable values include:\n\"`,mdx(\"a\",{parentName:\"p\",\"href\":\"mailto:curve25519-sha256@libssh.org\"},`curve25519-sha256@libssh.org`),`\", \"ecdh-sha2-nistp256\",\n\"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n\"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_certificate_file`),` (string) - Path to user certificate used to authenticate with SSH.\nThe `,mdx(\"inlineCode\",{parentName:\"p\"},`~`),` can be used in path and will be expanded to the\nhome directory of current user.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_pty`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, a PTY will be requested for the SSH connection. This defaults\nto `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_timeout`),` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\ndetermine when the machine has booted so this is usually quite long.\nExample value: `,mdx(\"inlineCode\",{parentName:\"p\"},`10m`),`.\nThis defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`5m`),`, unless `,mdx(\"inlineCode\",{parentName:\"p\"},`ssh_handshake_attempts`),` is set.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_disable_agent_forwarding`),` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_handshake_attempts`),` (int) - The number of handshakes to attempt with SSH once it can connect.\nThis defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`10`),`, unless a `,mdx(\"inlineCode\",{parentName:\"p\"},`ssh_timeout`),` is set.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_host`),` (string) - A bastion host to use for the actual SSH connection.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_port`),` (int) - The port of the bastion host. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`22`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_agent_auth`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, the local SSH agent will be used to authenticate with the\nbastion host. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_username`),` (string) - The username to connect to the bastion host.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_password`),` (string) - The password to use to authenticate with the bastion host.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_interactive`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, the keyboard-interactive used to authenticate with bastion host.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_private_key_file`),` (string) - Path to a PEM encoded private key file to use to authenticate with the\nbastion host. The `,mdx(\"inlineCode\",{parentName:\"p\"},`~`),` can be used in path and will be expanded to the\nhome directory of current user.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_certificate_file`),` (string) - Path to user certificate used to authenticate with bastion host.\nThe `,mdx(\"inlineCode\",{parentName:\"p\"},`~`),` can be used in path and will be expanded to the\nhome directory of current user.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_file_transfer_method`),` (string) - `,mdx(\"inlineCode\",{parentName:\"p\"},`scp`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`sftp`),` - How to transfer files, Secure copy (default) or SSH\nFile Transfer Protocol.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`NOTE`),`: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n(the default protocol for copying data) returns a a non-zero error code since the MOTW\ncannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\nwith SFTP instead `,mdx(\"inlineCode\",{parentName:\"p\"},`ssh_file_transfer_method = \"sftp\"`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_proxy_host`),` (string) - A SOCKS proxy host to use for SSH connection`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_proxy_port`),` (int) - A port of the SOCKS proxy. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`1080`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_proxy_username`),` (string) - The optional username to authenticate with the proxy server.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_proxy_password`),` (string) - The optional password to use to authenticate with the proxy server.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_keep_alive_interval`),` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\nvalue (`,mdx(\"inlineCode\",{parentName:\"p\"},`-1s`),`) to disable. Example value: `,mdx(\"inlineCode\",{parentName:\"p\"},`10s`),`. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`5s`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_read_write_timeout`),` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\nuseful if, for example, packer hangs on a connection after a reboot.\nExample: `,mdx(\"inlineCode\",{parentName:\"p\"},`5m`),`. Disabled by default.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_remote_tunnels`),` ([]string) - `)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_local_tunnels`),` ([]string) - `))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`ssh_private_key_file`),` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\nThe `,mdx(\"inlineCode\",{parentName:\"li\"},`~`),` can be used in path and will be expanded to the home directory\nof current user.`)),mdx(\"h5\",{\"id\":\"user-content-windows-remote-management-(winrm)\",\"data-text-content\":\"Windows Remote Management WinRM\",\"className\":\"g-type-display-6\"},`Windows Remote Management (WinRM)`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_username`),` (string) - The username to use to connect to WinRM.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_password`),` (string) - The password to use to connect to WinRM.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_host`),` (string) - The address for WinRM to connect to.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`NOTE: If using an Amazon EBS builder, you can specify the interface\nWinRM connects to via\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/packer/integrations/hashicorp/amazon/latest/components/builder/ebs#ssh_interface\"},mdx(\"inlineCode\",{parentName:\"a\"},`ssh_interface`)))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_no_proxy`),` (bool) - Setting this to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),` adds the remote\n`,mdx(\"inlineCode\",{parentName:\"p\"},`host:port`),` to the `,mdx(\"inlineCode\",{parentName:\"p\"},`NO_PROXY`),` environment variable. This has the effect of\nbypassing any configured proxies when connecting to the remote host.\nDefault to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_port`),` (int) - The WinRM port to connect to. This defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`5985`),` for plain\nunencrypted connection and `,mdx(\"inlineCode\",{parentName:\"p\"},`5986`),` for SSL when `,mdx(\"inlineCode\",{parentName:\"p\"},`winrm_use_ssl`),` is set to\ntrue.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_timeout`),` (duration string | ex: \"1h5m2s\") - The amount of time to wait for WinRM to become available. This defaults\nto `,mdx(\"inlineCode\",{parentName:\"p\"},`30m`),` since setting up a Windows machine generally takes a long time.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_use_ssl`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, use HTTPS for WinRM.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_insecure`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, do not check server certificate chain and host name.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_use_ntlm`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, NTLMv2 authentication (with session security) will be used\nfor WinRM, rather than default (basic authentication), removing the\nrequirement for basic authentication to be enabled within the target\nguest. Further reading for remote connection authentication can be found\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://msdn.microsoft.com/en-us/library/aa384295(v=vs.85).aspx\"},`here`),`.`))),mdx(\"h2\",{\"id\":\"user-content-working-with-clusters-and-hosts\",\"data-text-content\":\"Working with Clusters and Hosts\",\"className\":\"g-type-display-3\"},`Working with Clusters and Hosts`),mdx(\"h3\",{\"id\":\"user-content-standalone-esxi-hosts\",\"data-text-content\":\"Standalone ESXi Hosts\",\"className\":\"g-type-display-4\"},`Standalone ESXi Hosts`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Only use the `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),` option. Optionally, specify a `,mdx(\"inlineCode\",{parentName:\"p\"},`resource_pool`),`:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  host `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`esxi`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`-`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},`01`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`.example.com`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  resource_pool `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"example_resource_pool\"`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"host\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"esxi-01.example.com\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"resource_pool\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"example_resource_pool\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`)),mdx(\"h3\",{\"id\":\"user-content-clusters-with-distributed-resource-scheduler-enabled\",\"data-text-content\":\"Clusters with Distributed Resource Scheduler Enabled\",\"className\":\"g-type-display-4\"},`Clusters with Distributed Resource Scheduler Enabled`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Only use the `,mdx(\"inlineCode\",{parentName:\"p\"},`cluster`),` option. Optionally, specify a `,mdx(\"inlineCode\",{parentName:\"p\"},`resource_pool`),`:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  cluster `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"cluster-01\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  resource_pool `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"example_resource_pool\"`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"cluster\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"cluster-01\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"resource_pool\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"example_resource_pool\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`)),mdx(\"h3\",{\"id\":\"user-content-clusters-without-distributed-resource-scheduler-enabled\",\"data-text-content\":\"Clusters without Distributed Resource Scheduler Enabled\",\"className\":\"g-type-display-4\"},`Clusters without Distributed Resource Scheduler Enabled`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use the `,mdx(\"inlineCode\",{parentName:\"p\"},`cluster`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`host`),`parameters:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`HCL Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  cluster `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"cluster-01\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  host `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"esxi-01.example.com\"`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`JSON Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"cluster\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"cluster-01\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"host\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"esxi-01.example.com\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`,`)),`\n`)),mdx(\"h2\",{\"id\":\"user-content-privileges\",\"data-text-content\":\"Privileges\",\"className\":\"g-type-display-3\"},`Privileges`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`It is recommended to create a custom vSphere role with the required privileges to integrate Packer\nwith vSphere. Accounts or groups can be added to the role to ensure that Packer has least privilege\naccess to the infrastructure.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`For example, a named service account (`,mdx(\"em\",{parentName:\"p\"},`e.g.`),` `,mdx(\"inlineCode\",{parentName:\"p\"},`svc-packer-vsphere@example.com`),`).`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Clone the default `,mdx(\"strong\",{parentName:\"p\"},`Read-Only`),` vSphere role and add the following privileges, which are based on\nthe capabilities of the `,mdx(\"inlineCode\",{parentName:\"p\"},`vsphere-iso`),` plugin:`),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",{parentName:\"tr\"},`Category`),mdx(\"th\",{parentName:\"tr\"},`Privilege`),mdx(\"th\",{parentName:\"tr\"},`Reference`))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`Content Library`),mdx(\"td\",{parentName:\"tr\"},`Add library item`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`ContentLibrary.AddLibraryItem`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Update Library Item`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`ContentLibrary.UpdateLibraryItem`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`Datastore`),mdx(\"td\",{parentName:\"tr\"},`Allocate space`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`Datastore.AllocateSpace`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Browse datastore`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`Datastore.Browse`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Low level file operations`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`Datastore.FileManagement`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`Network`),mdx(\"td\",{parentName:\"tr\"},`Assign network`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`Network.Assign`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`Resource`),mdx(\"td\",{parentName:\"tr\"},`Assign virtual machine to resource pool`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`Resource.AssignVMToPool`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`vApp`),mdx(\"td\",{parentName:\"tr\"},`Export`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`vApp.Export`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`Virtual Machine`),mdx(\"td\",{parentName:\"tr\"},`Configuration > Add new disk`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Config.AddNewDisk`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Configuration > Add or remove device`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Config.AddRemoveDevice`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Configuration > Advanced configuration`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Config.AdvancedConfig`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Configuration > Change CPU count`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Config.CPUCount`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Configuration > Change memory`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Config.Memory`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Configuration > Change settings`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Config.Settings`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Configuration > Change Resource`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Config.Resource`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Configuration > Set annotation`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Config.Annotation`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Edit Inventory > Create from existing`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Inventory.CreateFromExisting`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Edit Inventory > Create new`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Inventory.Create`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Edit Inventory > Remove`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Inventory.Delete`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Interaction > Configure CD media`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Interact.SetCDMedia`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Interaction > Configure floppy media`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Interact.SetFloppyMedia`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Interaction > Connect devices`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Interact.DeviceConnection`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Interaction > Inject USB HID scan codes`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Interact.PutUsbScanCodes`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Interaction > Power off`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Interact.PowerOff`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Interaction > Power on`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Interact.PowerOn`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Provisioning > Create template from virtual machine`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Provisioning.CreateTemplateFromVM`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Provisioning > Mark as template`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Provisioning.MarkAsTemplate`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`Provisioning > Mark as virtual machine`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.Provisioning.MarkAsVM`))),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},`...`),mdx(\"td\",{parentName:\"tr\"},`State > Create snapshot`),mdx(\"td\",{parentName:\"tr\"},mdx(\"inlineCode\",{parentName:\"td\"},`VirtualMachine.State.CreateSnapshot`))))),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Global permissions `,mdx(\"strong\",{parentName:\"p\"},mdx(\"a\",{parentName:\"strong\",\"href\":\"https://docs.vmware.com/en/VMware-vSphere/8.0/vsphere-security/GUID-74F53189-EF41-4AC1-A78E-D25621855800.html#how-do-permissions-work-in-vsphere-0\"},`are required`)),` for the content library based on the hierarchical inheritance of permissions. Once the custom vSphere role is created, assign `,mdx(\"strong\",{parentName:\"p\"},`Global Permissions`),` in vSphere to the accounts or groups used for the Packer to vSphere integration, if using the content library.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`For example:`),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},`Log in to the vCenter Server at `,mdx(\"em\",{parentName:\"li\"},`https://<management_vcenter_server_fqdn>/ui`),` as `,mdx(\"inlineCode\",{parentName:\"li\"},`administrator@vsphere.local`),`.`),mdx(\"li\",{parentName:\"ol\"},`Select `,mdx(\"strong\",{parentName:\"li\"},`Menu`),` > `,mdx(\"strong\",{parentName:\"li\"},`Administration`),`.`),mdx(\"li\",{parentName:\"ol\"},`In the left pane, select `,mdx(\"strong\",{parentName:\"li\"},`Access control`),` > `,mdx(\"strong\",{parentName:\"li\"},`Global permissions`),` and click the `,mdx(\"strong\",{parentName:\"li\"},`Add permissions`),` icon.`),mdx(\"li\",{parentName:\"ol\"},`In the `,mdx(\"strong\",{parentName:\"li\"},`Add permissions`),` dialog box, enter the service account (`,mdx(\"em\",{parentName:\"li\"},`e.g.`),mdx(\"inlineCode\",{parentName:\"li\"},`svc-packer-vsphere@example.com`),`), select the custom role (`,mdx(\"em\",{parentName:\"li\"},`e.g.`),` Packer to vSphere Integration\nRole) and the `,mdx(\"strong\",{parentName:\"li\"},`Propagate to children`),` check box, and click `,mdx(\"strong\",{parentName:\"li\"},`OK`),`.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In an environment with many vCenter Server instances, such as management and workload, in enhanced\nlinked-mode, you may wish to further reduce the scope of access across the vSphere infrastructure if\nyou do not want Packer to have access to the management vCenter Server instance, but only allow\naccess to workload vCenter Server instances.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`For example:`),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},`From the `,mdx(\"strong\",{parentName:\"li\"},`Hosts and clusters`),` inventory, select management vCenter Server to restrict scope,\nand click the `,mdx(\"strong\",{parentName:\"li\"},`Permissions`),` tab.`),mdx(\"li\",{parentName:\"ol\"},`Select the service account with the custom role assigned and click the `,mdx(\"strong\",{parentName:\"li\"},`Change role`),` icon.`),mdx(\"li\",{parentName:\"ol\"},`In the `,mdx(\"strong\",{parentName:\"li\"},`Change role`),` dialog box, from the `,mdx(\"strong\",{parentName:\"li\"},`Role`),` drop-down menu, select `,mdx(\"strong\",{parentName:\"li\"},`No Access`),`, select\nthe `,mdx(\"strong\",{parentName:\"li\"},`Propagate to children`),` check box, and click `,mdx(\"strong\",{parentName:\"li\"},`OK`),`.`)))};MDXContent.isMDXComponent=true;","scope":{}},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"VMware vSphere","url":"/packer/integrations/hashicorp/vsphere","isCurrentPage":false},{"title":"v1.4.2","url":"/packer/integrations/hashicorp/vsphere/v1.4.2","isCurrentPage":false},{"title":"Components"},{"title":"Builder"},{"title":"vSphere ISO","url":"/packer/integrations/hashicorp/vsphere/latest/components/builder/vsphere-iso","isCurrentPage":true}]},"__N_SSG":true}