{"pageProps":{"metadata":{"title":"Nomad Autoscaler | Integrations","description":"The Nomad Autoscaler is an autoscaling daemon for Nomad, architectured around plugins to allow for easy extensibility in terms of supported metrics sources, scaling targets and scaling algorithms."},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"2f9af420-af9e-4a0c-8ee6-17c40feb5c88","slug":"nomad-autoscaler","name":"Nomad Autoscaler","description":"The Nomad Autoscaler is an autoscaling daemon for Nomad, architectured around plugins to allow for easy extensibility in terms of supported metrics sources, scaling targets and scaling algorithms.","license_type":null,"license_url":null,"external_only":false,"external_url":"https://www.nomadproject.io/docs/autoscaling","tier":"official","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/nomad_autoscaler","created_at":"2023-05-17T17:27:17.232Z","updated_at":"2023-07-12T18:05:07.757Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"49c5981c-c0ae-42d1-ae61-d97847b49525","integration_id":"2f9af420-af9e-4a0c-8ee6-17c40feb5c88","version":"0.0.1","readme":"This pack deploys the Nomad Autoscaler application to Nomad as a single service job. It can be\ndeployed via the [Docker][docker_driver] or [exec][exec_driver] drivers.\n\n## Variables\n\n- `job_name` (string \"\") - The name to use as the job name which overrides using the pack name.\n- `datacenters` (list(string) [\"dc1\"]) - A list of datacenters in the region which are eligible for \ntask placement.\n- `region` (string \"global\") - The region where the job should be placed.\n- `namespace` (string \"default\") - The namespace where the job should be placed.\n- `autoscaler_agent_network` (object) - The Nomad Autoscaler network configuration options.\n  * `autoscaler_http_port_label` (string \"http\") - The label name to use for the Nomad Autoscaler\nHTTP API.\n- `autoscaler_agent_task` (object) - Details configuration options for the Nomad Autoscaler agent task.\n  * `driver` (string \"docker\") - The Nomad driver to use when running the task. Supports `docker` and `exec`.\n  * `version` (string \"0.3.3\") - The Nomad Autoscaler version to deploy.\n  * `additional_cli_args` (list(string) []) - A list of CLI arguments that will be passed to the\nNomad Autoscaler. These will be appended to an initial list containing [\"agent\"].\n  * `config_files` (list(string) []) - A list of config files to pass to the Nomad Autoscaler. If\nincluded, the argument will automatically to appended to `base_args` and passed to the autoscaler.\n  * `scaling_policy_files` (list(string) []) - A list of paths to scaling policies which will be passed\nto the Nomad Autoscaler. If included, the argument will automatically to appended to `base_args` and\npassed to the autoscaler.\n- `autoscaler_agent_task_resources` (object) - The resource to assign to the Nomad Autoscaler task.\n  * `cpu` (number 500) - Specifies the CPU required to run this task in MHz.\n  * `memory` (number 256) - Specifies the memory required in MB.\n- `autoscaler_agent_task_service` (object) - Configuration options of the Nomad Autoscaler service and check.\n  * `enabled` (bool true) - Whether the service and check should be configured.\n  * `service_name` (string \"nomad-autoscaler\") - Specifies the name this service will be advertised\nas in Consul.\n  * `service_tags` (list(string) []) - Specifies the list of tags to associate with the Nomad\nAutoscaler service.\n  * `check_interval` (string \"3s\") - Specifies the frequency of the health checks that Consul will perform.\n  * `check_timeout` (string \"1s\") - Specifies how long Consul will wait for a health check query to succeed.\n\n[docker_driver]: (https://www.nomadproject.io/docs/drivers/docker)\n[exec_driver]: (https://www.nomadproject.io/docs/drivers/exec)\n","created_at":"2023-05-17T22:18:52.816Z","updated_at":"2023-05-17T22:18:52.816Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"Nomad Autoscaler","url":"/nomad/integrations/hashicorp/nomad-autoscaler","isCurrentPage":true}],"anchorLinks":[{"id":"variables","level":2,"title":"Variables"}],"serializedREADME":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",{\"className\":\"g-type-long-body\"},`This pack deploys the Nomad Autoscaler application to Nomad as a single service job. It can be\ndeployed via the `,mdx(\"a\",{parentName:\"p\"},`Docker`),` or `,mdx(\"a\",{parentName:\"p\"},`exec`),` drivers.`),mdx(\"h2\",{\"id\":\"user-content-variables\",\"data-text-content\":\"Variables\",\"className\":\"g-type-display-3\"},`Variables`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`job_name`),` (string \"\") - The name to use as the job name which overrides using the pack name.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`datacenters`),` (list(string) `,`[\"dc1\"]`,`) - A list of datacenters in the region which are eligible for\ntask placement.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`region`),` (string \"global\") - The region where the job should be placed.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`namespace`),` (string \"default\") - The namespace where the job should be placed.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`autoscaler_agent_network`),` (object) - The Nomad Autoscaler network configuration options.`,mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`autoscaler_http_port_label`),` (string \"http\") - The label name to use for the Nomad Autoscaler\nHTTP API.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`autoscaler_agent_task`),` (object) - Details configuration options for the Nomad Autoscaler agent task.`,mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`driver`),` (string \"docker\") - The Nomad driver to use when running the task. Supports `,mdx(\"inlineCode\",{parentName:\"li\"},`docker`),` and `,mdx(\"inlineCode\",{parentName:\"li\"},`exec`),`.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`version`),` (string \"0.3.3\") - The Nomad Autoscaler version to deploy.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`additional_cli_args`),` (list(string) []) - A list of CLI arguments that will be passed to the\nNomad Autoscaler. These will be appended to an initial list containing `,`[\"agent\"]`,`.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`config_files`),` (list(string) []) - A list of config files to pass to the Nomad Autoscaler. If\nincluded, the argument will automatically to appended to `,mdx(\"inlineCode\",{parentName:\"li\"},`base_args`),` and passed to the autoscaler.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`scaling_policy_files`),` (list(string) []) - A list of paths to scaling policies which will be passed\nto the Nomad Autoscaler. If included, the argument will automatically to appended to `,mdx(\"inlineCode\",{parentName:\"li\"},`base_args`),` and\npassed to the autoscaler.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`autoscaler_agent_task_resources`),` (object) - The resource to assign to the Nomad Autoscaler task.`,mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cpu`),` (number 500) - Specifies the CPU required to run this task in MHz.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`memory`),` (number 256) - Specifies the memory required in MB.`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`autoscaler_agent_task_service`),` (object) - Configuration options of the Nomad Autoscaler service and check.`,mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`enabled`),` (bool true) - Whether the service and check should be configured.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`service_name`),` (string \"nomad-autoscaler\") - Specifies the name this service will be advertised\nas in Consul.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`service_tags`),` (list(string) []) - Specifies the list of tags to associate with the Nomad\nAutoscaler service.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`check_interval`),` (string \"3s\") - Specifies the frequency of the health checks that Consul will perform.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`check_timeout`),` (string \"1s\") - Specifies how long Consul will wait for a health check query to succeed.`)))))};MDXContent.isMDXComponent=true;","scope":{}}},"__N_SSG":true}