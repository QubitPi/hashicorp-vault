{"pageProps":{"metadata":{"title":"Oxide Data Source | Integrations"},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"76c42f47-e1ce-484f-a04a-0cbe22097379","slug":"oxide","name":"Oxide","description":"The Oxide Packer plugin is a multi-component plugin for building Oxide images.","license_type":"MPL-2.0","license_url":"https://github.com/oxidecomputer/packer-plugin-oxide/blob/main/LICENSE","external_only":false,"external_url":"https://github.com/oxidecomputer/packer-plugin-oxide","tier":"community","repo_url":"https://github.com/oxidecomputer/packer-plugin-oxide","subdirectory":"/.web-docs","created_at":"2025-07-08T00:49:26.341Z","updated_at":"2025-07-08T03:22:15.897Z","hide_versions":false,"organization":{"id":"bfe3c40d-1d39-41e1-8676-494eb2a5ef05","slug":"oxidecomputer","created_at":"2025-07-08T00:49:25.431Z","updated_at":"2025-07-08T00:49:25.431Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["0.3.0","0.2.0","0.1.0"],"components":[{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"},{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources"}],"flags":[],"integration_type":null},"activeRelease":{"id":"c5e5743b-0185-494a-9757-c9cae7f2c4c3","integration_id":"76c42f47-e1ce-484f-a04a-0cbe22097379","version":"0.3.0","readme":"The [Oxide](https://oxide.computer) multi-component plugin can be used\nwith HashiCorp (IBM) Packer to create custom Oxide images.\n\n## Installation\n\nTo install this plugin, add the following to your Packer configuration and run\n`packer init`.\n\n```hcl\npacker {\n  required_plugins {\n    oxide = {\n      source  = \"github.com/oxidecomputer/oxide\"\n      version = \">= 0.3.0\"\n    }\n  }\n}\n```\n\nAlternatively, use `packer plugins install` to install this plugin.\n\n```sh\npacker plugins install github.com/oxidecomputer/oxide\n```\n\n## Components\n\n### Builders\n\n[`oxide-instance`](/packer/integrations/oxidecomputer/oxide/latest/components/builder/instance)\n<!-- Code generated from the comments of the Builder struct in component/builder/instance/builder.go; DO NOT EDIT MANUALLY -->\n\nThe `oxide-instance` builder creates custom images for use with\n[Oxide](https://oxide.computer). The builder launches a temporary instance\nfrom an existing source image, connects to the instance using its external\nIP, provisions the instance, and then creates a new image from the instance's\nboot disk. The resulting image can be used to launch new instances on Oxide.\n\nThe builder does not manage images. Once it creates an image, it is up to you\nto use it or delete it.\n\n<!-- End of code generated from the comments of the Builder struct in component/builder/instance/builder.go; -->\n\n\n### Data Sources\n\n[`oxide-image`](/packer/integrations/oxidecomputer/oxide/latest/components/data-source/image)\n<!-- Code generated from the comments of the Datasource struct in component/data-source/image/data_source.go; DO NOT EDIT MANUALLY -->\n\nThe `oxide-image` data source fetches [Oxide](https://oxide.computer) image\ninformation for use in a Packer build. The image can be a project image or\nsilo image.\n\n<!-- End of code generated from the comments of the Datasource struct in component/data-source/image/data_source.go; -->\n\n\n<!-- ### Provisioners -->\n\n<!-- ### Post-Processors -->\n","created_at":"2025-07-08T03:22:16.917Z","updated_at":"2025-07-08T18:32:07.981Z","components":[{"id":"1c812030-465d-47fb-8265-9d8d77923f72","integration_release_id":"c5e5743b-0185-494a-9757-c9cae7f2c4c3","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `oxide-instance`\n\n<!-- Code generated from the comments of the Builder struct in component/builder/instance/builder.go; DO NOT EDIT MANUALLY -->\n\nThe `oxide-instance` builder creates custom images for use with\n[Oxide](https://oxide.computer). The builder launches a temporary instance\nfrom an existing source image, connects to the instance using its external\nIP, provisions the instance, and then creates a new image from the instance's\nboot disk. The resulting image can be used to launch new instances on Oxide.\n\nThe builder does not manage images. Once it creates an image, it is up to you\nto use it or delete it.\n\n<!-- End of code generated from the comments of the Builder struct in component/builder/instance/builder.go; -->\n\n\n## Configuration\n\n<!-- Code generated from the comments of the Config struct in component/builder/instance/config.go; DO NOT EDIT MANUALLY -->\n\nThe configuration arguments for the builder. Arguments can either be required\nor optional.\n\n<!-- End of code generated from the comments of the Config struct in component/builder/instance/config.go; -->\n\n\n### Required\n\n<!-- Code generated from the comments of the Config struct in component/builder/instance/config.go; DO NOT EDIT MANUALLY -->\n\n- `host` (string) - Oxide API URL (e.g., `https://oxide.sys.example.com`). If not specified, this\n  defaults to the value of the `OXIDE_HOST` environment variable.\n\n- `token` (string) - Oxide API token. If not specified, this defaults to the value of the\n  `OXIDE_TOKEN` environment variable.\n\n- `boot_disk_image_id` (string) - Image ID to use for the instance's boot disk. This can be obtained from the\n  `oxide-image` data source.\n\n- `project` (string) - Name or ID of the project where the temporary instance and resulting image\n  will be created.\n\n<!-- End of code generated from the comments of the Config struct in component/builder/instance/config.go; -->\n\n\n### Optional\n\n<!-- Code generated from the comments of the Config struct in component/builder/instance/config.go; DO NOT EDIT MANUALLY -->\n\n- `boot_disk_size` (uint64) - Size of the boot disk in bytes. Defaults to `21474836480`, or 20 GiB.\n\n- `ip_pool` (string) - IP pool to allocate the instance's external IP from. If not specified, the\n  silo's default IP pool will be used.\n\n- `vpc` (string) - VPC to create the instance within. Defaults to `default`.\n\n- `subnet` (string) - Subnet to create the instance within. Defaults to `default`.\n\n- `name` (string) - Name of the temporary instance. Defaults to `packer-{{timestamp}}`.\n\n- `hostname` (string) - Hostname of the temporary instance. Defaults to `packer-{{timestamp}}`.\n\n- `cpus` (uint64) - Number of vCPUs to provision the instance with. Defaults to `1`.\n\n- `memory` (uint64) - Amount of memory to provision the instance with, in bytes. Defaults to\n  `2147483648`, or 2 GiB.\n\n- `ssh_public_keys` ([]string) - An array of names or IDs of SSH public keys to inject into the instance.\n\n- `artifact_name` (string) - Name of the resulting image artifact. Defaults to\n  `SOURCE_IMAGE_NAME-{{timestamp}}` where `SOURCE_IMAGE_NAME` is the name of\n  the source image as retrieved from Oxide.\n\n- `artifact_os` (string) - Operating system of the resulting image artifact. Defaults to the OS of the\n  source image as retrieved from Oxide.\n\n- `artifact_version` (string) - Version of the resulting image artifact. Defaults to\n  `SOURCE_IMAGE_VERSION-{{timestamp}}` where `SOURCE_IMAGE_VERSION` is the\n  version of the source image as retrieved from Oxide.\n\n<!-- End of code generated from the comments of the Config struct in component/builder/instance/config.go; -->\n\n\n## Communicator\n\nA [`communicator`](/docs/communicators) can be configured for the builder.\n\n### SSH\n\nThe builder automatically generates a temporary SSH key pair that's used to\nconnect to the temporary instance unless one of the following SSH communicator\narguments are set.\n\n- [`ssh_password`](/docs/communicators/ssh#ssh_password)\n- [`ssh_private_key_file`](/docs/communicators/ssh#ssh_private_key_file)\n- [`ssh_agent_auth`](/docs/communicators/ssh#ssh_agent_auth)\n\nThe temporary SSH public key is uploaded to Oxide, injected into the ephemeral\ninstance, and deleted during cleanup. The temporary SSH private key is used by\nPacker to connect to the instance.\n\nThe name of the temporary SSH public key uploaded to Oxide can be set using the\n[`temporary_key_pair_name`](/docs/communicators/ssh#temporary_key_pair_name)\nargument. Generally there's no reason to set this but it's available should it\nbe necessary.\n\n## Provisioner\n\nA [`provisioner`](/docs/provisioners) can be configured for the builder.\n\n### File System Consistency\n\nIn [oxidecomputer/packer-plugin-oxide#33](https://github.com/oxidecomputer/packer-plugin-oxide/issues/33) \nit was reported that images built by the builder were missing files uploaded\nduring provisioning. To prevent missing files add a provisioner that forces the\ninstance to flush any buffered data to its storage devices. This provisioner\nmust be defined after all other provisioners that modify the file system.\n\nA provisioner that reboots the instance will work. Packer will attempt to\nconnect to the instance once it's back up.\n\n```hcl\n# Linux. \nprovisioner \"shell\" {\n  # Required so Packer doesn't error when the SSH connection terminates.\n  expect_disconnect = true\n  inline = [\n    \"sudo reboot\",\n  ]\n}\n\n# Windows.\nprovisioner \"windows-restart\" {}\n```\n\nA provisioner that explicitly forces a file synchronize will work.\n\n```hcl\n# Linux. \nprovisioner \"shell\" {\n  inline = [\n    \"sudo sync\",\n  ]\n}\n\n# Windows.\nprovisioner \"powershell\" {\n  inline = [\n    \"Get-Volume | Write-VolumeCache\"\n  ]\n}\n```\n\n## Examples\n\nThis example uses environment variables for Oxide credentials and uses\nthe automatically generated SSH key pair to connect to the instance for\nprovisioning. The provisioners shown demonstrate common patterns when working\nwith the builder.\n\n```hcl\nsource \"oxide-instance\" \"example\" {\n  project            = \"packer-acc-test\"\n  boot_disk_image_id = \"feb2c8ee-5a1d-4d66-beeb-289b860561bf\"\n\n  # SSH communicator configuration.\n  ssh_username = \"ubuntu\"\n}\n\nbuild {\n  sources = [\n    \"source.oxide-instance.example\",\n  ]\n\n  provisioner \"shell\" {\n    inline = [\n      \"sudo apt-get update\",\n      \"sudo apt-get install -y ca-certificates\",\n    ]\n  }\n\n  # Packer recommends using a 2-step workflow for uploading files.\n\n  # 1) Upload the file to a location the provisioning user has access to.\n  provisioner \"file\" {\n    content     = \"Hello from Packer!\"\n    destination = \"/tmp/hello.txt\"\n  }\n\n  # 2) Use the shell provisioner to move the files and set permissions.\n  provisioner \"shell\" {\n    inline = [\n      \"sudo cp /tmp/hello.txt /opt/hello.txt\",\n      \"sudo chmod 0644 /opt/hello.txt\",\n    ]\n  }\n\n  # Reboot the instance to flush any buffered data to its storage devices.\n  #\n  # https://github.com/oxidecomputer/packer-plugin-oxide/issues/33\n  provisioner \"shell\" {\n    # Required so Packer doesn't error when the SSH connection terminates.\n    expect_disconnect = true\n    inline = [\n      \"sudo reboot\",\n    ]\n  }\n}\n```\n","created_at":"2025-07-08T17:06:22.858Z","updated_at":"2025-07-08T17:06:22.858Z","name":"Oxide Instance","slug":"instance","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},{"id":"7d90264d-3871-4509-ae2b-38735d4d66d4","integration_release_id":"c5e5743b-0185-494a-9757-c9cae7f2c4c3","component_id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","readme":"Type: `oxide-image`\n\n<!-- Code generated from the comments of the Datasource struct in component/data-source/image/data_source.go; DO NOT EDIT MANUALLY -->\n\nThe `oxide-image` data source fetches [Oxide](https://oxide.computer) image\ninformation for use in a Packer build. The image can be a project image or\nsilo image.\n\n<!-- End of code generated from the comments of the Datasource struct in component/data-source/image/data_source.go; -->\n\n\n## Configuration\n\n<!-- Code generated from the comments of the Config struct in component/data-source/image/config.go; DO NOT EDIT MANUALLY -->\n\nThe configuration arguments for the data source. Arguments can either be\nrequired or optional.\n\n<!-- End of code generated from the comments of the Config struct in component/data-source/image/config.go; -->\n\n\n### Required\n\n<!-- Code generated from the comments of the Config struct in component/data-source/image/config.go; DO NOT EDIT MANUALLY -->\n\n- `host` (string) - Oxide API URL (e.g., `https://oxide.sys.example.com`). If not specified, this\n  defaults to the value of the `OXIDE_HOST` environment variable.\n\n- `token` (string) - Oxide API token. If not specified, this defaults to the value of the\n  `OXIDE_TOKEN` environment variable.\n\n- `name` (string) - Name of the image to fetch.\n\n<!-- End of code generated from the comments of the Config struct in component/data-source/image/config.go; -->\n\n\n### Optional\n\n<!-- Code generated from the comments of the Config struct in component/data-source/image/config.go; DO NOT EDIT MANUALLY -->\n\n- `project` (string) - Name or ID of the project containing the image to fetch. Leave blank to fetch\n  a silo image instead of a project image.\n\n<!-- End of code generated from the comments of the Config struct in component/data-source/image/config.go; -->\n\n\n## Outputs\n\n<!-- Code generated from the comments of the DatasourceOutput struct in component/data-source/image/output.go; DO NOT EDIT MANUALLY -->\n\n- `image_id` (string) - ID of the image that was fetched.\n\n<!-- End of code generated from the comments of the DatasourceOutput struct in component/data-source/image/output.go; -->\n\n\n## Examples\n\nFetch a project image.\n\n```hcl\ndata \"oxide-image\" \"example\" {\n  name    = \"ubuntu\"\n  project = \"oxide\"\n}\n```\n\nFetch a silo image.\n\n```hcl\ndata \"oxide-image\" \"example\" {\n  name = \"ubuntu\"\n}\n```\n","created_at":"2025-07-08T17:06:23.231Z","updated_at":"2025-07-08T17:06:23.231Z","name":"Oxide Image","slug":"image","component":{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.255Z","updated_at":"2022-11-09T22:56:31.255Z"},"variable_groups":[]}]},"component":{"id":"7d90264d-3871-4509-ae2b-38735d4d66d4","integration_release_id":"c5e5743b-0185-494a-9757-c9cae7f2c4c3","component_id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","readme":"Type: `oxide-image`\n\n<!-- Code generated from the comments of the Datasource struct in component/data-source/image/data_source.go; DO NOT EDIT MANUALLY -->\n\nThe `oxide-image` data source fetches [Oxide](https://oxide.computer) image\ninformation for use in a Packer build. The image can be a project image or\nsilo image.\n\n<!-- End of code generated from the comments of the Datasource struct in component/data-source/image/data_source.go; -->\n\n\n## Configuration\n\n<!-- Code generated from the comments of the Config struct in component/data-source/image/config.go; DO NOT EDIT MANUALLY -->\n\nThe configuration arguments for the data source. Arguments can either be\nrequired or optional.\n\n<!-- End of code generated from the comments of the Config struct in component/data-source/image/config.go; -->\n\n\n### Required\n\n<!-- Code generated from the comments of the Config struct in component/data-source/image/config.go; DO NOT EDIT MANUALLY -->\n\n- `host` (string) - Oxide API URL (e.g., `https://oxide.sys.example.com`). If not specified, this\n  defaults to the value of the `OXIDE_HOST` environment variable.\n\n- `token` (string) - Oxide API token. If not specified, this defaults to the value of the\n  `OXIDE_TOKEN` environment variable.\n\n- `name` (string) - Name of the image to fetch.\n\n<!-- End of code generated from the comments of the Config struct in component/data-source/image/config.go; -->\n\n\n### Optional\n\n<!-- Code generated from the comments of the Config struct in component/data-source/image/config.go; DO NOT EDIT MANUALLY -->\n\n- `project` (string) - Name or ID of the project containing the image to fetch. Leave blank to fetch\n  a silo image instead of a project image.\n\n<!-- End of code generated from the comments of the Config struct in component/data-source/image/config.go; -->\n\n\n## Outputs\n\n<!-- Code generated from the comments of the DatasourceOutput struct in component/data-source/image/output.go; DO NOT EDIT MANUALLY -->\n\n- `image_id` (string) - ID of the image that was fetched.\n\n<!-- End of code generated from the comments of the DatasourceOutput struct in component/data-source/image/output.go; -->\n\n\n## Examples\n\nFetch a project image.\n\n```hcl\ndata \"oxide-image\" \"example\" {\n  name    = \"ubuntu\"\n  project = \"oxide\"\n}\n```\n\nFetch a silo image.\n\n```hcl\ndata \"oxide-image\" \"example\" {\n  name = \"ubuntu\"\n}\n```\n","created_at":"2025-07-08T17:06:23.231Z","updated_at":"2025-07-08T17:06:23.231Z","name":"Oxide Image","slug":"image","component":{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.255Z","updated_at":"2022-11-09T22:56:31.255Z"},"variable_groups":[]},"processedVariablesMarkdown":{},"anchorLinks":[{"id":"configuration","level":2,"title":"Configuration"},{"id":"required","level":3,"title":"Required"},{"id":"optional","level":3,"title":"Optional"},{"id":"outputs","level":2,"title":"Outputs"},{"id":"examples","level":2,"title":"Examples"}],"serializedREADME":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",{\"className\":\"g-type-long-body\"},`Type: `,mdx(\"inlineCode\",{parentName:\"p\"},`oxide-image`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The `,mdx(\"inlineCode\",{parentName:\"p\"},`oxide-image`),` data source fetches `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://oxide.computer\"},`Oxide`),` image\ninformation for use in a Packer build. The image can be a project image or\nsilo image.`),mdx(\"h2\",{\"id\":\"user-content-configuration\",\"data-text-content\":\"Configuration\",\"className\":\"g-type-display-3\"},`Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The configuration arguments for the data source. Arguments can either be\nrequired or optional.`),mdx(\"h3\",{\"id\":\"user-content-required\",\"data-text-content\":\"Required\",\"className\":\"g-type-display-4\"},`Required`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`host`),` (string) - Oxide API URL (e.g., `,mdx(\"inlineCode\",{parentName:\"p\"},`https://oxide.sys.example.com`),`). If not specified, this\ndefaults to the value of the `,mdx(\"inlineCode\",{parentName:\"p\"},`OXIDE_HOST`),` environment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`token`),` (string) - Oxide API token. If not specified, this defaults to the value of the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`OXIDE_TOKEN`),` environment variable.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`name`),` (string) - Name of the image to fetch.`))),mdx(\"h3\",{\"id\":\"user-content-optional\",\"data-text-content\":\"Optional\",\"className\":\"g-type-display-4\"},`Optional`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`project`),` (string) - Name or ID of the project containing the image to fetch. Leave blank to fetch\na silo image instead of a project image.`)),mdx(\"h2\",{\"id\":\"user-content-outputs\",\"data-text-content\":\"Outputs\",\"className\":\"g-type-display-3\"},`Outputs`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_id`),` (string) - ID of the image that was fetched.`)),mdx(\"h2\",{\"id\":\"user-content-examples\",\"data-text-content\":\"Examples\",\"className\":\"g-type-display-3\"},`Examples`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Fetch a project image.`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`data`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` \"oxide-image\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` \"example\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  name    `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"ubuntu\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  project `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"oxide\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Fetch a silo image.`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`data`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` \"oxide-image\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` \"example\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"ubuntu\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`)))};MDXContent.isMDXComponent=true;","scope":{}},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Oxide","url":"/packer/integrations/oxidecomputer/oxide","isCurrentPage":false},{"title":"v0.3.0","url":"/packer/integrations/oxidecomputer/oxide/v0.3.0","isCurrentPage":false},{"title":"Components"},{"title":"Data Source"},{"title":"Oxide Image","url":"/packer/integrations/oxidecomputer/oxide/latest/components/data-source/image","isCurrentPage":true}]},"__N_SSG":true}