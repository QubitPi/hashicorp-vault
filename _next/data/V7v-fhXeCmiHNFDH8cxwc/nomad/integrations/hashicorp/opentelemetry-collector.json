{"pageProps":{"metadata":{"title":"OpenTelemetry Collector | Integrations","description":"The OpenTelemetry Collector offers a vendor-agnostic implementation on how to receive, process and export telemetry data."},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"394a6ac7-7320-4673-8270-183da5d17554","slug":"opentelemetry-collector","name":"OpenTelemetry Collector","description":"The OpenTelemetry Collector offers a vendor-agnostic implementation on how to receive, process and export telemetry data.","license_type":null,"license_url":null,"external_only":false,"external_url":"https://github.com/open-telemetry/opentelemetry-collector","tier":"community","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/opentelemetry_collector","created_at":"2023-05-17T17:27:31.129Z","updated_at":"2023-07-12T18:05:08.800Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"d48fa94c-2b99-4987-a41f-3550d7ddc6a7","integration_id":"394a6ac7-7320-4673-8270-183da5d17554","version":"0.0.1","readme":"This pack can be used to run the [OpenTelemetry Collector][collector] on your Nomad cluster.\n\nIt currently supports being run by the [Docker][docker_driver] driver and allows for the Collector to be configured in\ndifferent ways.\n\n## Variables\n\n- `job_name` (`string` `\"\"`) - The name to use as the job name which overrides using the pack name.\n- `datacenters` (`list(string)` `[\"dc1\"]`) - A list of datacenters in the region which are eligible for task placement.\n- `region` (`string` `\"global\"`) - The region where the job should be placed.\n- `namespace` (`string` `\"default\"`) - The namespace where the job should be placed.\n- `constraints` (`list(object)` `[]`) - Constraints to apply to the entire job.\n- `job_type` (`string` `\"system\"`) - The scheduler type to use for the job.\n- `instance_count` (`number` `\"1\"`) - In case the job is ran as a service, how many copies of the OpenTelemetry\n  Collector group to run.\n- `privileged_mode` (`bool` `\"true\"`) - Determines if the OpenTelemetry Collector should run with privleged access to\n  the host. Useful when using the [hostmetrics][hostmetricsreceiver] receiver. See `examples/privileged.hcl` for a an\n  example.\n- `task_config` (`object`) - The OpenTelemetry Collector task config options.\n- `vault_config` (`object`) - The OpenTelemetry Collector job's Vault configuration. Set `enabled = true` to configure\n  the job's [Vault integration][vault_integration].\n- `traefik_config` (`object`) - Traefik service configurations for the OpenTelemetry Collector. Includes support for\n  HTTP and gRPC. See [`examples/traefik.hcl`](examples/traefik.hcl) for an example (NOTE: Also deploy with Traefik\n  sample jobspec, [`examples/sample_traefik_spec.nomad`](examples/sample_traefik_spec.nomad)).\n- `network_config` (`object`) - The OpenTelemetry Collector job's network configuration options.\n- `resources` (`object`) - The resources to assign to the OpenTelemetry Collector task.\n- `config_yaml_location` (`string` `\"local/otel/config.yaml\"`) - The location of `otel-collector-config.yaml` in the\n  OTel Collector container instance.\n- `config_yaml` (`string`) - The Collector configuration to pass the task. The default value configures an example\n  selection of receivers, processors, extensions, and exporters. You will likely need to customize this in order to\n  have a properly configured target for your telemetry data.\n- `additional_templates` - (`list(object)`) - Additional job templates to render in the task; access Consul KV, or the\n  Vault KV or secrets engine. `data` and `destination` are required.\n- `task_services` (`list(object)`) - Configuration options of the OpenTelemetry Collector services and checks.\n\n### `constraints` List of Objects\n\n[Nomad job specification constraints][job_constraint] allows restricting the set of eligible nodes on which the\nOpenTelemetry Collector task will run.\n\n- `attribute` (`string`) - Specifies the name or reference of the attribute to examine for the constraint.\n- `operator` (`string`) - Specifies the comparison operator. The ordering is compared lexically.\n- `value` (`string`) - Specifies the value to compare the attribute against using the specified operation.\n\nThe default value constrains the job to run on client whose kernel name is `linux`. The HCL variable list of objects is\nshown below and uses a double dollar sign for escaping:\n\n```hcl\n[\n  {\n    attribute = \"$${attr.kernel.name}\",\n    value     = \"linux\",\n    operator  = \"\",\n  }\n]\n```\n\n### `network_config` Object\n\n- `mode` (`string`) - Mode of the network.\n- `ports` (`map<string|number>`) - Specifies the port mapping for the OpenTelemetry Collector task. The map key\n  indicates the port label, and the value is the OpenTelemetry Collector port inside the network namespace.\n\nThe default value for this variable configures a bridge network with the following port map:\n\n```hcl\n{\n  mode = \"bridge\"\n  ports = {\n    \"otlp\"               = 4317\n    \"otlphttp\"           = 4318\n    \"metrics\"            = 8888\n    \"zipkin\"             = 9411\n    \"healthcheck\"        = 13133\n    \"jaeger-grpc\"        = 14250\n    \"jaeger-thrift-http\" = 14268\n    \"zpages\"             = 55679\n  }\n}\n```\n\n### `task_config` Object\n\n- `image` (`string` `\"otel/opentelemetry-collector-contrib\"`) - The OpenTelemetry Collector container image to use.\n- `version` (`string` `\"latest\"`) - The OpenTelemetry Collector version to run. Defaults to `latest` but it's\n  recommended to set a specific [tag][otel_docker_tags].\n- `env` (`map(string)`) - A map of environment variables to set in the OpenTelemery Collector's environment\n\n### `resources` Object\n\n- `cpu` (`number` `256`) - Specifies the CPU required to run this task in MHz.\n- `memory` (`number` `512`) - Specifies the memory required in MB.\n\n### `vault_config` Object\n\nThese all map directly to the values for the [Vault integration][vault_integration].\n\n- `enabled` (`bool` `false`) - Enable the integration for the job.\n- `policies` (`list(string)`) - The named list of Vault policies this job requires.\n- `change_mode` (`string` `\"restart\"`) - The behaviour Nomad should take if the Vault token changes.\n- `change_signal` (`string`) - The signal Nomad should send to the task. Used when `change_mode` is `signal`.\n- `env` (`bool` `true`) - Specifies if `VAULT_TOKEN` and `VAULT_NAMESPACE` environment variables should be set when\n  starting the task.\n- `namespace` (`string`) - Specifies the Vault Namespace to use for the task. Requires Vault Enterprise.\n\n### `traefik_config` Object\n\n- `enabled` (`bool` `false`) - Enable Traefik configs for the OTel Collector. Also requires a Traefik job to be running\n  in Nomad. An example on how to run Traefik the pack is provided in the [`Running the OTel Collector + Traefik\n  Example`](#running-the-otel-collector--traefik-example) section below.\n- `http_host` (`string` `\"otel-collector-http.myhost.com\"`) - The HTTP hostname to which Traefik will route OTLP HTTP\n  requests.\n\n> **NOTES:**\n> 1. The default Traefik config does not have TLS enabled (both for HTTP and gRPC). For more on enabling TLS on Traefik\n> with Nomad, check out [this post by David Alfonzo](https://storiesfromtheherd.com/traefik-in-nomad-using-consul-and-tls-5be0007794ee).\n> 2. Since we don't have TLS enabled, it means that the gRPC `HostSNI` value must be set to a wildcard value (see [this\n> discussion](https://community.traefik.io/t/configuration-of-non-http-port-without-tls/5901/2) for more info).\n> 3. To test the Traefik configs, you can run a sample Go client/server program\n> [here](https://github.com/avillela/go-otel-instrumentation), which contains both HTTP and gRPC examples.\n> 4. For detailed documentation on running the OTel Collector on Nomad with Traefik, check out\n> [this guide](https://adri-v.medium.com/4eaf009b8382?source=friends_link&sk=a1a0612a156d20e86549bd925d419bc3).\n\n### `additional_templates` Object\n\nConfigure one or more additional templates to render. Each item of the list is rendered as its own\n[`template` stanza][template_stanza].\n\nThis creates a convenient way to ship configuration files that are populated from environment variables, Consul data,\nVault secrets, or just general configurations within a Nomad task.\n\nOnly `data` and `destination` are required.\n\n- `data` (`string`) - Specifies the raw template to execute.\n- `destination` (`string`) - Specifies the location where the resulting template should be rendered.\n- `change_mode` (`string` `\"restart\"`) - Specifies the behavior Nomad should take if the rendered template changes.\n- `change_signal` (`string`) - Specifies the signal to send to the task if the template changes. Required if\n  `change_mode` is `signal`.\n- `env` (`bool` `false`) - Specifies the template should be read back in as environment variables for the task.\n- `perms` (`string` `\"644\"`) - Specifies the rendered template's permissions. File permissions are given as octal of\n  the Unix file permissions.\n\n### `task_services` List of Objects\n\n- `service_port_label` (`string`) - Specifies the port to advertise for this service.\n- `service_name` (`string`) - Specifies the name this service will be advertised as in Consul.\n- `service_tags` (`list(string)`) - Specifies the list of tags to associate with this service.\n- `check_enabled` (`bool`) - Whether to enable a check for this service.\n- `check_path` (`string`) - The HTTP path to query the health check should query.\n- `check_interval` (`string`) - Specifies the frequency of the health checks that Consul will perform.\n- `check_timeout` (`string`) - Specifies how long Consul will wait for a health check query to succeed.\n\nThe default value for this variable configures listeners for the following receivers: OTLP, OTLP HTTP, Jaeger GRPC,\nJaeger Thrift HTTP, and Zipkin. It also configures the Collector's Healthcheck and the zpages extension.\n\n## Running the OTel Collector + Traefik Example\n\nTo run the OTel Collector + Traefik example, you'll need to run this pack and the Traefik pack as follows, assuming that you are starting from the repo root:\n\n```bash\nnomad-pack run traefik -f packs/opentelemetry_collector/examples/traefik_vars.hcl\n\nnomad-pack run opentelemetry_collector -f packs/opentelemetry_collector/examples/with_traefik.hcl\n```\n\n[collector]: https://opentelemetry.io/docs/collector\n[docker_driver]: https://www.nomadproject.io/docs/drivers/docker\n[hostmetricsreceiver]: https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/hostmetricsreceiver#host-metrics-receiver\n[job_constraint]: https://www.nomadproject.io/docs/job-specification/constraint\n[otel_docker_tags]: https://hub.docker.com/r/otel/opentelemetry-collector-contrib/tags\n[template_stanza]: https://www.nomadproject.io/docs/job-specification/template\n[vault_integration]: https://www.nomadproject.io/docs/job-specification/vault\n","created_at":"2023-05-17T22:19:13.681Z","updated_at":"2023-05-17T22:19:13.681Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"OpenTelemetry Collector","url":"/nomad/integrations/hashicorp/opentelemetry-collector","isCurrentPage":true}],"anchorLinks":[{"id":"variables","level":2,"title":"Variables"},{"id":"constraints-list-of-objects","level":3,"title":"constraints List of Objects"},{"id":"network_config-object","level":3,"title":"network_config Object"},{"id":"task_config-object","level":3,"title":"task_config Object"},{"id":"resources-object","level":3,"title":"resources Object"},{"id":"vault_config-object","level":3,"title":"vault_config Object"},{"id":"traefik_config-object","level":3,"title":"traefik_config Object"},{"id":"additional_templates-object","level":3,"title":"additional_templates Object"},{"id":"task_services-list-of-objects","level":3,"title":"task_services List of Objects"},{"id":"running-the-otel-collector-+-traefik-example","level":2,"title":"Running the OTel Collector + Traefik Example"}],"serializedREADME":{"compiledSource":"var m=Object.defineProperty,c=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var s=(n,i,a)=>i in n?m(n,i,{enumerable:!0,configurable:!0,writable:!0,value:a}):n[i]=a,e=(n,i)=>{for(var a in i||(i={}))o.call(i,a)&&s(n,a,i[a]);if(l)for(var a of l(i))r.call(i,a)&&s(n,a,i[a]);return n},p=(n,i)=>c(n,N(i));var d=(n,i)=>{var a={};for(var t in n)o.call(n,t)&&i.indexOf(t)<0&&(a[t]=n[t]);if(n!=null&&l)for(var t of l(n))i.indexOf(t)<0&&r.call(n,t)&&(a[t]=n[t]);return a};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(a){var t=a,{components:n}=t,i=d(t,[\"components\"]);return mdx(MDXLayout,p(e(e({},layoutProps),i),{components:n,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This pack can be used to run the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://opentelemetry.io/docs/collector\"}),\"OpenTelemetry Collector\"),\" on your Nomad cluster.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"It currently supports being run by the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/drivers/docker\"}),\"Docker\"),` driver and allows for the Collector to be configured in\ndifferent ways.`),mdx(\"h2\",e({},{id:\"user-content-variables\",\"data-text-content\":\"Variables\",className:\"g-type-display-3\"}),\"Variables\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"job_name\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"\"'),\") - The name to use as the job name which overrides using the pack name.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"datacenters\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"list(string)\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'[\"dc1\"]'),\") - A list of datacenters in the region which are eligible for task placement.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"region\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"global\"'),\") - The region where the job should be placed.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"namespace\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"default\"'),\") - The namespace where the job should be placed.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"constraints\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"list(object)\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},\"[]\"),\") - Constraints to apply to the entire job.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"job_type\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"system\"'),\") - The scheduler type to use for the job.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"instance_count\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"number\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"1\"'),`) - In case the job is ran as a service, how many copies of the OpenTelemetry\nCollector group to run.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"privileged_mode\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"bool\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"true\"'),`) - Determines if the OpenTelemetry Collector should run with privleged access to\nthe host. Useful when using the `,mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/hostmetricsreceiver#host-metrics-receiver\"}),\"hostmetrics\"),\" receiver. See \",mdx(\"inlineCode\",{parentName:\"li\"},\"examples/privileged.hcl\"),` for a an\nexample.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"task_config\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"object\"),\") - The OpenTelemetry Collector task config options.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"vault_config\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"object\"),\") - The OpenTelemetry Collector job's Vault configuration. Set \",mdx(\"inlineCode\",{parentName:\"li\"},\"enabled = true\"),` to configure\nthe job's `,mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.nomadproject.io/docs/job-specification/vault\"}),\"Vault integration\"),\".\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"traefik_config\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"object\"),`) - Traefik service configurations for the OpenTelemetry Collector. Includes support for\nHTTP and gRPC. See `,mdx(\"a\",e({parentName:\"li\"},{href:\"examples/traefik.hcl\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"examples/traefik.hcl\")),` for an example (NOTE: Also deploy with Traefik\nsample jobspec, `,mdx(\"a\",e({parentName:\"li\"},{href:\"examples/sample_traefik_spec.nomad\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"examples/sample_traefik_spec.nomad\")),\").\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"network_config\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"object\"),\") - The OpenTelemetry Collector job's network configuration options.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"resources\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"object\"),\") - The resources to assign to the OpenTelemetry Collector task.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"config_yaml_location\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"local/otel/config.yaml\"'),\") - The location of \",mdx(\"inlineCode\",{parentName:\"li\"},\"otel-collector-config.yaml\"),` in the\nOTel Collector container instance.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"config_yaml\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),`) - The Collector configuration to pass the task. The default value configures an example\nselection of receivers, processors, extensions, and exporters. You will likely need to customize this in order to\nhave a properly configured target for your telemetry data.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"additional_templates\"),\" - (\",mdx(\"inlineCode\",{parentName:\"li\"},\"list(object)\"),`) - Additional job templates to render in the task; access Consul KV, or the\nVault KV or secrets engine. `,mdx(\"inlineCode\",{parentName:\"li\"},\"data\"),\" and \",mdx(\"inlineCode\",{parentName:\"li\"},\"destination\"),\" are required.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"task_services\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"list(object)\"),\") - Configuration options of the OpenTelemetry Collector services and checks.\")),mdx(\"h3\",e({},{id:\"user-content-constraints-list-of-objects\",\"data-text-content\":\"constraints List of Objects\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"constraints\"),\" List of Objects\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/job-specification/constraint\"}),\"Nomad job specification constraints\"),` allows restricting the set of eligible nodes on which the\nOpenTelemetry Collector task will run.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"attribute\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the name or reference of the attribute to examine for the constraint.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"operator\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the comparison operator. The ordering is compared lexically.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"value\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the value to compare the attribute against using the specified operation.\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The default value constrains the job to run on client whose kernel name is \",mdx(\"inlineCode\",{parentName:\"p\"},\"linux\"),`. The HCL variable list of objects is\nshown below and uses a double dollar sign for escaping:`),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"attribute\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"$${attr.kernel.name}\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"value\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"linux\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"operator\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`)),mdx(\"h3\",e({},{id:\"user-content-network_config-object\",\"data-text-content\":\"network_config Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"network_config\"),\" Object\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"mode\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Mode of the network.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"ports\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"map<string|number>\"),`) - Specifies the port mapping for the OpenTelemetry Collector task. The map key\nindicates the port label, and the value is the OpenTelemetry Collector port inside the network namespace.`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The default value for this variable configures a bridge network with the following port map:\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"mode\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"bridge\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ports\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"otlp\"'),\"               \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"4317\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"otlphttp\"'),\"           \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"4318\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"metrics\"'),\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"8888\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"zipkin\"'),\"             \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"9411\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"healthcheck\"'),\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"13133\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"jaeger-grpc\"'),\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"14250\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"jaeger-thrift-http\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"14268\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"zpages\"'),\"             \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"55679\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h3\",e({},{id:\"user-content-task_config-object\",\"data-text-content\":\"task_config Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"task_config\"),\" Object\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"image\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"otel/opentelemetry-collector-contrib\"'),\") - The OpenTelemetry Collector container image to use.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"version\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"latest\"'),\") - The OpenTelemetry Collector version to run. Defaults to \",mdx(\"inlineCode\",{parentName:\"li\"},\"latest\"),` but it's\nrecommended to set a specific `,mdx(\"a\",e({parentName:\"li\"},{href:\"https://hub.docker.com/r/otel/opentelemetry-collector-contrib/tags\"}),\"tag\"),\".\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"env\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"map(string)\"),\") - A map of environment variables to set in the OpenTelemery Collector's environment\")),mdx(\"h3\",e({},{id:\"user-content-resources-object\",\"data-text-content\":\"resources Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"resources\"),\" Object\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"cpu\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"number\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},\"256\"),\") - Specifies the CPU required to run this task in MHz.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"memory\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"number\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},\"512\"),\") - Specifies the memory required in MB.\")),mdx(\"h3\",e({},{id:\"user-content-vault_config-object\",\"data-text-content\":\"vault_config Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"vault_config\"),\" Object\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"These all map directly to the values for the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/job-specification/vault\"}),\"Vault integration\"),\".\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"enabled\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"bool\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},\"false\"),\") - Enable the integration for the job.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"policies\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"list(string)\"),\") - The named list of Vault policies this job requires.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"change_mode\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"restart\"'),\") - The behaviour Nomad should take if the Vault token changes.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"change_signal\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - The signal Nomad should send to the task. Used when \",mdx(\"inlineCode\",{parentName:\"li\"},\"change_mode\"),\" is \",mdx(\"inlineCode\",{parentName:\"li\"},\"signal\"),\".\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"env\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"bool\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},\"true\"),\") - Specifies if \",mdx(\"inlineCode\",{parentName:\"li\"},\"VAULT_TOKEN\"),\" and \",mdx(\"inlineCode\",{parentName:\"li\"},\"VAULT_NAMESPACE\"),` environment variables should be set when\nstarting the task.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"namespace\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the Vault Namespace to use for the task. Requires Vault Enterprise.\")),mdx(\"h3\",e({},{id:\"user-content-traefik_config-object\",\"data-text-content\":\"traefik_config Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"traefik_config\"),\" Object\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"enabled\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"bool\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},\"false\"),`) - Enable Traefik configs for the OTel Collector. Also requires a Traefik job to be running\nin Nomad. An example on how to run Traefik the pack is provided in the `,mdx(\"a\",e({parentName:\"li\"},{href:\"#running-the-otel-collector--traefik-example\"}),mdx(\"inlineCode\",{parentName:\"a\"},`Running the OTel Collector + Traefik\nExample`)),\" section below.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"http_host\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"otel-collector-http.myhost.com\"'),`) - The HTTP hostname to which Traefik will route OTLP HTTP\nrequests.`)),mdx(\"blockquote\",null,mdx(\"p\",e({parentName:\"blockquote\"},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"NOTES:\")),mdx(\"ol\",{parentName:\"blockquote\"},mdx(\"li\",{parentName:\"ol\"},`The default Traefik config does not have TLS enabled (both for HTTP and gRPC). For more on enabling TLS on Traefik\nwith Nomad, check out `,mdx(\"a\",e({parentName:\"li\"},{href:\"https://storiesfromtheherd.com/traefik-in-nomad-using-consul-and-tls-5be0007794ee\"}),\"this post by David Alfonzo\"),\".\"),mdx(\"li\",{parentName:\"ol\"},\"Since we don't have TLS enabled, it means that the gRPC \",mdx(\"inlineCode\",{parentName:\"li\"},\"HostSNI\"),\" value must be set to a wildcard value (see \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://community.traefik.io/t/configuration-of-non-http-port-without-tls/5901/2\"}),`this\ndiscussion`),\" for more info).\"),mdx(\"li\",{parentName:\"ol\"},`To test the Traefik configs, you can run a sample Go client/server program\n`,mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/avillela/go-otel-instrumentation\"}),\"here\"),\", which contains both HTTP and gRPC examples.\"),mdx(\"li\",{parentName:\"ol\"},`For detailed documentation on running the OTel Collector on Nomad with Traefik, check out\n`,mdx(\"a\",e({parentName:\"li\"},{href:\"https://adri-v.medium.com/4eaf009b8382?source=friends_link&sk=a1a0612a156d20e86549bd925d419bc3\"}),\"this guide\"),\".\"))),mdx(\"h3\",e({},{id:\"user-content-additional_templates-object\",\"data-text-content\":\"additional_templates Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"additional_templates\"),\" Object\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Configure one or more additional templates to render. Each item of the list is rendered as its own\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/job-specification/template\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"template\"),\" stanza\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`This creates a convenient way to ship configuration files that are populated from environment variables, Consul data,\nVault secrets, or just general configurations within a Nomad task.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Only \",mdx(\"inlineCode\",{parentName:\"p\"},\"data\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"destination\"),\" are required.\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"data\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the raw template to execute.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"destination\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the location where the resulting template should be rendered.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"change_mode\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"restart\"'),\") - Specifies the behavior Nomad should take if the rendered template changes.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"change_signal\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),`) - Specifies the signal to send to the task if the template changes. Required if\n`,mdx(\"inlineCode\",{parentName:\"li\"},\"change_mode\"),\" is \",mdx(\"inlineCode\",{parentName:\"li\"},\"signal\"),\".\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"env\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"bool\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},\"false\"),\") - Specifies the template should be read back in as environment variables for the task.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"perms\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\" \",mdx(\"inlineCode\",{parentName:\"li\"},'\"644\"'),`) - Specifies the rendered template's permissions. File permissions are given as octal of\nthe Unix file permissions.`)),mdx(\"h3\",e({},{id:\"user-content-task_services-list-of-objects\",\"data-text-content\":\"task_services List of Objects\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"task_services\"),\" List of Objects\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"service_port_label\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the port to advertise for this service.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"service_name\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the name this service will be advertised as in Consul.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"service_tags\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"list(string)\"),\") - Specifies the list of tags to associate with this service.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"check_enabled\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"bool\"),\") - Whether to enable a check for this service.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"check_path\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - The HTTP path to query the health check should query.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"check_interval\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies the frequency of the health checks that Consul will perform.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"check_timeout\"),\" (\",mdx(\"inlineCode\",{parentName:\"li\"},\"string\"),\") - Specifies how long Consul will wait for a health check query to succeed.\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The default value for this variable configures listeners for the following receivers: OTLP, OTLP HTTP, Jaeger GRPC,\nJaeger Thrift HTTP, and Zipkin. It also configures the Collector's Healthcheck and the zpages extension.`),mdx(\"h2\",e({},{id:\"user-content-running-the-otel-collector-+-traefik-example\",\"data-text-content\":\"Running the OTel Collector  Traefik Example\",className:\"g-type-display-3\"}),\"Running the OTel Collector + Traefik Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To run the OTel Collector + Traefik example, you'll need to run this pack and the Traefik pack as follows, assuming that you are starting from the repo root:\"),mdx(\"pre\",e({},{className:\"language-bash\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),\"nomad-pack run traefik -f packs/opentelemetry_collector/examples/traefik_vars.hcl\",`\n`,`\n`,\"nomad-pack run opentelemetry_collector -f packs/opentelemetry_collector/examples/with_traefik.hcl\",`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}