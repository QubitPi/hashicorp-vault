{"pageProps":{"metadata":{"title":"Wordpress | Integrations","description":"WordPress - Open-source CMS"},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"684c64f5-1436-4122-a201-d78b0272033f","slug":"wordpress","name":"Wordpress","description":"WordPress - Open-source CMS","license_type":null,"license_url":null,"external_only":false,"external_url":"https://wordpress.org/","tier":"community","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/wordpress","created_at":"2023-05-17T17:28:28.855Z","updated_at":"2023-07-12T18:05:12.595Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"79e473f9-0c50-46f6-b94f-26338902da1e","integration_id":"684c64f5-1436-4122-a201-d78b0272033f","version":"0.0.1","readme":"This pack contains a service job that runs [WordPress](https://wordpress.org/) in a single Nomad client. It currently supports\nbeing run by the [Docker](https://www.nomadproject.io/docs/drivers/docker) driver.\n\nIt has 3 tasks:\n- **WordPress:** [*(reference)*](https://wordpress.org/) the open-source CMS;\n- **MariaDB:** [*(reference)*](https://mariadb.org/) the database used by Wordpress;\n- **phpMyAdmin:** [*(reference)*](https://www.phpmyadmin.net/) to handle the administration of MariaDB over web.\n\nSetup:\n- Service-to-service communication is handled with Consul Connect (via sidecar proxies);\n- MariaDB's state is persisted with Nomad Host Volumes;\n- Consul service registration and service health checks are enabled by default for WordPress and phpMyAdmin. MariaDB only has service registration enabled.\n\n## Requirements\nClients that expect to run this job require:\n- [Docker volumes](https://www.nomadproject.io/docs/drivers/docker \"Docker volumes\") to be enabled within their Docker plugin stanza, due to the usage of Nomad's host volume:\n```hcl\nplugin \"docker\" {\n  config {\n    volumes {\n      enabled = true\n    }\n  }\n}\n```\n\n- [Host volume](https://www.nomadproject.io/docs/configuration/client#host_volume-stanza \"Host volume\") to be enabled in the client configuration (the host volume directory - /var/lib/mariadb - must be created in advance):\n```hcl\nclient {\n  host_volume \"wordpress-mariadb\" {\n    path      = \"/var/lib/mariadb\"\n    read_only = false\n  }\n}\n```\n\n- [CNI plugins installed](https://www.nomadproject.io/docs/job-specification/network#network-modes \"CNI plugins installed\") and [its path](https://www.nomadproject.io/docs/configuration/client#cni_path \"its path\") set in the client's configuration if network mode is set to bridge.\n\n- [Consul Connect](https://www.nomadproject.io/docs/integrations/consul-connect \"Consul Connect\") to be enabled in Consul's configuration:\n```hcl\nports {\n  grpc = 8502\n}\n\nconnect {\n  enabled = true\n}\n```\n\n## Customizing the Docker images\n\nThe 3 docker images can be replaced by using their variable names:\n- mariadb_task_image\n- wordpress_task_image\n- phpmyadmin_task_image\n\nExample:\n```\nnomad-pack run wordpress --var wordpress_task_image=\"wordpress:5.8.1-apache\"\n```\n\n## Customizing the environment variables\n\nThe 3 tasks have default environment variables. However, it's recommended to change the ones related to authentication if the services are going to be publicly accessible. Additional environment variables can be passed to nomad-pack, even if not in the default variables file.\n\nDefault MariaDB environment variables:\n```\nmariadb_task_env_vars = [\n  {\n    key = \"MYSQL_ROOT_PASSWORD\"\n    value = \"mariadb_root_password\"\n  },\n  {\n    key = \"MYSQL_DATABASE\"\n    value = \"wordpress\"\n  },\n  {\n    key = \"MYSQL_USER\"\n    value = \"wordpress\"\n  },\n  {\n    key = \"MYSQL_PASSWORD\"\n    value = \"wordpress\"\n  }\n]\n```\n\nDefault WordPress environment variables:\n```\nwordpress_task_env_vars = [\n  {\n    key = \"WORDPRESS_DB_HOST\"\n    value = \"$${NOMAD_UPSTREAM_ADDR_mariadb}\"\n  },\n  {\n    key = \"WORDPRESS_DB_USER\"\n    value = \"wordpress\"\n  },\n  {\n    key = \"WORDPRESS_DB_PASSWORD\"\n    value = \"wordpress\"\n  },\n  {\n    key = \"WORDPRESS_DB_NAME\"\n    value = \"wordpress\"\n  }\n]\n```\n\nDefault phpMyAdmin environment variables:\n```\nphpmyadmin_task_env_vars = [\n  {\n    key = \"MYSQL_ROOT_PASSWORD\"\n    value = \"mariadb_root_password\"\n  },\n  {\n    key = \"PMA_HOST\"\n    value = \"$${NOMAD_UPSTREAM_IP_mariadb}\"\n  },\n  {\n    key = \"PMA_PORT\"\n    value = \"$${NOMAD_UPSTREAM_PORT_mariadb}\"\n  },\n  {\n    key = \"MYSQL_USERNAME\"\n    value = \"wordpress\"\n  }\n]\n```\n\n## Customizing Ports\n\nMariaDB ports are not exposed and communication to it needs to be done via its sidecar proxy.\n\nWordPress and phpMyAdmin port 80 are exposed and are randomly assigned to the host. The usage of a reverse proxy, such as Traefik, is recommended.\n\n## Customizing Resources\n\nThe application resource limits can be customized on a task level. The variables names are:\n- mariadb_task_resources\n- wordpress_task_resources\n- phpmyadmin_task_resources\n\nExample:\n```\nwordpress_task_resources = {\n  cpu = 1024\n  memory = 2048\n}\n```\n\n## Customizing service health checks\n\nHealth checks can be disabled on a service basis. Setting the following variables to *false* will completely disable health checks:\n- mariadb_group_has_health_check\n- wordpress_group_has_health_check\n- phpmyadmin_group_has_health_check\n\nHealth check configuration is set by the following variables:\n- mariadb_group_health_check\n- wordpress_group_health_check\n- phpmyadmin_group_health_check\n\nExample:\n```\nwordpress_group_health_check = {\n  name     = \"wordpress\"\n  path     = \"/wp-admin/install.php\"\n  port     = \"http\"\n  interval = \"10s\"\n  timeout  = \"2s\"\n}\n```","created_at":"2023-05-17T22:19:03.513Z","updated_at":"2023-05-17T22:19:03.513Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"Wordpress","url":"/nomad/integrations/hashicorp/wordpress","isCurrentPage":true}],"anchorLinks":[{"id":"requirements","level":2,"title":"Requirements"},{"id":"customizing-the-docker-images","level":2,"title":"Customizing the Docker images"},{"id":"customizing-the-environment-variables","level":2,"title":"Customizing the environment variables"},{"id":"customizing-ports","level":2,"title":"Customizing Ports"},{"id":"customizing-resources","level":2,"title":"Customizing Resources"},{"id":"customizing-service-health-checks","level":2,"title":"Customizing service health checks"}],"serializedREADME":{"compiledSource":"var m=Object.defineProperty,d=Object.defineProperties;var u=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var l=(a,n,t)=>n in a?m(a,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[n]=t,e=(a,n)=>{for(var t in n||(n={}))p.call(n,t)&&l(a,t,n[t]);if(o)for(var t of o(n))r.call(n,t)&&l(a,t,n[t]);return a},i=(a,n)=>d(a,u(n));var c=(a,n)=>{var t={};for(var s in a)p.call(a,s)&&n.indexOf(s)<0&&(t[s]=a[s]);if(a!=null&&o)for(var s of o(a))n.indexOf(s)<0&&r.call(a,s)&&(t[s]=a[s]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var s=t,{components:a}=s,n=c(s,[\"components\"]);return mdx(MDXLayout,i(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This pack contains a service job that runs \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://wordpress.org/\"}),\"WordPress\"),` in a single Nomad client. It currently supports\nbeing run by the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/drivers/docker\"}),\"Docker\"),\" driver.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"It has 3 tasks:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"WordPress:\"),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://wordpress.org/\"}),mdx(\"em\",{parentName:\"a\"},\"(reference)\")),\" the open-source CMS;\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"MariaDB:\"),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://mariadb.org/\"}),mdx(\"em\",{parentName:\"a\"},\"(reference)\")),\" the database used by Wordpress;\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"phpMyAdmin:\"),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.phpmyadmin.net/\"}),mdx(\"em\",{parentName:\"a\"},\"(reference)\")),\" to handle the administration of MariaDB over web.\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Setup:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Service-to-service communication is handled with Consul Connect (via sidecar proxies);\"),mdx(\"li\",{parentName:\"ul\"},\"MariaDB's state is persisted with Nomad Host Volumes;\"),mdx(\"li\",{parentName:\"ul\"},\"Consul service registration and service health checks are enabled by default for WordPress and phpMyAdmin. MariaDB only has service registration enabled.\")),mdx(\"h2\",e({},{id:\"user-content-requirements\",\"data-text-content\":\"Requirements\",className:\"g-type-display-3\"}),\"Requirements\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Clients that expect to run this job require:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.nomadproject.io/docs/drivers/docker\",title:\"Docker volumes\"}),\"Docker volumes\"),\" to be enabled within their Docker plugin stanza, due to the usage of Nomad's host volume:\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"plugin \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"docker\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"config\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volumes\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"enabled\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.nomadproject.io/docs/configuration/client#host_volume-stanza\",title:\"Host volume\"}),\"Host volume\"),\" to be enabled in the client configuration (the host volume directory - /var/lib/mariadb - must be created in advance):\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"client\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  host_volume \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"wordpress-mariadb\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"path\"),\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"/var/lib/mariadb\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"read_only\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"false\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/job-specification/network#network-modes\",title:\"CNI plugins installed\"}),\"CNI plugins installed\"),\" and \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/configuration/client#cni_path\",title:\"its path\"}),\"its path\"),\" set in the client's configuration if network mode is set to bridge.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/integrations/consul-connect\",title:\"Consul Connect\"}),\"Consul Connect\"),\" to be enabled in Consul's configuration:\"))),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"ports\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"grpc\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"8502\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"connect\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"enabled\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h2\",e({},{id:\"user-content-customizing-the-docker-images\",\"data-text-content\":\"Customizing the Docker images\",className:\"g-type-display-3\"}),\"Customizing the Docker images\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The 3 docker images can be replaced by using their variable names:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"mariadb_task_image\"),mdx(\"li\",{parentName:\"ul\"},\"wordpress_task_image\"),mdx(\"li\",{parentName:\"ul\"},\"phpmyadmin_task_image\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Example:\"),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},'nomad-pack run wordpress --var wordpress_task_image=\"wordpress:5.8.1-apache\"',`\n`)),mdx(\"h2\",e({},{id:\"user-content-customizing-the-environment-variables\",\"data-text-content\":\"Customizing the environment variables\",className:\"g-type-display-3\"}),\"Customizing the environment variables\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The 3 tasks have default environment variables. However, it's recommended to change the ones related to authentication if the services are going to be publicly accessible. Additional environment variables can be passed to nomad-pack, even if not in the default variables file.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Default MariaDB environment variables:\"),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},\"mariadb_task_env_vars = [\",`\n`,\"  {\",`\n`,'    key = \"MYSQL_ROOT_PASSWORD\"',`\n`,'    value = \"mariadb_root_password\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"MYSQL_DATABASE\"',`\n`,'    value = \"wordpress\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"MYSQL_USER\"',`\n`,'    value = \"wordpress\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"MYSQL_PASSWORD\"',`\n`,'    value = \"wordpress\"',`\n`,\"  }\",`\n`,\"]\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Default WordPress environment variables:\"),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},\"wordpress_task_env_vars = [\",`\n`,\"  {\",`\n`,'    key = \"WORDPRESS_DB_HOST\"',`\n`,'    value = \"$${NOMAD_UPSTREAM_ADDR_mariadb}\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"WORDPRESS_DB_USER\"',`\n`,'    value = \"wordpress\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"WORDPRESS_DB_PASSWORD\"',`\n`,'    value = \"wordpress\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"WORDPRESS_DB_NAME\"',`\n`,'    value = \"wordpress\"',`\n`,\"  }\",`\n`,\"]\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Default phpMyAdmin environment variables:\"),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},\"phpmyadmin_task_env_vars = [\",`\n`,\"  {\",`\n`,'    key = \"MYSQL_ROOT_PASSWORD\"',`\n`,'    value = \"mariadb_root_password\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"PMA_HOST\"',`\n`,'    value = \"$${NOMAD_UPSTREAM_IP_mariadb}\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"PMA_PORT\"',`\n`,'    value = \"$${NOMAD_UPSTREAM_PORT_mariadb}\"',`\n`,\"  },\",`\n`,\"  {\",`\n`,'    key = \"MYSQL_USERNAME\"',`\n`,'    value = \"wordpress\"',`\n`,\"  }\",`\n`,\"]\",`\n`)),mdx(\"h2\",e({},{id:\"user-content-customizing-ports\",\"data-text-content\":\"Customizing Ports\",className:\"g-type-display-3\"}),\"Customizing Ports\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"MariaDB ports are not exposed and communication to it needs to be done via its sidecar proxy.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"WordPress and phpMyAdmin port 80 are exposed and are randomly assigned to the host. The usage of a reverse proxy, such as Traefik, is recommended.\"),mdx(\"h2\",e({},{id:\"user-content-customizing-resources\",\"data-text-content\":\"Customizing Resources\",className:\"g-type-display-3\"}),\"Customizing Resources\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The application resource limits can be customized on a task level. The variables names are:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"mariadb_task_resources\"),mdx(\"li\",{parentName:\"ul\"},\"wordpress_task_resources\"),mdx(\"li\",{parentName:\"ul\"},\"phpmyadmin_task_resources\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Example:\"),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},\"wordpress_task_resources = {\",`\n`,\"  cpu = 1024\",`\n`,\"  memory = 2048\",`\n`,\"}\",`\n`)),mdx(\"h2\",e({},{id:\"user-content-customizing-service-health-checks\",\"data-text-content\":\"Customizing service health checks\",className:\"g-type-display-3\"}),\"Customizing service health checks\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Health checks can be disabled on a service basis. Setting the following variables to \",mdx(\"em\",{parentName:\"p\"},\"false\"),\" will completely disable health checks:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"mariadb_group_has_health_check\"),mdx(\"li\",{parentName:\"ul\"},\"wordpress_group_has_health_check\"),mdx(\"li\",{parentName:\"ul\"},\"phpmyadmin_group_has_health_check\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Health check configuration is set by the following variables:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"mariadb_group_health_check\"),mdx(\"li\",{parentName:\"ul\"},\"wordpress_group_health_check\"),mdx(\"li\",{parentName:\"ul\"},\"phpmyadmin_group_health_check\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Example:\"),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},\"wordpress_group_health_check = {\",`\n`,'  name     = \"wordpress\"',`\n`,'  path     = \"/wp-admin/install.php\"',`\n`,'  port     = \"http\"',`\n`,'  interval = \"10s\"',`\n`,'  timeout  = \"2s\"',`\n`,\"}\",`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}