{"pageProps":{"metadata":{"title":"Google Cloud Platform | Integrations","description":"The googlecompute plugin can be used with HashiCorp Packer to create custom images on GCE."},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"834b0c0c-be8e-4a62-add3-478673c04f95","slug":"googlecompute","name":"Google Cloud Platform","description":"The googlecompute plugin can be used with HashiCorp Packer to create custom images on GCE.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"official","repo_url":"https://github.com/hashicorp/packer-plugin-googlecompute","subdirectory":"/.web-docs","created_at":"2023-06-15T19:02:47.779Z","updated_at":"2023-08-08T17:01:06.505Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["1.1.4","1.1.3","1.1.2","1.1.1"],"components":[{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors"},{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors"},{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"}],"flags":[{"id":"3709e036-b45f-4be8-9043-f7c8cc2af00f","slug":"hcp-ready","name":"HCP Ready","description":"This integration has been tested to work with HashiCorp Cloud Platform (HCP)","created_at":"2022-11-09T22:56:30.673Z","updated_at":"2022-11-09T22:56:30.673Z"}],"integration_type":null},"activeRelease":{"id":"76ef66e5-9c2d-4b5d-9823-d9019727c2d8","integration_id":"834b0c0c-be8e-4a62-add3-478673c04f95","version":"1.1.4","readme":"The Google compute Packer plugin lets you create custom images for use within Google Compute Engine (GCE).\n\n### Installation\n\nTo install this plugin, copy and paste this code into your Packer configuration, then run [`packer init`](https://www.packer.io/docs/commands/init).\n\n```hcl\npacker {\n  required_plugins {\n    googlecompute = {\n      source  = \"github.com/hashicorp/googlecompute\"\n      version = \"~> 1\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\n$ packer plugins install github.com/hashicorp/googlecompute\n```\n\n### Components\n\n#### Builders\n\n- [googlecompute](/packer/integrations/hashicorp/googlecompute/latest/components/builder/googlecompute) - The\n  googlecompute builder creates images from existing ones, by launching an instance, provisioning it, then exporting\n  it as a reusable image.\n\n#### Post-Processors\n\n- [googlecompute-import](/packer/integrations/hashicorp/googlecompute/latest/components/post-processor/googlecompute-import) -\n  The googlecompute-import post-processor imports an existing raw disk image, and imports it as a GCE image that can be\n  used for launching instances from.\n\n- [googlecompute-export](/packer/integrations/hashicorp/googlecompute/latest/components/post-processor/googlecompute-export) -\n  The googlecompute-export post-processor exports the image built by the googlecompute builder as a .tar.gz archive into Google\n  Cloud Storage (GCS).\n\n### Authentication\n\nAuthenticating with Google Cloud services requires either a User Application Default Credentials,\na JSON Service Account Key or an Access Token.  These are **not** required if you are\nrunning the `googlecompute` Packer builder on Google Cloud with a\nproperly-configured [Google Service\nAccount](https://cloud.google.com/compute/docs/authentication).\n\nThe following options are available for the `googlecompute` builder, the googlecompute-export`, and\nthe `googlecompute-import`:\n\n<!-- Code generated from the comments of the Authentication struct in lib/common/auth.go; DO NOT EDIT MANUALLY -->\n\n- `access_token` (string) - A temporary [OAuth 2.0 access token](https://developers.google.com/identity/protocols/oauth2)\n  obtained from the Google Authorization server, i.e. the `Authorization: Bearer` token used to\n  authenticate HTTP requests to GCP APIs.\n  This is an alternative to `account_file`, and ignores the `scopes` field.\n  If both are specified, `access_token` will be used over the `account_file` field.\n  \n  These access tokens cannot be renewed by Packer and thus will only work until they expire.\n  If you anticipate Packer needing access for longer than a token's lifetime (default `1 hour`),\n  please use a service account key with `account_file` instead.\n\n- `account_file` (string) - The JSON file containing your account credentials. Not required if you\n  run Packer on a GCE instance with a service account. Instructions for\n  creating the file or using service accounts are above.\n\n- `credentials_file` (string) - The JSON file containing your account credentials.\n  \n  The file's contents may be anything supported by the Google Go client, i.e.:\n  \n  * Service account JSON\n  * OIDC-provided token for federation\n  * Gcloud user credentials file (refresh-token JSON)\n  * A Google Developers Console client_credentials.json\n\n- `credentials_json` (string) - The raw JSON payload for credentials.\n  \n  The accepted data formats are same as those described under\n  [credentials_file](#credentials_file).\n\n- `impersonate_service_account` (string) - This allows service account impersonation as per the [docs](https://cloud.google.com/iam/docs/impersonating-service-accounts).\n\n- `vault_gcp_oauth_engine` (string) - Can be set instead of account_file. If set, this builder will use\n  HashiCorp Vault to generate an Oauth token for authenticating against\n  Google Cloud. The value should be the path of the token generator\n  within vault.\n  For information on how to configure your Vault + GCP engine to produce\n  Oauth tokens, see https://www.vaultproject.io/docs/auth/gcp\n  You must have the environment variables VAULT_ADDR and VAULT_TOKEN set,\n  along with any other relevant variables for accessing your vault\n  instance. For more information, see the Vault docs:\n  https://www.vaultproject.io/docs/commands/#environment-variables\n  Example:`\"vault_gcp_oauth_engine\": \"gcp/token/my-project-editor\",`\n\n<!-- End of code generated from the comments of the Authentication struct in lib/common/auth.go; -->\n\n\n#### Running locally on your workstation.\n\nIf you run the `googlecompute` Packer builder locally on your workstation, you will\nneed to install the Google Cloud SDK and authenticate using [User Application Default\nCredentials](https://cloud.google.com/sdk/gcloud/reference/auth/application-default).\nYou don't need to specify an _account file_ if you are using this method. Your user\nmust have at least `Compute Instance Admin (v1)` & `Service Account User` roles\nto use Packer succesfully.\n\n#### Running on Google Cloud\n\nIf you run the `googlecompute` Packer builder on GCE or GKE, you can\nconfigure that instance or cluster to use a [Google Service\nAccount](https://cloud.google.com/compute/docs/authentication). This will allow\nPacker to authenticate to Google Cloud without having to bake in a separate\ncredential/authentication file.\n\nIt is recommended that you create a custom service account for Packer and assign it\n`Compute Instance Admin (v1)` & `Service Account User` roles.\n\nFor `gcloud`, you can run the following commands:\n\n```shell-session\n$ gcloud iam service-accounts create packer \\\n  --project YOUR_GCP_PROJECT \\\n  --description=\"Packer Service Account\" \\\n  --display-name=\"Packer Service Account\"\n\n$ gcloud projects add-iam-policy-binding YOUR_GCP_PROJECT \\\n    --member=serviceAccount:packer@YOUR_GCP_PROJECT.iam.gserviceaccount.com \\\n    --role=roles/compute.instanceAdmin.v1\n\n$ gcloud projects add-iam-policy-binding YOUR_GCP_PROJECT \\\n    --member=serviceAccount:packer@YOUR_GCP_PROJECT.iam.gserviceaccount.com \\\n    --role=roles/iam.serviceAccountUser\n\n$ gcloud projects add-iam-policy-binding YOUR_GCP_PROJECT \\\n    --member=serviceAccount:packer@YOUR_GCP_PROJECT.iam.gserviceaccount.com \\\n    --role=roles/iap.tunnelResourceAccessor\n\n$ gcloud compute instances create INSTANCE-NAME \\\n  --project YOUR_GCP_PROJECT \\\n  --image-family ubuntu-2004-lts \\\n  --image-project ubuntu-os-cloud \\\n  --network YOUR_GCP_NETWORK \\\n  --zone YOUR_GCP_ZONE \\\n  --service-account=packer@YOUR_GCP_PROJECT.iam.gserviceaccount.com \\\n  --scopes=\"https://www.googleapis.com/auth/cloud-platform\"\n```\n\n**The service account will be used automatically by Packer as long as there is\nno _account file_ specified in the Packer configuration file.**\n\n#### Running outside of Google Cloud\n\nThe [Google Cloud Console](https://console.cloud.google.com) allows\nyou to create and download a credential file that will let you use the\n`googlecompute` Packer builder anywhere. To make the process more\nstraightforwarded, it is documented here.\n\n1.  Log into the [Google Cloud\n    Console](https://console.cloud.google.com/iam-admin/serviceaccounts) and select a project.\n\n2.  Click Select a project, choose your project, and click Open.\n\n3.  Click Create Service Account.\n\n4.  Enter a service account name (friendly display name), an optional description, select the `Compute Engine Instance Admin (v1)` and `Service Account User` roles, and then click Save.\n\n5.  Generate a JSON Key and save it in a secure location.\n\n6.  Set the Environment Variable `GOOGLE_APPLICATION_CREDENTIALS` to point to the path of the service account key.\n\n#### Precedence of Authentication Methods\n\nPacker looks for credentials in the following places, preferring the first\nlocation found:\n\n1.  An `access_token` option in your packer file.\n\n2.  An `account_file` option in your packer file.\n\n3.  A JSON file (Service Account) whose path is specified by the\n    `GOOGLE_APPLICATION_CREDENTIALS` environment variable.\n\n4.  A JSON file in a location known to the `gcloud` command-line tool.\n    (`gcloud auth application-default login` creates it)\n\n    On Windows, this is:\n\n        %APPDATA%/gcloud/application_default_credentials.json\n\n    On other systems:\n\n        $HOME/.config/gcloud/application_default_credentials.json\n\n5.  On Google Compute Engine and Google App Engine Managed VMs, it fetches\n    credentials from the metadata server. (Needs a correct VM authentication\n    scope configuration, see above.)\n\n### Examples\n\n#### Basic Example\n\nBelow is a fully functioning example. It doesn't do anything useful since no\nprovisioners or startup-script metadata are defined, but it will effectively\nrepackage an existing GCE image.\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"googlecompute\",\n      \"project_id\": \"my project\",\n      \"source_image\": \"debian-9-stretch-v20200805\",\n      \"ssh_username\": \"packer\",\n      \"zone\": \"us-central1-a\"\n    }\n  ]\n}\n```\n\n**HCL2**\n\n```hcl\nsource \"googlecompute\" \"basic-example\" {\n  project_id = \"my project\"\n  source_image = \"debian-9-stretch-v20200805\"\n  ssh_username = \"packer\"\n  zone = \"us-central1-a\"\n}\n\nbuild {\n  sources = [\"sources.googlecompute.basic-example\"]\n}\n```\n\n\n#### Windows Example\n\nBefore you can provision using the winrm communicator, you need to allow\ntraffic through google's firewall on the winrm port (tcp:5986). You can do so\nusing the gcloud command.\n\n    gcloud compute firewall-rules create allow-winrm --allow tcp:5986\n\nOr alternatively by navigating to [https://console.cloud.google.com/networking/firewalls/list](https://console.cloud.google.com/networking/firewalls/list).\n\nOnce this is set up, the following is a complete working packer config after\nsetting a valid `project_id`:\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"googlecompute\",\n      \"project_id\": \"my project\",\n      \"source_image\": \"windows-server-2019-dc-v20200813\",\n      \"disk_size\": \"50\",\n      \"machine_type\": \"n1-standard-2\",\n      \"communicator\": \"winrm\",\n      \"winrm_username\": \"packer_user\",\n      \"winrm_insecure\": true,\n      \"winrm_use_ssl\": true,\n      \"metadata\": {\n        \"sysprep-specialize-script-cmd\": \"winrm quickconfig -quiet & net user /add packer_user & net localgroup administrators packer_user /add & winrm set winrm/config/service/auth @{Basic=\\\"true\\\"}\"\n      },\n      \"zone\": \"us-central1-a\"\n    }\n  ]\n}\n```\n\n**HCL2**\n\n```hcl\nsource \"googlecompute\" \"windows-example\" {\n  project_id = \"MY_PROJECT\"\n  source_image = \"windows-server-2019-dc-v20200813\"\n  zone = \"us-central1-a\"\n  disk_size = 50\n  machine_type = \"n1-standard-2\"\n  communicator = \"winrm\"\n  winrm_username = \"packer_user\"\n  winrm_insecure = true\n  winrm_use_ssl = true\n  metadata = {\n    sysprep-specialize-script-cmd = \"winrm quickconfig -quiet & net user /add packer_user & net localgroup administrators packer_user /add & winrm set winrm/config/service/auth @{Basic=\\\"true\\\"}\"\n  }\n}\n\nbuild {\n  sources = [\"sources.googlecompute.windows-example\"]\n}\n```\n\n-> **Warning:** Please note that if you're setting up WinRM for provisioning, you'll probably want to turn it off or restrict its permissions as part of a shutdown script at the end of Packer's provisioning process. For more details on the why/how, check out this useful blog post and the associated code:\nhttps://missionimpossiblecode.io/post/winrm-for-provisioning-close-the-door-on-the-way-out-eh/\n\nThis build can take up to 15 min.\n\n#### Windows over WinSSH Example\n\nThe following uses Windows SSH as backend communicator\n[https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse](https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse)\n\n```hcl\nsource \"googlecompute\" \"windows-ssh-example\" {\n  project_id = \"MY_PROJECT\"\n  source_image = \"windows-server-2019-dc-v20200813\"\n  zone = \"us-east4-a\"\n  disk_size = 50\n  machine_type = \"n1-standard-2\"\n  communicator = \"ssh\"\n  ssh_username = var.packer_username\n  ssh_password = var.packer_user_password\n  ssh_timeout = \"1h\"\n  metadata = {\n    sysprep-specialize-script-cmd = \"net user ${var.packer_username} \\\"${var.packer_user_password}\\\" /add /y & wmic UserAccount where Name=\\\"${var.packer_username}\\\" set PasswordExpires=False & net localgroup administrators ${var.packer_username} /add & powershell Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 & powershell Start-Service sshd & powershell Set-Service -Name sshd -StartupType 'Automatic' & powershell New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22 & powershell.exe -NoProfile -ExecutionPolicy Bypass -Command \\\"Set-ExecutionPolicy -ExecutionPolicy bypass -Force\\\"\"\n  }\n}\n\nbuild {\n  sources = [\"sources.googlecompute.windows-ssh-example\"]\n\n  provisioner \"powershell\" {\n    script = \"../scripts/install-features.ps1\"\n    elevated_user     = var.packer_username\n    elevated_password = var.packer_user_password\n  }\n}\n```\n\n#### Windows over WinSSH - Ansible Provisioner\n\nThe following uses Windows SSH as backend communicator\n[https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse](https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse)\nwith a private key.\n\n* The `sysprep-specialize-script-cmd` creates the `packer_user` and adds it to the local administrators group and configures the ssh key, firewall rule and required permissions.\n\n```\nsource \"googlecompute\" \"windows-ssh-ansible\" {\n  project_id              = var.project_id\n  source_image            = \"windows-server-2019-dc-v20200813\"\n  zone                    = \"us-east4-a\"\n  disk_size               = 50\n  machine_type            = \"n1-standard-8\"\n  communicator            = \"ssh\"\n  ssh_username            = var.packer_username\n  ssh_private_key_file    = var.ssh_key_file_path\n  ssh_timeout             = \"1h\"\n  \n  metadata = {\n    sysprep-specialize-script-cmd = \"net user ${var.packer_username} \\\"${var.packer_user_password}\\\" /add /y & wmic UserAccount where Name=\\\"${var.packer_username}\\\" set PasswordExpires=False & net localgroup administrators ${var.packer_username} /add & powershell Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 & echo ${var.ssh_pub_key} > C:\\\\ProgramData\\\\ssh\\\\administrators_authorized_keys & icacls.exe \\\"C:\\\\ProgramData\\\\ssh\\\\administrators_authorized_keys\\\" /inheritance:r /grant \\\"Administrators:F\\\" /grant \\\"SYSTEM:F\\\" & powershell New-ItemProperty -Path \\\"HKLM:\\\\SOFTWARE\\\\OpenSSH\\\" -Name DefaultShell -Value \\\"C:\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe\\\" -PropertyType String -Force  & powershell Start-Service sshd & powershell Set-Service -Name sshd -StartupType 'Automatic' & powershell New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22 & powershell.exe -NoProfile -ExecutionPolicy Bypass -Command \\\"Set-ExecutionPolicy -ExecutionPolicy bypass -Force\\\"\"\n  }\n  account_file = var.account_file_path\n\n}\n\nbuild {\n  sources = [\"sources.googlecompute.windows-ssh-ansible\"]\n\n  provisioner \"ansible\" {\n    playbook_file           = \"./playbooks/playbook.yml\"\n    use_proxy               = false\n    ansible_ssh_extra_args  = [\"-o StrictHostKeyChecking=no -o IdentitiesOnly=yes\"]\n    ssh_authorized_key_file = \"var.public_key_path\"\n    extra_arguments = [\"-e\", \"win_packages=${var.win_packages}\",\n      \"-e\",\n      \"ansible_shell_type=powershell\",\n      \"-e\",\n      \"ansible_shell_executable=None\",\n      \"-e\",\n      \"ansible_shell_executable=None\"\n    ]\n    user = var.packer_username\n  }\n\n}\n\n```\n\n#### Nested Hypervisor Example\n\nThis is an example of using the `image_licenses` configuration option to create\na GCE image that has nested virtualization enabled. See [Enabling Nested\nVirtualization for VM\nInstances](https://cloud.google.com/compute/docs/instances/enable-nested-virtualization-vm-instances)\nfor details.\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"googlecompute\",\n      \"project_id\": \"my project\",\n      \"source_image_family\": \"centos-7\",\n      \"ssh_username\": \"packer\",\n      \"zone\": \"us-central1-a\",\n      \"image_licenses\": [\"projects/vm-options/global/licenses/enable-vmx\"]\n    }\n  ]\n}\n```\n\n**HCL2**\n\n```hcl\nsource \"googlecompute\" \"basic-example\" {\n  project_id = \"my project\"\n  source_image_family = \"centos-7\"\n  ssh_username = \"packer\"\n  zone = \"us-central1-a\"\n  image_licenses = [\"projects/vm-options/global/licenses/enable-vmx\"]\n}\n\nbuild {\n  sources = [\"sources.googlecompute.basic-example\"]\n}\n```\n\n\n#### Shared VPC Example\n\nThis is an example of using the `network_project_id` configuration option to create\na GCE instance in a Shared VPC Network. See [Creating a GCE Instance using Shared\nVPC](https://cloud.google.com/vpc/docs/provisioning-shared-vpc#creating_an_instance_in_a_shared_subnet)\nfor details. The user/service account running Packer must have `Compute Network User` role on\nthe Shared VPC Host Project to create the instance in addition to the other roles mentioned in the\nRunning on Google Cloud section.\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"googlecompute\",\n      \"project_id\": \"my project\",\n      \"subnetwork\": \"default\",\n      \"source_image_family\": \"centos-7\",\n      \"network_project_id\": \"SHARED_VPC_PROJECT\",\n      \"ssh_username\": \"packer\",\n      \"zone\": \"us-central1-a\",\n      \"image_licenses\": [\"projects/vm-options/global/licenses/enable-vmx\"]\n    }\n  ]\n}\n```\n\n**HCL2**\n\n```hcl\nsource \"googlecompute\" \"sharedvpc-example\" {\n  project_id = \"my project\"\n  source_image_family = \"centos-7\"\n  subnetwork = \"default\"\n  network_project_id = \"SHARED_VPC_PROJECT\"\n  ssh_username = \"packer\"\n  zone = \"us-central1-a\"\n  image_licenses = [\"projects/vm-options/global/licenses/enable-vmx\"]\n}\n\nbuild {\n  sources = [\"sources.googlecompute.sharedvpc-example\"]\n}\n```\n\n\n#### Separate Image Project Example\n\nThis is an example of using the `image_project_id` configuration option to create\nthe generated image in a different GCP project than the one used to create the virtual machine. Make sure that Packer has permission in the target project to manage images, the `Compute Storage Admin` role will grant the desired permissions.\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"googlecompute\",\n      \"project_id\": \"my project\",\n      \"image_project_id\": \"my image target project\",\n      \"source_image\": \"debian-9-stretch-v20200805\",\n      \"ssh_username\": \"packer\",\n      \"zone\": \"us-central1-a\"\n    }\n  ]\n}\n```\n\n**HCL2**\n\n```hcl\nsource \"googlecompute\" \"basic-example\" {\n  project_id = \"my project\"\n  image_project_id = \"my image target project\"\n  source_image = \"debian-9-stretch-v20200805\"\n  ssh_username = \"packer\"\n  zone = \"us-central1-a\"\n}\n\nbuild {\n  sources = [\"sources.googlecompute.basic-example\"]\n}\n```\n","created_at":"2023-11-27T19:16:54.483Z","updated_at":"2024-02-05T16:03:42.578Z","components":[{"id":"86be1a73-6062-415d-b741-0d5ebfad8cfa","integration_release_id":"76ef66e5-9c2d-4b5d-9823-d9019727c2d8","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `googlecompute`\nArtifact BuilderId: `packer.googlecompute`\n\nThe `googlecompute` Packer builder is able to create\n[images](https://developers.google.com/compute/docs/images) for use with\n[Google Compute Engine](https://cloud.google.com/products/compute-engine) (GCE)\nbased on existing images.\n\nIt is possible to build images from scratch, but not with the `googlecompute`\nPacker builder. The process is recommended only for advanced users, please see\n[Building GCE Images from Scratch](https://cloud.google.com/compute/docs/tutorials/building-images)\nand the [Google Compute Import\nPost-Processor](/packer/integrations/hashicorp/googlecompute/latest/components/post-processor/googlecompute-import) for more\ninformation.\n\n## Authentication\n\nTo authenticate with GCE, this builder supports everything the plugin does.\nTo get more information on this, refer to the plugin's description page, under\nthe [authentication](/packer/integrations/hashicorp/googlecompute#authentication) section.\n\n## Configuration Reference\n\nConfiguration options are organized below into two categories: required and\noptional. Within each category, the available options are alphabetized and\ndescribed.\n\nIn addition to the options listed here, a\n[communicator](/packer/docs/templates/legacy_json_templates/communicator) can be configured for this\nbuilder.\n\n### Required:\n\n<!-- Code generated from the comments of the Config struct in builder/googlecompute/config.go; DO NOT EDIT MANUALLY -->\n\n- `project_id` (string) - The project ID that will be used to launch instances and store images.\n\n- `source_image` (string) - The source image to use to create the new image from. You can also\n  specify source_image_family instead. If both source_image and\n  source_image_family are specified, source_image takes precedence.\n  Example: \"debian-8-jessie-v20161027\"\n\n- `source_image_family` (string) - The source image family to use to create the new image from. The image\n  family always returns its latest image that is not deprecated. Example:\n  \"debian-8\".\n\n- `zone` (string) - The zone in which to launch the instance used to create the image.\n  Example: \"us-central1-a\"\n\n<!-- End of code generated from the comments of the Config struct in builder/googlecompute/config.go; -->\n\n\n### Optional:\n\n<!-- Code generated from the comments of the Config struct in builder/googlecompute/config.go; DO NOT EDIT MANUALLY -->\n\n- `accelerator_type` (string) - Full or partial URL of the guest accelerator type. GPU accelerators can\n  only be used with `\"on_host_maintenance\": \"TERMINATE\"` option set.\n  Example:\n  `\"projects/project_id/zones/europe-west1-b/acceleratorTypes/nvidia-tesla-k80\"`\n\n- `accelerator_count` (int64) - Number of guest accelerator cards to add to the launched instance.\n\n- `address` (string) - The name of a pre-allocated static external IP address. Note, must be\n  the name and not the actual IP address.\n\n- `disable_default_service_account` (bool) - If true, the default service account will not be used if\n  service_account_email is not specified. Set this value to true and omit\n  service_account_email to provision a VM with no service account.\n\n- `disk_name` (string) - The name of the disk, if unset the instance name will be used.\n\n- `disk_size` (int64) - The size of the disk in GB. This defaults to 20, which is 20GB.\n\n- `disk_type` (string) - Type of disk used to back your instance, like pd-ssd or pd-standard.\n  Defaults to pd-standard.\n\n- `disk_encryption_key` (\\*common.CustomerEncryptionKey) - Disk encryption key to apply to the created boot disk. Possible values:\n  * kmsKeyName -  The name of the encryption key that is stored in Google Cloud KMS.\n  * RawKey: - A 256-bit customer-supplied encryption key, encodes in RFC 4648 base64.\n  \n  examples:\n  \n   ```json\n   {\n      \"kmsKeyName\": \"projects/${project}/locations/${region}/keyRings/computeEngine/cryptoKeys/computeEngine/cryptoKeyVersions/4\"\n   }\n   ```\n  \n   ```hcl\n    disk_encryption_key {\n      kmsKeyName = \"projects/${var.project}/locations/${var.region}/keyRings/computeEngine/cryptoKeys/computeEngine/cryptoKeyVersions/4\"\n    }\n   ```\n  \n  Refer to the [Customer Encryption Key](#customer-encryption-key) section for more information on the contents of this block.\n\n- `enable_nested_virtualization` (bool) - Create a instance with enabling nested virtualization.\n\n- `enable_secure_boot` (bool) - Create a Shielded VM image with Secure Boot enabled. It helps ensure that\n  the system only runs authentic software by verifying the digital signature\n  of all boot components, and halting the boot process if signature verification\n  fails. [Details](https://cloud.google.com/security/shielded-cloud/shielded-vm)\n\n- `enable_vtpm` (bool) - Create a Shielded VM image with virtual trusted platform module\n  Measured Boot enabled. A vTPM is a virtualized trusted platform module,\n  which is a specialized computer chip you can use to protect objects,\n  like keys and certificates, that you use to authenticate access to your\n  system. [Details](https://cloud.google.com/security/shielded-cloud/shielded-vm)\n\n- `enable_integrity_monitoring` (bool) - Integrity monitoring helps you understand and make decisions about the\n  state of your VM instances. Note: integrity monitoring relies on having\n  vTPM enabled. [Details](https://cloud.google.com/security/shielded-cloud/shielded-vm)\n\n- `disk_attachment` ([]common.BlockDevice) - Extra disks to attach to the instance that will build the final image.\n  \n  You may reference an existing external persistent disk, or you can configure\n  a set of disks to be created before the instance is created, and will\n  be deleted upon build completion.\n  \n  Scratch (ephemeral) SSDs are always created at launch, and deleted when the\n  instance is torn-down.\n  \n  Note: local SSDs are not supported on all machine types, refer to the\n  [docs](https://cloud.google.com/compute/docs/disks/local-ssd#choose_number_local_ssds)\n  for more information on that.\n  \n  Refer to the [Extra Disk Attachments](#extra-disk-attachments) section for\n  more information on this configuration type.\n\n- `skip_create_image` (bool) - Skip creating the image. Useful for setting to `true` during a build test stage. Defaults to `false`.\n\n- `image_name` (string) - The unique name of the resulting image. Defaults to\n  `packer-{{timestamp}}`.\n\n- `image_description` (string) - The description of the resulting image.\n\n- `image_encryption_key` (\\*common.CustomerEncryptionKey) - Image encryption key to apply to the created image. Possible values:\n  * kmsKeyName -  The name of the encryption key that is stored in Google Cloud KMS.\n  * RawKey: - A 256-bit customer-supplied encryption key, encodes in RFC 4648 base64.\n  \n  examples:\n  \n   ```json\n   {\n      \"kmsKeyName\": \"projects/${project}/locations/${region}/keyRings/computeEngine/cryptoKeys/computeEngine/cryptoKeyVersions/4\"\n   }\n   ```\n  \n   ```hcl\n    image_encryption_key {\n      kmsKeyName = \"projects/${var.project}/locations/${var.region}/keyRings/computeEngine/cryptoKeys/computeEngine/cryptoKeyVersions/4\"\n    }\n   ```\n  \n  Refer to the [Customer Encryption Key](#customer-encryption-key) section for more information on the contents of this block.\n\n- `image_family` (string) - The name of the image family to which the resulting image belongs. You\n  can create disks by specifying an image family instead of a specific\n  image name. The image family always returns its latest image that is not\n  deprecated.\n\n- `image_labels` (map[string]string) - Key/value pair labels to apply to the created image.\n\n- `image_licenses` ([]string) - Licenses to apply to the created image.\n\n- `image_guest_os_features` ([]string) - Guest OS features to apply to the created image.\n\n- `image_project_id` (string) - The project ID to push the build image into. Defaults to project_id.\n\n- `image_storage_locations` ([]string) - Storage location, either regional or multi-regional, where snapshot\n  content is to be stored and only accepts 1 value. Always defaults to a nearby regional or multi-regional\n  location.\n  \n  multi-regional example:\n  \n   ```json\n   {\n      \"image_storage_locations\": [\"us\"]\n   }\n   ```\n  regional example:\n  \n   ```json\n   {\n      \"image_storage_locations\": [\"us-east1\"]\n   }\n   ```\n\n- `instance_name` (string) - A name to give the launched instance. Beware that this must be unique.\n  Defaults to `packer-{{uuid}}`.\n\n- `labels` (map[string]string) - Key/value pair labels to apply to the launched instance.\n\n- `machine_type` (string) - The machine type. Defaults to \"e2-standard-2\".\n\n- `metadata` (map[string]string) - Metadata applied to the launched instance.\n  All metadata configuration values are expected to be of type string.\n  Google metadata options that take a value of `TRUE` or `FALSE` should be\n  set as a string (i.e  `\"TRUE\"` `\"FALSE\"` or `\"true\"` `\"false\"`).\n\n- `metadata_files` (map[string]string) - Metadata applied to the launched instance. Values are files.\n\n- `min_cpu_platform` (string) - A Minimum CPU Platform for VM Instance. Availability and default CPU\n  platforms vary across zones, based on the hardware available in each GCP\n  zone.\n  [Details](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)\n\n- `network` (string) - The Google Compute network id or URL to use for the launched instance.\n  Defaults to \"default\". If the value is not a URL, it will be\n  interpolated to\n  `projects/((network_project_id))/global/networks/((network))`. This value\n  is not required if a subnet is specified.\n\n- `network_project_id` (string) - The project ID for the network and subnetwork to use for launched\n  instance. Defaults to project_id.\n\n- `omit_external_ip` (bool) - If true, the instance will not have an external IP. use_internal_ip must\n  be true if this property is true.\n\n- `on_host_maintenance` (string) - Sets Host Maintenance Option. Valid choices are `MIGRATE` and\n  `TERMINATE`. Please see [GCE Instance Scheduling\n  Options](https://cloud.google.com/compute/docs/instances/setting-instance-scheduling-options),\n  as not all machine\\_types support `MIGRATE` (i.e. machines with GPUs).\n  If preemptible is true this can only be `TERMINATE`. If preemptible is\n  false, it defaults to `MIGRATE`\n\n- `preemptible` (bool) - If true, launch a preemptible instance.\n\n- `node_affinity` ([]common.NodeAffinity) - Sets a node affinity label for the launched instance (eg. for sole tenancy).\n  Please see [Provisioning VMs on\n  sole-tenant nodes](https://cloud.google.com/compute/docs/nodes/provisioning-sole-tenant-vms)\n  for more information.\n  \n  ```hcl\n    key = \"workload\"\n    operator = \"IN\"\n    values = [\"packer\"]\n  ```\n  \n  Refer to the [Node Affinity](#node-affinities) for more information on affinities.\n\n- `state_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for instance state changes. Defaults to \"5m\".\n\n- `region` (string) - The region in which to launch the instance. Defaults to the region\n  hosting the specified zone.\n\n- `scopes` ([]string) - The service account scopes for launched\n  instance. Defaults to:\n  \n  ```json\n  [\n    \"https://www.googleapis.com/auth/userinfo.email\",\n    \"https://www.googleapis.com/auth/compute\",\n    \"https://www.googleapis.com/auth/devstorage.full_control\"\n  ]\n  ```\n\n- `service_account_email` (string) - The service account to be used for launched instance. Defaults to the\n  project's default service account unless disable_default_service_account\n  is true.\n\n- `source_image_project_id` ([]string) - A list of project IDs to search for the source image. Packer will search the first\n  project ID in the list first, and fall back to the next in the list, until it finds the source image.\n\n- `startup_script_file` (string) - The path to a startup script to run on the launched instance from which the image will\n  be made. When set, the contents of the startup script file will be added to the instance metadata\n  under the `\"startup_script\"` metadata property. See [Providing startup script contents directly](https://cloud.google.com/compute/docs/startupscript#providing_startup_script_contents_directly) for more details.\n  \n  When using `startup_script_file` the following rules apply:\n  - The contents of the script file will overwrite the value of the `\"startup_script\"` metadata property at runtime.\n  - The contents of the script file will be wrapped in Packer's startup script wrapper, unless `wrap_startup_script` is disabled. See `wrap_startup_script` for more details.\n  - Not supported by Windows instances. See [Startup Scripts for Windows](https://cloud.google.com/compute/docs/startupscript#providing_a_startup_script_for_windows_instances) for more details.\n\n- `windows_password_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for windows password to be retrieved. Defaults to \"3m\".\n\n- `wrap_startup_script` (boolean) - For backwards compatibility this option defaults to `\"true\"` in the future it will default to `\"false\"`.\n  If \"true\", the contents of `startup_script_file` or `\"startup_script\"` in the instance metadata\n  is wrapped in a Packer specific script that tracks the execution and completion of the provided\n  startup script. The wrapper ensures that the builder will not continue until the startup script has been executed.\n  - The use of the wrapped script file requires that the user or service account\n  running the build has the compute.instance.Metadata role.\n\n- `subnetwork` (string) - The Google Compute subnetwork id or URL to use for the launched\n  instance. Only required if the network has been created with custom\n  subnetting. Note, the region of the subnetwork must match the region or\n  zone in which the VM is launched. If the value is not a URL, it will be\n  interpolated to\n  `projects/((network_project_id))/regions/((region))/subnetworks/((subnetwork))`\n\n- `tags` ([]string) - Assign network tags to apply firewall rules to VM instance.\n\n- `use_internal_ip` (bool) - If true, use the instance's internal IP instead of its external IP\n  during building.\n\n- `use_os_login` (bool) - If true, OSLogin will be used to manage SSH access to the compute instance by\n  dynamically importing a temporary SSH key to the Google account's login profile,\n  and setting the `enable-oslogin` to `TRUE` in the instance metadata.\n  Optionally, `use_os_login` can be used with an existing `ssh_username` and `ssh_private_key_file`\n  if a SSH key has already been added to the Google account's login profile - See [Adding SSH Keys](https://cloud.google.com/compute/docs/instances/managing-instance-access#add_oslogin_keys).\n  \n  SSH keys can be added to an individual user account\n  \n  ```shell-session\n  $ gcloud compute os-login ssh-keys add --key-file=/home/user/.ssh/my-key.pub\n  \n  $ gcloud compute os-login describe-profile\n  PosixAccounts:\n  - accountId: <project-id>\n   gid: '34567890754'\n   homeDirectory: /home/user_example_com\n   ...\n   primary: true\n   uid: '2504818925'\n   username: /home/user_example_com\n  sshPublicKeys:\n   000000000000000000000000000000000000000000000000000000000000000a:\n     fingerprint: 000000000000000000000000000000000000000000000000000000000000000a\n  ```\n  \n  Or SSH keys can be added to an associated service account\n  ```shell-session\n  $ gcloud auth activate-service-account --key-file=<path to service account credentials file (e.g account.json)>\n  $ gcloud compute os-login ssh-keys add --key-file=/home/user/.ssh/my-key.pub\n  \n  $ gcloud compute os-login describe-profile\n  PosixAccounts:\n  - accountId: <project-id>\n   gid: '34567890754'\n   homeDirectory: /home/sa_000000000000000000000\n   ...\n   primary: true\n   uid: '2504818925'\n   username: sa_000000000000000000000\n  sshPublicKeys:\n   000000000000000000000000000000000000000000000000000000000000000a:\n     fingerprint: 000000000000000000000000000000000000000000000000000000000000000a\n  ```\n\n- `wait_to_add_ssh_keys` (duration string | ex: \"1h5m2s\") - The time to wait between the creation of the instance used to create the image,\n  and the addition of SSH configuration, including SSH keys, to that instance.\n  The delay is intended to protect packer from anything in the instance boot\n  sequence that has potential to disrupt the creation of SSH configuration\n  (e.g. SSH user creation, SSH key creation) on the instance.\n  Note: All other instance metadata, including startup scripts, are still added to the instance\n  during it's creation.\n  Example value: `5m`.\n\n<!-- End of code generated from the comments of the Config struct in builder/googlecompute/config.go; -->\n\n\n<!-- Code generated from the comments of the IAPConfig struct in builder/googlecompute/step_start_tunnel.go; DO NOT EDIT MANUALLY -->\n\n- `use_iap` (bool) - Whether to use an IAP proxy.\n  Prerequisites and limitations for using IAP:\n  - You must manually enable the IAP API in the Google Cloud console.\n  - You must have the gcloud sdk installed on the computer running Packer.\n  - If you use a service account, you must add it to project level IAP permissions\n    in https://console.cloud.google.com/security/iap. To do so, click\n    \"project\" > \"SSH and TCP resources\" > \"All Tunnel Resources\" >\n    \"Add Member\". Then add your service account and choose the role\n    \"IAP-secured Tunnel User\" and add any conditions you may care about.\n\n- `iap_localhost_port` (int) - Which port to connect the local end of the IAM localhost proxy to. If\n  left blank, Packer will choose a port for you from available ports.\n\n- `iap_hashbang` (string) - What \"hashbang\" to use to invoke script that sets up gcloud.\n  Default: \"/bin/sh\"\n\n- `iap_ext` (string) - What file extension to use for script that sets up gcloud.\n  Default: \".sh\"\n\n- `iap_tunnel_launch_wait` (int) - How long to wait, in seconds, before assuming a tunnel launch was\n  successful. Defaults to 30 seconds for SSH or 40 seconds for WinRM.\n\n<!-- End of code generated from the comments of the IAPConfig struct in builder/googlecompute/step_start_tunnel.go; -->\n\n\n### Startup Scripts\n\nStartup scripts can be a powerful tool for configuring the instance from which\nthe image is made. The builder will wait for a startup script to terminate. A\nstartup script can be provided via the `startup_script_file` or\n`startup-script` instance creation `metadata` field. Therefore, the build time\nwill vary depending on the duration of the startup script. If\n`startup_script_file` is set, the `startup-script` `metadata` field will be\noverwritten. In other words, `startup_script_file` takes precedence.\n\nThe builder does check for a pass/fail/error signal from the startup\nscript by tracking the `startup-script-status` metadata. Packer will check if this key\nis set to done and if it not set to done before the timeout, Packer will fail the build.\n\n### Windows\nA Windows startup script can only be provided as a metadata field option. The\nbuilder will _not_ wait for a Windows startup script to terminate. You have\nto ensure that it finishes before the instance shuts down. For a list of\nsupported startup script keys refer to [Using startup scripts on Windows](https://cloud.google.com/compute/docs/instances/startup-scripts/windows)\n\n```hcl\nmetadata = {\n  sysprep-specialize-script-cmd = \"...\"\n}\n```\n\n### Logging\n\nStartup script logs can be copied to a Google Cloud Storage (GCS) location\nspecified via the `startup-script-log-dest` instance creation `metadata` field.\nThe GCS location must be writeable by the service account of the instance that Packer created.\n\n### Communicator Configuration\n\n#### Optional:\n\n<!-- Code generated from the comments of the Config struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `communicator` (string) - Packer currently supports three kinds of communicators:\n  \n  -   `none` - No communicator will be used. If this is set, most\n      provisioners also can't be used.\n  \n  -   `ssh` - An SSH connection will be established to the machine. This\n      is usually the default.\n  \n  -   `winrm` - A WinRM connection will be established.\n  \n  In addition to the above, some builders have custom communicators they\n  can use. For example, the Docker builder has a \"docker\" communicator\n  that uses `docker exec` and `docker cp` to execute scripts and copy\n  files.\n\n- `pause_before_connecting` (duration string | ex: \"1h5m2s\") - We recommend that you enable SSH or WinRM as the very last step in your\n  guest's bootstrap script, but sometimes you may have a race condition\n  where you need Packer to wait before attempting to connect to your\n  guest.\n  \n  If you end up in this situation, you can use the template option\n  `pause_before_connecting`. By default, there is no pause. For example if\n  you set `pause_before_connecting` to `10m` Packer will check whether it\n  can connect, as normal. But once a connection attempt is successful, it\n  will disconnect and then wait 10 minutes before connecting to the guest\n  and beginning provisioning.\n\n<!-- End of code generated from the comments of the Config struct in communicator/config.go; -->\n\n\n<!-- Code generated from the comments of the SSH struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `ssh_host` (string) - The address to SSH to. This usually is automatically configured by the\n  builder.\n\n- `ssh_port` (int) - The port to connect to SSH. This defaults to `22`.\n\n- `ssh_username` (string) - The username to connect to SSH with. Required if using SSH.\n\n- `ssh_password` (string) - A plaintext password to use to authenticate with SSH.\n\n- `ssh_ciphers` ([]string) - This overrides the value of ciphers supported by default by Golang.\n  The default value is [\n    \"aes128-gcm@openssh.com\",\n    \"chacha20-poly1305@openssh.com\",\n    \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n  ]\n  \n  Valid options for ciphers include:\n  \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"aes128-gcm@openssh.com\",\n  \"chacha20-poly1305@openssh.com\",\n  \"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",\n\n- `ssh_clear_authorized_keys` (bool) - If true, Packer will attempt to remove its temporary key from\n  `~/.ssh/authorized_keys` and `/root/.ssh/authorized_keys`. This is a\n  mostly cosmetic option, since Packer will delete the temporary private\n  key from the host system regardless of whether this is set to true\n  (unless the user has set the `-debug` flag). Defaults to \"false\";\n  currently only works on guests with `sed` installed.\n\n- `ssh_key_exchange_algorithms` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\n  supported by default by Golang. Acceptable values include:\n  \"curve25519-sha256@libssh.org\", \"ecdh-sha2-nistp256\",\n  \"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n  \"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".\n\n- `ssh_certificate_file` (string) - Path to user certificate used to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_pty` (bool) - If `true`, a PTY will be requested for the SSH connection. This defaults\n  to `false`.\n\n- `ssh_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\n  determine when the machine has booted so this is usually quite long.\n  Example value: `10m`.\n  This defaults to `5m`, unless `ssh_handshake_attempts` is set.\n\n- `ssh_disable_agent_forwarding` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `false`.\n\n- `ssh_handshake_attempts` (int) - The number of handshakes to attempt with SSH once it can connect.\n  This defaults to `10`, unless a `ssh_timeout` is set.\n\n- `ssh_bastion_host` (string) - A bastion host to use for the actual SSH connection.\n\n- `ssh_bastion_port` (int) - The port of the bastion host. Defaults to `22`.\n\n- `ssh_bastion_agent_auth` (bool) - If `true`, the local SSH agent will be used to authenticate with the\n  bastion host. Defaults to `false`.\n\n- `ssh_bastion_username` (string) - The username to connect to the bastion host.\n\n- `ssh_bastion_password` (string) - The password to use to authenticate with the bastion host.\n\n- `ssh_bastion_interactive` (bool) - If `true`, the keyboard-interactive used to authenticate with bastion host.\n\n- `ssh_bastion_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with the\n  bastion host. The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_bastion_certificate_file` (string) - Path to user certificate used to authenticate with bastion host.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_file_transfer_method` (string) - `scp` or `sftp` - How to transfer files, Secure copy (default) or SSH\n  File Transfer Protocol.\n  \n  **NOTE**: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n  (the default protocol for copying data) returns a a non-zero error code since the MOTW\n  cannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\n  with SFTP instead `ssh_file_transfer_protocol = \"sftp\"`.\n\n- `ssh_proxy_host` (string) - A SOCKS proxy host to use for SSH connection\n\n- `ssh_proxy_port` (int) - A port of the SOCKS proxy. Defaults to `1080`.\n\n- `ssh_proxy_username` (string) - The optional username to authenticate with the proxy server.\n\n- `ssh_proxy_password` (string) - The optional password to use to authenticate with the proxy server.\n\n- `ssh_keep_alive_interval` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\n  value (`-1s`) to disable. Example value: `10s`. Defaults to `5s`.\n\n- `ssh_read_write_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\n  useful if, for example, packer hangs on a connection after a reboot.\n  Example: `5m`. Disabled by default.\n\n- `ssh_remote_tunnels` ([]string) - \n\n- `ssh_local_tunnels` ([]string) - \n\n<!-- End of code generated from the comments of the SSH struct in communicator/config.go; -->\n\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n\n### Temporary SSH keypair\n\n<!-- Code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\nWhen no ssh credentials are specified, Packer will generate a temporary SSH\nkeypair for the instance. You can change the algorithm type and bits\nsettings.\n\n<!-- End of code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; -->\n\n\n#### Optional:\n\n<!-- Code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `temporary_key_pair_type` (string) - `dsa` | `ecdsa` | `ed25519` | `rsa` ( the default )\n  \n  Specifies the type of key to create. The possible values are 'dsa',\n  'ecdsa', 'ed25519', or 'rsa'.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure, please\n  consider other alternatives like RSA or ED25519.\n\n- `temporary_key_pair_bits` (int) - Specifies the number of bits in the key to create. For RSA keys, the\n  minimum size is 1024 bits and the default is 4096 bits. Generally, 3072\n  bits is considered sufficient. DSA keys must be exactly 1024 bits as\n  specified by FIPS 186-2. For ECDSA keys, bits determines the key length\n  by selecting from one of three elliptic curve sizes: 256, 384 or 521\n  bits. Attempting to use bit lengths other than these three values for\n  ECDSA keys will fail. Ed25519 keys have a fixed length and bits will be\n  ignored.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure as specified\n  by FIPS 186-5, please consider other alternatives like RSA or ED25519.\n\n<!-- End of code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; -->\n\n\n### Gotchas\n\nCentOS and recent Debian images have root ssh access disabled by default. Set\n`ssh_username` to any user, which will be created by packer with sudo access.\n\nThe machine type must have a scratch disk, which means you can't use an\n`f1-micro` or `g1-small` to build images.\n\n## Extra disk attachments\n\n<!-- Code generated from the comments of the BlockDevice struct in lib/common/block_device.go; DO NOT EDIT MANUALLY -->\n\nBlockDevice is a block device attachement/creation to an instance when building an image.\n\n<!-- End of code generated from the comments of the BlockDevice struct in lib/common/block_device.go; -->\n\n\nThese can be defined using the [disk_attachment](#disk_attachment) block in the configuration.\n\nNote that this is an array, and therefore in HCL2 can be defined as multiple blocks, each\none corresponding to a disk that will be attached to the instance you are booting.\n\nExample:\n\n```hcl\nsource \"googlecompute\" \"example\" {\n  # Add whichever is necessary to build the image\n\n  disk_attachment {\n    volume_type     = \"scratch\"\n    volume_size     = 375\n  }\n\n  disk_attachment {\n    volume_type     = \"pd-standard\"\n    volume_size     = 25\n    interface_type  = \"SCSI\"\n  }\n}\n```\n\n### Required:\n\n<!-- Code generated from the comments of the BlockDevice struct in lib/common/block_device.go; DO NOT EDIT MANUALLY -->\n\n- `volume_size` (int) - Size of the volume to request, in gigabytes.\n  \n  The size specified must be in range of the sizes for the chosen volume type.\n\n- `volume_type` (BlockDeviceType) - The volume type is the type of storage to reserve and attach to the instance being provisioned.\n  \n  The following values are supported by this builder:\n  * scratch: local SSD data, always 375 GiB (default)\n  * pd_standard: persistent, HDD-backed disk\n  * pd_balanced: persistent, SSD-backed disk\n  * pd_ssd: persistent, SSD-backed disk, with extra performance guarantees\n  * pd_extreme: persistent, fastest SSD-backed disk, with custom IOPS\n  \n  For details on the different types, refer to: https://cloud.google.com/compute/docs/disks#disk-types\n\n<!-- End of code generated from the comments of the BlockDevice struct in lib/common/block_device.go; -->\n\n\n### Optional:\n\n<!-- Code generated from the comments of the BlockDevice struct in lib/common/block_device.go; DO NOT EDIT MANUALLY -->\n\n- `attachment_mode` (string) - How to attach the volume to the instance\n  \n  Can be either READ_ONLY or READ_WRITE (default).\n\n- `create_image` (bool) - If true, an image will be created for this disk, instead of the boot disk.\n  \n  This only applies to non-scratch disks, and can only be specified on one disk at a\n  time.\n\n- `device_name` (string) - The device name as exposed to the OS in the /dev/disk/by-id/google-* directory\n  \n  If unspecified, the disk will have a default name in the form\n  persistent-disk-x with 'x' being a number assigned by GCE\n  \n  This field only applies to persistent disks, local SSDs will always\n  be exposed as /dev/disk/by-id/google-local-nvme-ssd-x.\n\n- `disk_encryption_key` (CustomerEncryptionKey) - Disk encryption key to apply to the requested disk.\n  \n  Possible values:\n  * kmsKeyName -  The name of the encryption key that is stored in Google Cloud KMS.\n  * RawKey: - A 256-bit customer-supplied encryption key, encodes in RFC 4648 base64.\n  \n  Refer to the [Customer Encryption Key](#customer-encryption-key) section for more information on the contents of this block.\n\n- `disk_name` (string) - Name of the disk to create.\n  This only applies to non-scratch disks. If the disk is persistent, and\n  not specified, Packer will generate a unique name for the disk.\n  \n  The name must be 1-63 characters long and comply to the regexp\n  '[a-z]([-a-z0-9]*[a-z0-9])?'\n\n- `interface_type` (string) - The interface to use for attaching the disk.\n  Can be either NVME or SCSI. Defaults to SCSI.\n  \n  The available options depend on the type of disk, SEE: https://cloud.google.com/compute/docs/disks/persistent-disks#choose_an_interface\n\n- `iops` (int) - The requested IOPS for the disk.\n  \n  This is only available for pd_extreme disks.\n\n- `keep_device` (bool) - Keep the device in the created disks after the instance is terminated.\n  By default, the builder will remove the disks at the end of the build.\n  \n  This cannot be used with 'scratch' volumes.\n\n- `replica_zones` ([]string) - The list of extra zones to replicate the disk into\n  \n  The zone in which the instance is created will automatically be\n  added to the zones in which the disk is replicated.\n\n- `source_volume` (string) - The URI of the volume to attach\n  \n  If this is specified, it won't be deleted after the instance is shut-down.\n\n- `_` (string) - Zone is the zone in which to create the disk in.\n  \n  It is not exposed since the parent config already specifies it\n  and it will be set for the block device when preparing it.\n\n<!-- End of code generated from the comments of the BlockDevice struct in lib/common/block_device.go; -->\n\n\n## Customer Encryption Key\n\nSpecifying a custom key allows you to use your own encryption keys to encrypt the data\nof the image you are creating.\n\nNote: you will need to reuse the same key later on when reusing the image.\n\n<!-- Code generated from the comments of the CustomerEncryptionKey struct in lib/common/client_keys.go; DO NOT EDIT MANUALLY -->\n\n- `kmsKeyName` (string) - KmsKeyName: The name of the encryption key that is stored in Google\n  Cloud KMS.\n\n- `rawKey` (string) - RawKey: Specifies a 256-bit customer-supplied encryption key, encoded\n  in RFC 4648 base64 to either encrypt or decrypt this resource.\n\n<!-- End of code generated from the comments of the CustomerEncryptionKey struct in lib/common/client_keys.go; -->\n\n\n## Node Affinities\n\nNode affinity configuration allows you to restrict the nodes on which to run the\ninstance that Packer will build the image from.\nThis requires configuring [sole-tenant node groups](https://cloud.google.com/compute/docs/nodes/provisioning-sole-tenant-vms) first.\n\n<!-- Code generated from the comments of the NodeAffinity struct in lib/common/affinities.go; DO NOT EDIT MANUALLY -->\n\n- `key` (string) - Key: Corresponds to the label key of Node resource.\n\n- `operator` (string) - Operator: Defines the operation of node selection. Valid operators are IN for affinity and\n  NOT_IN for anti-affinity.\n\n- `values` ([]string) - Values: Corresponds to the label values of Node resource.\n\n<!-- End of code generated from the comments of the NodeAffinity struct in lib/common/affinities.go; -->\n","created_at":"2023-11-27T19:16:55.821Z","updated_at":"2024-02-05T16:03:44.005Z","name":"Google Cloud Platform","slug":"googlecompute","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},{"id":"f5cce882-8401-4157-a93e-0d030486ae76","integration_release_id":"76ef66e5-9c2d-4b5d-9823-d9019727c2d8","component_id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","readme":"Type: `googlecompute-import`\nArtifact BuilderId: `packer.post-processor.googlecompute-import`\n\nThe Google Compute Image Import post-processor takes a compressed raw disk\nimage and imports it to a GCE image available to Google Compute Engine.\n\n~> This post-processor is for advanced users. Please ensure you read the\n[GCE import documentation](https://cloud.google.com/compute/docs/images/import-existing-image)\nbefore using this post-processor.\n\n## How Does it Work?\n\nThe import process operates by uploading a temporary copy of the compressed raw\ndisk image to a GCS bucket, and calling an import task in GCP on the raw disk\nfile. Once completed, a GCE image is created containing the converted virtual\nmachine. The temporary raw disk image copy in GCS can be discarded after the import is complete.\n\nGoogle Cloud has very specific requirements for images being imported. Please\nsee the [GCE import documentation](https://cloud.google.com/compute/docs/images/import-existing-image)\nfor details.\n\n~> **Note**: To prevent Packer from deleting the compressed RAW disk image set the `keep_input_artifact` configuration option to `true`.\nSee [Post-Processor Input Artifacts](/packer/docs/templates/legacy_json_templates/post-processors#input-artifacts) for more details.\n\n## Authentication\n\nTo authenticate with GCE, this builder supports everything the plugin does.\nTo get more information on this, refer to the plugin's description page, under\nthe [authentication](/packer/integrations/hashicorp/googlecompute#authentication) section.\n\n## Configuration\n\n### Required\n\n<!-- Code generated from the comments of the Config struct in post-processor/googlecompute-import/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `project_id` (string) - The project ID where the GCS bucket exists and where the GCE image is stored.\n\n- `bucket` (string) - The name of the GCS bucket where the raw disk image will be uploaded.\n\n- `image_name` (string) - The unique name of the resulting image.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/googlecompute-import/post-processor.go; -->\n\n\n### Optional\n\n<!-- Code generated from the comments of the Config struct in post-processor/googlecompute-import/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `scopes` ([]string) - The service account scopes for launched importer post-processor instance.\n  Defaults to:\n  \n  ```json\n  [\n    \"https://www.googleapis.com/auth/cloud-platform\"\n  ]\n  ```\n\n- `gcs_object_name` (string) - The name of the GCS object in `bucket` where\n  the RAW disk image will be copied for import. This is treated as a\n  [template engine](/packer/docs/templates/legacy_json_templates/engine). Therefore, you\n  may use user variables and template functions in this field. Defaults to\n  `packer-import-{{timestamp}}.tar.gz`.\n\n- `image_architecture` (string) - Specifies the architecture or processor type that this image can support. Must be one of: `arm64` or `x86_64`. Defaults to `ARCHITECTURE_UNSPECIFIED`.\n\n- `image_description` (string) - The description of the resulting image.\n\n- `image_family` (string) - The name of the image family to which the resulting image belongs.\n\n- `image_guest_os_features` ([]string) - A list of features to enable on the guest operating system. Applicable only for bootable images. Valid\n  values are `MULTI_IP_SUBNET`, `UEFI_COMPATIBLE`,\n  `VIRTIO_SCSI_MULTIQUEUE`, `GVNIC` and `WINDOWS` currently.\n\n- `image_labels` (map[string]string) - Key/value pair labels to apply to the created image.\n\n- `image_storage_locations` ([]string) - Specifies a Cloud Storage location, either regional or multi-regional, where image content is to be stored. If not specified, the multi-region location closest to the source is chosen automatically.\n\n- `skip_clean` (bool) - Skip removing the TAR file uploaded to the GCS\n  bucket after the import process has completed. \"true\" means that we should\n  leave it in the GCS bucket, \"false\" means to clean it out. Defaults to\n  `false`.\n\n- `image_platform_key` (string) - A key used to establish the trust relationship between the platform owner and the firmware. You may only specify one platform key, and it must be a valid X.509 certificate.\n\n- `image_key_exchange_key` ([]string) - A key used to establish a trust relationship between the firmware and the OS. You may specify multiple comma-separated keys for this value.\n\n- `image_signatures_db` ([]string) - A database of certificates that are trusted and can be used to sign boot files. You may specify single or multiple comma-separated values for this value.\n\n- `image_forbidden_signatures_db` ([]string) - A database of certificates that have been revoked and will cause the system to stop booting if a boot file is signed with one of them. You may specify single or multiple comma-separated values for this value.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/googlecompute-import/post-processor.go; -->\n\n\n## Basic Example\n\nHere is a basic example. This assumes that the builder has produced an\ncompressed raw disk image artifact for us to work with, and that the GCS bucket\nhas been created.\n\n**HCL**\n\n```hcl\npost-processor \"googlecompute-import\"{\n  account_file = \"account.json\"\n  bucket = \"my-bucket\"\n  project_id = \"my-project\"\n  image_name = \"my-gce-image\"\n}\n```\n\n**JSON**\n\n```json\n{\n  \"type\": \"googlecompute-import\",\n  \"account_file\": \"account.json\",\n  \"project_id\": \"my-project\",\n  \"bucket\": \"my-bucket\",\n  \"image_name\": \"my-gce-image\"\n}\n```\n\n\n## QEMU Builder Example\n\nHere is a complete example for building a Fedora 31 server GCE image. For this\nexample Packer was run from a Debian Linux host with KVM installed.\n\n    $ packer build -var serial=$(tty) build.pkr.hcl\n\n**HCL2**\n\n```hcl\nvariables {\n  account_file = \"account.json\"\n  bucket = \"my-bucket\"\n  project = \"my-project\"\n  serial = \"\"\n}\n\nsource \"qemu\" \"example\" {\n    accelerator = \"kvm\"\n    boot_command = [\n      \"<tab> console=ttyS0,115200n8 inst.text inst.ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/fedora-31-ks.cfg rd.live.check=0<enter><wait>\"\n    ]\n    disk_size = \"15000\"\n    format = \"raw\"\n    iso_checksum = \"sha256:225ebc160e40bb43c5de28bad9680e3a78a9db40c9e3f4f42f3ee3f10f95dbeb\"\n    iso_url = \"https://download-ib01.fedoraproject.org/pub/fedora/linux/releases/31/Server/x86_64/iso/Fedora-Server-dvd-x86_64-31-1.9.iso\"\n    headless = \"true\"\n    http_directory = \"http\"\n    http_port_max = \"10089\"\n    http_port_min = \"10082\"\n    output_directory = \"output\"\n    shutdown_timeout = \"30m\"\n\t\tshutdown_command = \"echo 'vagrant'|sudo -S shutdown -P now\"\n\t\tssh_username = \"vagrant\"\n\t\tssh_password = \"vagrant\"\n    vm_name = \"disk.raw\"\n    qemu_binary = \"/usr/bin/kvm\"\n    qemuargs = [\n      [\"-m\", \"1024\"],\n      [\"-cpu\", \"host\"],\n      [\"-chardev\", \"tty,id=pts,path=${var.serial}\"],\n      [\"-device\", \"isa-serial,chardev=pts\"],\n      [\"-device\", \"virtio-net,netdev=user.0\"]\n    ]\n}\n\nbuild {\n  sources = [\"source.qemu.example\"]\n\n  post-processors {\n    post-processor \"compress\" {\n        output = \"output/disk.raw.tar.gz\"\n    }\n    post-processor \"googlecompute-import\"  {\n        account_file = var.account_file\n        bucket = var.bucket\n        project_id = var.project\n        image_name = \"fedora31-server-packertest\"\n        image_description = \"Fedora 31 Server\"\n        image_family = \"fedora31-server\"\n      }\n    }\n}\n```\n\n  **JSON**\n\n```json\n{\n  \"variables\": {\n    \"account_file\": \"account.json\",\n    \"bucket\": \"my-bucket\",\n    \"project\": \"my-project\",\n    \"serial\": \"\"\n  },\n  \"builders\": [\n    {\n      \"type\": \"qemu\",\n      \"accelerator\": \"kvm\",\n      \"boot_command\": [\n        \"<tab> console=ttyS0,115200n8 inst.text inst.ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/fedora-31-ks.cfg rd.live.check=0<enter><wait>\"\n      ],\n      \"disk_size\": \"15000\",\n      \"format\": \"raw\",\n      \"iso_checksum\": \"sha256:225ebc160e40bb43c5de28bad9680e3a78a9db40c9e3f4f42f3ee3f10f95dbeb\",\n      \"iso_url\": \"https://download-ib01.fedoraproject.org/pub/fedora/linux/releases/31/Server/x86_64/iso/Fedora-Server-dvd-x86_64-31-1.9.iso\",\n      \"headless\": \"true\",\n      \"http_directory\": \"http\",\n      \"http_port_max\": \"10089\",\n      \"http_port_min\": \"10082\",\n      \"output_directory\": \"output\",\n      \"shutdown_timeout\": \"30m\",\n      \"shutdown_command\": \"echo 'vagrant'|sudo -S shutdown -P now\",\n      \"ssh_username\": \"vagrant\",\n      \"ssh_password\": \"vagrant\",\n      \"vm_name\": \"disk.raw\",\n      \"qemu_binary\": \"/usr/bin/kvm\",\n      \"qemuargs\": [\n        [\"-m\", \"1024\"],\n        [\"-cpu\", \"host\"],\n        [\"-chardev\", \"tty,id=pts,path={{user `serial`}}\"],\n        [\"-device\", \"isa-serial,chardev=pts\"],\n        [\"-device\", \"virtio-net,netdev=user.0\"]\n      ]\n    }\n  ],\n  \"post-processors\": [\n    [\n      {\n        \"type\": \"compress\",\n        \"output\": \"output/disk.raw.tar.gz\"\n      },\n      {\n        \"type\": \"googlecompute-import\",\n        \"project_id\": \"{{user `project`}}\",\n        \"account_file\": \"{{user `account_file`}}\",\n        \"bucket\": \"{{user `bucket`}}\",\n        \"image_name\": \"fedora31-server-packertest\",\n        \"image_description\": \"Fedora 31 Server\",\n        \"image_family\": \"fedora31-server\"\n      }\n    ]\n  ]\n}\n```\n","created_at":"2023-11-27T19:16:56.231Z","updated_at":"2024-02-05T16:03:44.456Z","name":"Google Cloud Platform Image Import","slug":"googlecompute-import","component":{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.157Z","updated_at":"2023-07-26T17:26:54.831Z"},"variable_groups":[]},{"id":"960849fe-41aa-43a9-8387-844b0cc21656","integration_release_id":"76ef66e5-9c2d-4b5d-9823-d9019727c2d8","component_id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","readme":"Type: `googlecompute-export`\nArtifact BuilderId: `packer.post-processor.googlecompute-export`\n\nThe Google Compute Image Exporter post-processor exports the resultant image\nfrom a googlecompute build as a gzipped tarball to Google Cloud Storage (GCS).\n\nThe exporter uses the same Google Cloud Platform (GCP) project and\nauthentication credentials as the googlecompute build that produced the image.\nA temporary VM is started in the GCP project using these credentials. The VM\nmounts the built image as a disk then dumps, compresses, and tars the image.\nThe VM then uploads the tarball to the provided GCS `paths` using the same\ncredentials.\n\nAs such, the authentication credentials that built the image must have write\npermissions to the GCS `paths`.\n\n~> **Note**: By default the GCE image being exported will be deleted once the image has been exported.\nTo prevent Packer from deleting the image set the `keep_input_artifact` configuration option to `true`. See [Post-Processor Input Artifacts](/packer/docs/templates/legacy_json_templates/post-processors#input-artifacts) for more details.\n\n## Authentication\n\nTo authenticate with GCE, this builder supports everything the plugin does.\nTo get more information on this, refer to the plugin's description page, under\nthe [authentication](/packer/integrations/hashicorp/googlecompute#authentication) section.\n\n## Configuration\n\n### Required\n\n<!-- Code generated from the comments of the Config struct in post-processor/googlecompute-export/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `paths` ([]string) - A list of GCS paths where the image will be exported.\n  For example `'gs://mybucket/path/to/file.tar.gz'`\n\n<!-- End of code generated from the comments of the Config struct in post-processor/googlecompute-export/post-processor.go; -->\n\n\n### Optional\n\n<!-- Code generated from the comments of the Config struct in post-processor/googlecompute-export/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `scopes` ([]string) - The service account scopes for launched exporter post-processor instance.\n  Defaults to:\n  \n  ```json\n  [\n    \"https://www.googleapis.com/auth/cloud-platform\"\n  ]\n  ```\n\n- `disk_size` (int64) - The size of the export instances disk.\n  The disk is unused for the export but a larger size will increase `pd-ssd` read speed.\n  This defaults to `200`, which is 200GB.\n\n- `disk_type` (string) - Type of disk used to back the export instance, like\n  `pd-ssd` or `pd-standard`. Defaults to `pd-ssd`.\n\n- `machine_type` (string) - The export instance machine type. Defaults to `\"n1-highcpu-4\"`.\n\n- `network` (string) - The Google Compute network id or URL to use for the export instance.\n  Defaults to `\"default\"`. If the value is not a URL, it\n  will be interpolated to `projects/((builder_project_id))/global/networks/((network))`.\n  This value is not required if a `subnet` is specified.\n\n- `subnetwork` (string) - The Google Compute subnetwork id or URL to use for\n  the export instance. Only required if the `network` has been created with\n  custom subnetting. Note, the region of the subnetwork must match the\n  `zone` in which the VM is launched. If the value is not a URL,\n  it will be interpolated to\n  `projects/((builder_project_id))/regions/((region))/subnetworks/((subnetwork))`\n\n- `zone` (string) - The zone in which to launch the export instance. Defaults\n  to `googlecompute` builder zone. Example: `\"us-central1-a\"`\n\n- `service_account_email` (string) - Service Account Email\n\n<!-- End of code generated from the comments of the Config struct in post-processor/googlecompute-export/post-processor.go; -->\n\n\n## Basic Example\n\nThe following example builds a GCE image in the project, `my-project`, with an\naccount whose keyfile is `account.json`. After the image build, a temporary VM\nwill be created to export the image as a gzipped tarball to\n`gs://mybucket1/path/to/file1.tar.gz` and\n`gs://mybucket2/path/to/file2.tar.gz`. `keep_input_artifact` is true, so the\nGCE image won't be deleted after the export.\n\nIn order for this example to work, the account associated with `account.json`\nmust have write access to both `gs://mybucket1/path/to/file1.tar.gz` and\n`gs://mybucket2/path/to/file2.tar.gz`.\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"googlecompute\",\n      \"account_file\": \"account.json\",\n      \"project_id\": \"my-project\",\n      \"source_image\": \"debian-7-wheezy-v20150127\",\n      \"zone\": \"us-central1-a\"\n    }\n  ],\n  \"post-processors\": [\n    {\n      \"type\": \"googlecompute-export\",\n      \"paths\": [\n        \"gs://mybucket1/path/to/file1.tar.gz\",\n        \"gs://mybucket2/path/to/file2.tar.gz\"\n      ],\n      \"keep_input_artifact\": true\n    }\n  ]\n}\n```\n\n\n**HCL2**\n\n```hcl\n\n  source \"googlecompute\" \"example\" {\n    account_file = \"account.json\"\n    project_id = \"my-project\"\n    source_image = \"debian-7-wheezy-v20150127\"\n    zone = \"us-central1-a\"\n  }\n\n  build {\n    sources = [\"source.googlecompute.example\"]\n\n    post-processor \"googlecompute-export\" {\n      paths = [\n        \"gs://mybucket1/path/to/file1.tar.gz\",\n        \"gs://mybucket2/path/to/file2.tar.gz\"\n      ]\n      keep_input_artifact = true\n    }\n  }\n```\n","created_at":"2023-11-27T19:16:56.568Z","updated_at":"2024-02-05T16:03:44.752Z","name":"Google Cloud Platform Image Exporter","slug":"googlecompute-export","component":{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.157Z","updated_at":"2023-07-26T17:26:54.831Z"},"variable_groups":[]}]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Google Cloud Platform","url":"/packer/integrations/hashicorp/googlecompute","isCurrentPage":true}],"anchorLinks":[{"id":"installation","level":3,"title":"Installation"},{"id":"components","level":3,"title":"Components"},{"id":"builders","level":4,"title":"Builders"},{"id":"post-processors","level":4,"title":"Post-Processors"},{"id":"authentication","level":3,"title":"Authentication"},{"id":"running-locally-on-your-workstation.","level":4,"title":"Running locally on your workstation."},{"id":"running-on-google-cloud","level":4,"title":"Running on Google Cloud"},{"id":"running-outside-of-google-cloud","level":4,"title":"Running outside of Google Cloud"},{"id":"precedence-of-authentication-methods","level":4,"title":"Precedence of Authentication Methods"},{"id":"examples","level":3,"title":"Examples"},{"id":"basic-example","level":4,"title":"Basic Example"},{"id":"windows-example","level":4,"title":"Windows Example"},{"id":"windows-over-winssh-example","level":4,"title":"Windows over WinSSH Example"},{"id":"windows-over-winssh-ansible-provisioner","level":4,"title":"Windows over WinSSH - Ansible Provisioner"},{"id":"nested-hypervisor-example","level":4,"title":"Nested Hypervisor Example"},{"id":"shared-vpc-example","level":4,"title":"Shared VPC Example"},{"id":"separate-image-project-example","level":4,"title":"Separate Image Project Example"}],"serializedREADME":{"compiledSource":"var i=Object.defineProperty,N=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable;var r=(a,n,s)=>n in a?i(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,e=(a,n)=>{for(var s in n||(n={}))o.call(n,s)&&r(a,s,n[s]);if(p)for(var s of p(n))c.call(n,s)&&r(a,s,n[s]);return a},m=(a,n)=>N(a,d(n));var l=(a,n)=>{var s={};for(var t in a)o.call(a,t)&&n.indexOf(t)<0&&(s[t]=a[t]);if(a!=null&&p)for(var t of p(a))n.indexOf(t)<0&&c.call(a,t)&&(s[t]=a[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:a}=t,n=l(t,[\"components\"]);return mdx(MDXLayout,m(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The Google compute Packer plugin lets you create custom images for use within Google Compute Engine (GCE).\"),mdx(\"h3\",e({},{id:\"user-content-installation\",\"data-text-content\":\"Installation\",className:\"g-type-display-4\"}),\"Installation\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To install this plugin, copy and paste this code into your Packer configuration, then run \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.packer.io/docs/commands/init\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"packer init\")),\".\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"packer\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"required_plugins\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"googlecompute\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"github.com/hashicorp/googlecompute\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"version\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"~> 1\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Alternatively, you can use \",mdx(\"inlineCode\",{parentName:\"p\"},\"packer plugins install\"),\" to manage installation of this plugin.\"),mdx(\"pre\",e({},{className:\"language-sh\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-sh\"}),\"$ packer plugins install github.com/hashicorp/googlecompute\",`\n`)),mdx(\"h3\",e({},{id:\"user-content-components\",\"data-text-content\":\"Components\",className:\"g-type-display-4\"}),\"Components\"),mdx(\"h4\",e({},{id:\"user-content-builders\",\"data-text-content\":\"Builders\",className:\"g-type-display-5\"}),\"Builders\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"/packer/integrations/hashicorp/googlecompute/latest/components/builder/googlecompute\"}),\"googlecompute\"),` - The\ngooglecompute builder creates images from existing ones, by launching an instance, provisioning it, then exporting\nit as a reusable image.`)),mdx(\"h4\",e({},{id:\"user-content-post-processors\",\"data-text-content\":\"Post-Processors\",className:\"g-type-display-5\"}),\"Post-Processors\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/integrations/hashicorp/googlecompute/latest/components/post-processor/googlecompute-import\"}),\"googlecompute-import\"),` -\nThe googlecompute-import post-processor imports an existing raw disk image, and imports it as a GCE image that can be\nused for launching instances from.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/integrations/hashicorp/googlecompute/latest/components/post-processor/googlecompute-export\"}),\"googlecompute-export\"),` -\nThe googlecompute-export post-processor exports the image built by the googlecompute builder as a .tar.gz archive into Google\nCloud Storage (GCS).`))),mdx(\"h3\",e({},{id:\"user-content-authentication\",\"data-text-content\":\"Authentication\",className:\"g-type-display-4\"}),\"Authentication\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Authenticating with Google Cloud services requires either a User Application Default Credentials,\na JSON Service Account Key or an Access Token.  These are `,mdx(\"strong\",{parentName:\"p\"},\"not\"),` required if you are\nrunning the `,mdx(\"inlineCode\",{parentName:\"p\"},\"googlecompute\"),` Packer builder on Google Cloud with a\nproperly-configured `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.google.com/compute/docs/authentication\"}),`Google Service\nAccount`),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The following options are available for the \",mdx(\"inlineCode\",{parentName:\"p\"},\"googlecompute\"),\" builder, the googlecompute-export\",mdx(\"inlineCode\",{parentName:\"p\"},`, and\nthe `),\"googlecompute-import`:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"access_token\"),\" (string) - A temporary \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://developers.google.com/identity/protocols/oauth2\"}),\"OAuth 2.0 access token\"),`\nobtained from the Google Authorization server, i.e. the `,mdx(\"inlineCode\",{parentName:\"p\"},\"Authorization: Bearer\"),` token used to\nauthenticate HTTP requests to GCP APIs.\nThis is an alternative to `,mdx(\"inlineCode\",{parentName:\"p\"},\"account_file\"),\", and ignores the \",mdx(\"inlineCode\",{parentName:\"p\"},\"scopes\"),` field.\nIf both are specified, `,mdx(\"inlineCode\",{parentName:\"p\"},\"access_token\"),\" will be used over the \",mdx(\"inlineCode\",{parentName:\"p\"},\"account_file\"),\" field.\"),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`These access tokens cannot be renewed by Packer and thus will only work until they expire.\nIf you anticipate Packer needing access for longer than a token's lifetime (default `,mdx(\"inlineCode\",{parentName:\"p\"},\"1 hour\"),`),\nplease use a service account key with `,mdx(\"inlineCode\",{parentName:\"p\"},\"account_file\"),\" instead.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"account_file\"),` (string) - The JSON file containing your account credentials. Not required if you\nrun Packer on a GCE instance with a service account. Instructions for\ncreating the file or using service accounts are above.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"credentials_file\"),\" (string) - The JSON file containing your account credentials.\"),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"The file's contents may be anything supported by the Google Go client, i.e.:\"),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},\"Service account JSON\"),mdx(\"li\",{parentName:\"ul\"},\"OIDC-provided token for federation\"),mdx(\"li\",{parentName:\"ul\"},\"Gcloud user credentials file (refresh-token JSON)\"),mdx(\"li\",{parentName:\"ul\"},\"A Google Developers Console client_credentials.json\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"credentials_json\"),\" (string) - The raw JSON payload for credentials.\"),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`The accepted data formats are same as those described under\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"#credentials_file\"}),\"credentials_file\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"impersonate_service_account\"),\" (string) - This allows service account impersonation as per the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.google.com/iam/docs/impersonating-service-accounts\"}),\"docs\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"vault_gcp_oauth_engine\"),` (string) - Can be set instead of account_file. If set, this builder will use\nHashiCorp Vault to generate an Oauth token for authenticating against\nGoogle Cloud. The value should be the path of the token generator\nwithin vault.\nFor information on how to configure your Vault + GCP engine to produce\nOauth tokens, see `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.vaultproject.io/docs/auth/gcp\"}),\"https://www.vaultproject.io/docs/auth/gcp\"),`\nYou must have the environment variables VAULT_ADDR and VAULT_TOKEN set,\nalong with any other relevant variables for accessing your vault\ninstance. For more information, see the Vault docs:\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.vaultproject.io/docs/commands/#environment-variables\"}),\"https://www.vaultproject.io/docs/commands/#environment-variables\"),`\nExample:`,mdx(\"inlineCode\",{parentName:\"p\"},'\"vault_gcp_oauth_engine\": \"gcp/token/my-project-editor\",')))),mdx(\"h4\",e({},{id:\"user-content-running-locally-on-your-workstation.\",\"data-text-content\":\"Running locally on your workstation\",className:\"g-type-display-5\"}),\"Running locally on your workstation.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"If you run the \",mdx(\"inlineCode\",{parentName:\"p\"},\"googlecompute\"),` Packer builder locally on your workstation, you will\nneed to install the Google Cloud SDK and authenticate using `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.google.com/sdk/gcloud/reference/auth/application-default\"}),`User Application Default\nCredentials`),`.\nYou don't need to specify an `,mdx(\"em\",{parentName:\"p\"},\"account file\"),` if you are using this method. Your user\nmust have at least `,mdx(\"inlineCode\",{parentName:\"p\"},\"Compute Instance Admin (v1)\"),\" & \",mdx(\"inlineCode\",{parentName:\"p\"},\"Service Account User\"),` roles\nto use Packer succesfully.`),mdx(\"h4\",e({},{id:\"user-content-running-on-google-cloud\",\"data-text-content\":\"Running on Google Cloud\",className:\"g-type-display-5\"}),\"Running on Google Cloud\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"If you run the \",mdx(\"inlineCode\",{parentName:\"p\"},\"googlecompute\"),` Packer builder on GCE or GKE, you can\nconfigure that instance or cluster to use a `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.google.com/compute/docs/authentication\"}),`Google Service\nAccount`),`. This will allow\nPacker to authenticate to Google Cloud without having to bake in a separate\ncredential/authentication file.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`It is recommended that you create a custom service account for Packer and assign it\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"Compute Instance Admin (v1)\"),\" & \",mdx(\"inlineCode\",{parentName:\"p\"},\"Service Account User\"),\" roles.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"For \",mdx(\"inlineCode\",{parentName:\"p\"},\"gcloud\"),\", you can run the following commands:\"),mdx(\"pre\",e({},{className:\"language-shell-session\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-shell-session\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"gcloud iam service-accounts create packer \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --project YOUR_GCP_PROJECT \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --description\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token string\"}),'\"Packer Service Account\"'),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --display-name\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token string\"}),'\"Packer Service Account\"'))),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"gcloud projects add-iam-policy-binding YOUR_GCP_PROJECT \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"    --member\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"serviceAccount:packer@YOUR_GCP_PROJECT.iam.gserviceaccount.com \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"    --role\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"roles/compute.instanceAdmin.v1\")),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"gcloud projects add-iam-policy-binding YOUR_GCP_PROJECT \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"    --member\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"serviceAccount:packer@YOUR_GCP_PROJECT.iam.gserviceaccount.com \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"    --role\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"roles/iam.serviceAccountUser\")),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"gcloud projects add-iam-policy-binding YOUR_GCP_PROJECT \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"    --member\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"serviceAccount:packer@YOUR_GCP_PROJECT.iam.gserviceaccount.com \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"    --role\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"roles/iap.tunnelResourceAccessor\")),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token shell-symbol important\"}),\"$\"),\" \",mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"gcloud compute instances create \",mdx(\"span\",e({parentName:\"span\"},{className:\"token environment constant\"}),\"INSTANCE\"),\"-NAME \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --project YOUR_GCP_PROJECT \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --image-family ubuntu-2004-lts \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --image-project ubuntu-os-cloud \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --network YOUR_GCP_NETWORK \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --zone YOUR_GCP_ZONE \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --service-account\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),\"packer@YOUR_GCP_PROJECT.iam.gserviceaccount.com \",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"\\\\\"))),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token command\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token bash language-bash\"}),\"  --scopes\",mdx(\"span\",e({parentName:\"span\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token string\"}),'\"https://www.googleapis.com/auth/cloud-platform\"'))),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},`The service account will be used automatically by Packer as long as there is\nno `,mdx(\"em\",{parentName:\"strong\"},\"account file\"),\" specified in the Packer configuration file.\")),mdx(\"h4\",e({},{id:\"user-content-running-outside-of-google-cloud\",\"data-text-content\":\"Running outside of Google Cloud\",className:\"g-type-display-5\"}),\"Running outside of Google Cloud\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://console.cloud.google.com\"}),\"Google Cloud Console\"),` allows\nyou to create and download a credential file that will let you use the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"googlecompute\"),` Packer builder anywhere. To make the process more\nstraightforwarded, it is documented here.`),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Log into the \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://console.cloud.google.com/iam-admin/serviceaccounts\"}),`Google Cloud\nConsole`),\" and select a project.\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Click Select a project, choose your project, and click Open.\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Click Create Service Account.\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Enter a service account name (friendly display name), an optional description, select the \",mdx(\"inlineCode\",{parentName:\"p\"},\"Compute Engine Instance Admin (v1)\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"Service Account User\"),\" roles, and then click Save.\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Generate a JSON Key and save it in a secure location.\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Set the Environment Variable \",mdx(\"inlineCode\",{parentName:\"p\"},\"GOOGLE_APPLICATION_CREDENTIALS\"),\" to point to the path of the service account key.\"))),mdx(\"h4\",e({},{id:\"user-content-precedence-of-authentication-methods\",\"data-text-content\":\"Precedence of Authentication Methods\",className:\"g-type-display-5\"}),\"Precedence of Authentication Methods\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Packer looks for credentials in the following places, preferring the first\nlocation found:`),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"An \",mdx(\"inlineCode\",{parentName:\"p\"},\"access_token\"),\" option in your packer file.\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"An \",mdx(\"inlineCode\",{parentName:\"p\"},\"account_file\"),\" option in your packer file.\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`A JSON file (Service Account) whose path is specified by the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"GOOGLE_APPLICATION_CREDENTIALS\"),\" environment variable.\")),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"A JSON file in a location known to the \",mdx(\"inlineCode\",{parentName:\"p\"},\"gcloud\"),` command-line tool.\n(`,mdx(\"inlineCode\",{parentName:\"p\"},\"gcloud auth application-default login\"),\" creates it)\"),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"On Windows, this is:\"),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},\"%APPDATA%/gcloud/application_default_credentials.json\",`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"On other systems:\"),mdx(\"pre\",{parentName:\"li\"},mdx(\"code\",{parentName:\"pre\"},\"$HOME/.config/gcloud/application_default_credentials.json\",`\n`))),mdx(\"li\",{parentName:\"ol\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`On Google Compute Engine and Google App Engine Managed VMs, it fetches\ncredentials from the metadata server. (Needs a correct VM authentication\nscope configuration, see above.)`))),mdx(\"h3\",e({},{id:\"user-content-examples\",\"data-text-content\":\"Examples\",className:\"g-type-display-4\"}),\"Examples\"),mdx(\"h4\",e({},{id:\"user-content-basic-example\",\"data-text-content\":\"Basic Example\",className:\"g-type-display-5\"}),\"Basic Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Below is a fully functioning example. It doesn't do anything useful since no\nprovisioners or startup-script metadata are defined, but it will effectively\nrepackage an existing GCE image.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"JSON\")),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"builders\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"project_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"source_image\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"debian-9-stretch-v20200805\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"ssh_username\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"zone\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"HCL2\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"basic-example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source_image\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"debian-9-stretch-v20200805\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_username\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"zone\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sources.googlecompute.basic-example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h4\",e({},{id:\"user-content-windows-example\",\"data-text-content\":\"Windows Example\",className:\"g-type-display-5\"}),\"Windows Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Before you can provision using the winrm communicator, you need to allow\ntraffic through google's firewall on the winrm port (tcp:5986). You can do so\nusing the gcloud command.`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},\"gcloud compute firewall-rules create allow-winrm --allow tcp:5986\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Or alternatively by navigating to \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://console.cloud.google.com/networking/firewalls/list\"}),\"https://console.cloud.google.com/networking/firewalls/list\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Once this is set up, the following is a complete working packer config after\nsetting a valid `,mdx(\"inlineCode\",{parentName:\"p\"},\"project_id\"),\":\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"JSON\")),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"builders\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"project_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"source_image\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"windows-server-2019-dc-v20200813\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"disk_size\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"50\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"machine_type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"n1-standard-2\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"communicator\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"winrm\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"winrm_username\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer_user\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"winrm_insecure\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"winrm_use_ssl\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"metadata\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"sysprep-specialize-script-cmd\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"winrm quickconfig -quiet & net user /add packer_user & net localgroup administrators packer_user /add & winrm set winrm/config/service/auth @{Basic=\\\\\"true\\\\\"}\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"zone\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"HCL2\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"windows-example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"MY_PROJECT\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source_image\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"windows-server-2019-dc-v20200813\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"zone\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"disk_size\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"50\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"machine_type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"n1-standard-2\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"communicator\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"winrm\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"winrm_username\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer_user\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"winrm_insecure\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"winrm_use_ssl\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"metadata\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sysprep-specialize-script-cmd\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"winrm quickconfig -quiet & net user /add packer_user & net localgroup administrators packer_user /add & winrm set winrm/config/service/auth @{Basic=\\\\\"true\\\\\"}\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sources.googlecompute.windows-example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"div\",e({},{className:\"alert alert-info g-type-body\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),\"\",mdx(\"strong\",{parentName:\"p\"},\"Warning:\"),` Please note that if you're setting up WinRM for provisioning, you'll probably want to turn it off or restrict its permissions as part of a shutdown script at the end of Packer's provisioning process. For more details on the why/how, check out this useful blog post and the associated code:\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://missionimpossiblecode.io/post/winrm-for-provisioning-close-the-door-on-the-way-out-eh/\"}),\"https://missionimpossiblecode.io/post/winrm-for-provisioning-close-the-door-on-the-way-out-eh/\"))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This build can take up to 15 min.\"),mdx(\"h4\",e({},{id:\"user-content-windows-over-winssh-example\",\"data-text-content\":\"Windows over WinSSH Example\",className:\"g-type-display-5\"}),\"Windows over WinSSH Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The following uses Windows SSH as backend communicator\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse\"}),\"https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"windows-ssh-example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"MY_PROJECT\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source_image\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"windows-server-2019-dc-v20200813\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"zone\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-east4-a\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"disk_size\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"50\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"machine_type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"n1-standard-2\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"communicator\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ssh\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_username\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" var.packer_username\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_password\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" var.packer_user_password\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_timeout\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"1h\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"metadata\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sysprep-specialize-script-cmd\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"net user ',mdx(\"span\",e({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"$\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token keyword\"}),\"var\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),\"packer_username\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),' \\\\\"',mdx(\"span\",e({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"$\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token keyword\"}),\"var\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),\"packer_user_password\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),'\\\\\" /add /y & wmic UserAccount where Name=\\\\\"',mdx(\"span\",e({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"$\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token keyword\"}),\"var\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),\"packer_username\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),'\\\\\" set PasswordExpires=False & net localgroup administrators ',mdx(\"span\",e({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"$\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token keyword\"}),\"var\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),\"packer_username\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),` /add & powershell Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 & powershell Start-Service sshd & powershell Set-Service -Name sshd -StartupType 'Automatic' & powershell New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22 & powershell.exe -NoProfile -ExecutionPolicy Bypass -Command \\\\\"Set-ExecutionPolicy -ExecutionPolicy bypass -Force\\\\\"\"`),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sources.googlecompute.windows-ssh-example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"provisioner\",mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),' \"powershell\" ')),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"script\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"../scripts/install-features.ps1\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"elevated_user\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" var.packer_username\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"elevated_password\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" var.packer_user_password\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h4\",e({},{id:\"user-content-windows-over-winssh-ansible-provisioner\",\"data-text-content\":\"Windows over WinSSH - Ansible Provisioner\",className:\"g-type-display-5\"}),\"Windows over WinSSH - Ansible Provisioner\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The following uses Windows SSH as backend communicator\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse\"}),\"https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_install_firstuse\"),`\nwith a private key.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"The \",mdx(\"inlineCode\",{parentName:\"li\"},\"sysprep-specialize-script-cmd\"),\" creates the \",mdx(\"inlineCode\",{parentName:\"li\"},\"packer_user\"),\" and adds it to the local administrators group and configures the ssh key, firewall rule and required permissions.\")),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},'source \"googlecompute\" \"windows-ssh-ansible\" {',`\n`,\"  project_id              = var.project_id\",`\n`,'  source_image            = \"windows-server-2019-dc-v20200813\"',`\n`,'  zone                    = \"us-east4-a\"',`\n`,\"  disk_size               = 50\",`\n`,'  machine_type            = \"n1-standard-8\"',`\n`,'  communicator            = \"ssh\"',`\n`,\"  ssh_username            = var.packer_username\",`\n`,\"  ssh_private_key_file    = var.ssh_key_file_path\",`\n`,'  ssh_timeout             = \"1h\"',`\n`,\"  \",`\n`,\"  metadata = {\",`\n`,`    sysprep-specialize-script-cmd = \"net user \\${var.packer_username} \\\\\"\\${var.packer_user_password}\\\\\" /add /y & wmic UserAccount where Name=\\\\\"\\${var.packer_username}\\\\\" set PasswordExpires=False & net localgroup administrators \\${var.packer_username} /add & powershell Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0 & echo \\${var.ssh_pub_key} > C:\\\\\\\\ProgramData\\\\\\\\ssh\\\\\\\\administrators_authorized_keys & icacls.exe \\\\\"C:\\\\\\\\ProgramData\\\\\\\\ssh\\\\\\\\administrators_authorized_keys\\\\\" /inheritance:r /grant \\\\\"Administrators:F\\\\\" /grant \\\\\"SYSTEM:F\\\\\" & powershell New-ItemProperty -Path \\\\\"HKLM:\\\\\\\\SOFTWARE\\\\\\\\OpenSSH\\\\\" -Name DefaultShell -Value \\\\\"C:\\\\\\\\Windows\\\\\\\\System32\\\\\\\\WindowsPowerShell\\\\\\\\v1.0\\\\\\\\powershell.exe\\\\\" -PropertyType String -Force  & powershell Start-Service sshd & powershell Set-Service -Name sshd -StartupType 'Automatic' & powershell New-NetFirewallRule -Name 'OpenSSH-Server-In-TCP' -DisplayName 'OpenSSH Server (sshd)' -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22 & powershell.exe -NoProfile -ExecutionPolicy Bypass -Command \\\\\"Set-ExecutionPolicy -ExecutionPolicy bypass -Force\\\\\"\"`,`\n`,\"  }\",`\n`,\"  account_file = var.account_file_path\",`\n`,`\n`,\"}\",`\n`,`\n`,\"build {\",`\n`,'  sources = [\"sources.googlecompute.windows-ssh-ansible\"]',`\n`,`\n`,'  provisioner \"ansible\" {',`\n`,'    playbook_file           = \"./playbooks/playbook.yml\"',`\n`,\"    use_proxy               = false\",`\n`,'    ansible_ssh_extra_args  = [\"-o StrictHostKeyChecking=no -o IdentitiesOnly=yes\"]',`\n`,'    ssh_authorized_key_file = \"var.public_key_path\"',`\n`,'    extra_arguments = [\"-e\", \"win_packages=${var.win_packages}\",',`\n`,'      \"-e\",',`\n`,'      \"ansible_shell_type=powershell\",',`\n`,'      \"-e\",',`\n`,'      \"ansible_shell_executable=None\",',`\n`,'      \"-e\",',`\n`,'      \"ansible_shell_executable=None\"',`\n`,\"    ]\",`\n`,\"    user = var.packer_username\",`\n`,\"  }\",`\n`,`\n`,\"}\",`\n`,`\n`)),mdx(\"h4\",e({},{id:\"user-content-nested-hypervisor-example\",\"data-text-content\":\"Nested Hypervisor Example\",className:\"g-type-display-5\"}),\"Nested Hypervisor Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This is an example of using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"image_licenses\"),` configuration option to create\na GCE image that has nested virtualization enabled. See `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.google.com/compute/docs/instances/enable-nested-virtualization-vm-instances\"}),`Enabling Nested\nVirtualization for VM\nInstances`),`\nfor details.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"JSON\")),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"builders\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"project_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"source_image_family\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"centos-7\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"ssh_username\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"zone\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"image_licenses\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"projects/vm-options/global/licenses/enable-vmx\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"HCL2\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"basic-example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source_image_family\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"centos-7\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_username\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"zone\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"image_licenses\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"projects/vm-options/global/licenses/enable-vmx\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sources.googlecompute.basic-example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h4\",e({},{id:\"user-content-shared-vpc-example\",\"data-text-content\":\"Shared VPC Example\",className:\"g-type-display-5\"}),\"Shared VPC Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This is an example of using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"network_project_id\"),` configuration option to create\na GCE instance in a Shared VPC Network. See `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.google.com/vpc/docs/provisioning-shared-vpc#creating_an_instance_in_a_shared_subnet\"}),`Creating a GCE Instance using Shared\nVPC`),`\nfor details. The user/service account running Packer must have `,mdx(\"inlineCode\",{parentName:\"p\"},\"Compute Network User\"),` role on\nthe Shared VPC Host Project to create the instance in addition to the other roles mentioned in the\nRunning on Google Cloud section.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"JSON\")),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"builders\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"project_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"subnetwork\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"default\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"source_image_family\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"centos-7\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"network_project_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"SHARED_VPC_PROJECT\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"ssh_username\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"zone\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"image_licenses\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"projects/vm-options/global/licenses/enable-vmx\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"HCL2\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sharedvpc-example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source_image_family\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"centos-7\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"subnetwork\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"default\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"network_project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"SHARED_VPC_PROJECT\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_username\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"zone\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"image_licenses\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"projects/vm-options/global/licenses/enable-vmx\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sources.googlecompute.sharedvpc-example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h4\",e({},{id:\"user-content-separate-image-project-example\",\"data-text-content\":\"Separate Image Project Example\",className:\"g-type-display-5\"}),\"Separate Image Project Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This is an example of using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"image_project_id\"),` configuration option to create\nthe generated image in a different GCP project than the one used to create the virtual machine. Make sure that Packer has permission in the target project to manage images, the `,mdx(\"inlineCode\",{parentName:\"p\"},\"Compute Storage Admin\"),\" role will grant the desired permissions.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"JSON\")),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"builders\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"project_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"image_project_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my image target project\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"source_image\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"debian-9-stretch-v20200805\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"ssh_username\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"zone\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"HCL2\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"googlecompute\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"basic-example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my project\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"image_project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my image target project\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source_image\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"debian-9-stretch-v20200805\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_username\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"zone\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"us-central1-a\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sources.googlecompute.basic-example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}