{"pageProps":{"metadata":{"title":"Hetzner Cloud Builder | Integrations"},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"5818fdf9-0b5d-4d23-b0c4-0e0406714074","slug":"hcloud","name":"Hetzner Cloud","description":"The hcloud plugin can be used with HashiCorp Packer to create custom images on Hetzner Cloud.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"partner","repo_url":"https://github.com/hetznercloud/packer-plugin-hcloud","subdirectory":"/.web-docs","created_at":"2023-06-15T19:02:49.962Z","updated_at":"2023-11-07T18:31:17.894Z","hide_versions":false,"organization":{"id":"90b1a82d-3961-402a-80d8-98acbedbdb1b","slug":"hetznercloud","created_at":"2023-11-07T18:31:17.374Z","updated_at":"2023-11-07T18:31:17.374Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["1.3.0","1.2.1","1.2.0","1.1.1","1.1.0","1.0.5"],"components":[{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"}],"flags":[],"integration_type":null},"activeRelease":{"id":"a97ce939-5aa6-4cfc-9651-fdfe439fc3f0","integration_id":"5818fdf9-0b5d-4d23-b0c4-0e0406714074","version":"1.3.0","readme":"The `hcloud` Packer plugin is able to create new images for use with [Hetzner\nCloud](https://www.hetzner.cloud).\n\n### Installation\n\nTo install this plugin, copy and paste this code into your Packer configuration, then run [`packer init`](https://www.packer.io/docs/commands/init).\n\n```hcl\npacker {\n  required_plugins {\n    hcloud = {\n      source  = \"github.com/hetznercloud/hcloud\"\n      version = \"~> 1\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\n$ packer plugins install github.com/hetznercloud/hcloud\n```\n\n#### Migrate from `github.com/hashicorp/hcloud`\n\nOn the 7 November 2023, the Packer plugin source moved from `github.com/hashicorp/hcloud` to `github.com/hetznercloud/hcloud`, make sure to update your Packer configuration with the new source:\n\n```patch\n packer {\n   required_plugins {\n     hcloud = {\n-      source  = \"github.com/hashicorp/hcloud\"\n+      source  = \"github.com/hetznercloud/hcloud\"\n       version = \">= 1.1.1\"\n     }\n   }\n }\n```\n\n### Components\n\n#### Builders\n\n- [hcloud](/packer/integrations/hetznercloud/hcloud/latest/components/builder/hcloud) - The hcloud builder\n  lets you create custom images on Hetzner Cloud by launching an instance, provisioning it, then\n  export it as an image for later reuse.\n","created_at":"2024-01-12T12:29:10.852Z","updated_at":"2024-01-12T12:29:10.852Z","components":[{"id":"8dfa704b-ce08-4c8b-9191-87e01c4ddb7a","integration_release_id":"a97ce939-5aa6-4cfc-9651-fdfe439fc3f0","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `hcloud`\nArtifact BuilderId: `hcloud.builder`\n\nThe `hcloud` Packer builder is able to create new images for use with [Hetzner\nCloud](https://www.hetzner.cloud). The builder takes a source image, runs any\nprovisioning necessary on the image after launching it, then snapshots it into\na reusable image. This reusable image can then be used as the foundation of new\nservers that are launched within the Hetzner Cloud.\n\nThe builder does _not_ manage images. Once it creates an image, it is up to you\nto use it or delete it.\n\n## Configuration Reference\n\nThere are many configuration options available for the builder. They are\nsegmented below into two categories: required and optional parameters. Within\neach category, the available configuration keys are alphabetized.\n\nIn addition to the options listed here, a\n[communicator](/packer/docs/templates/legacy_json_templates/communicator) can be configured for this\nbuilder.\n\n### Required Builder Configuration options:\n\n- `token` (string) - The client TOKEN to use to access your account. It can\n  also be specified via environment variable `HCLOUD_TOKEN`, if set.\n\n- `image` (string) - ID or name of image to launch server from. Alternatively\n  you can use `image_filter`.\n\n- `location` (string) - The name of the location to launch the server in.\n\n- `server_type` (string) - ID or name of the server type this server should\n  be created with.\n\n### Optional:\n\n- `endpoint` (string) - Non standard api endpoint URL. Set this if you are\n  using a Hetzner Cloud API compatible service. It can also be specified via\n  environment variable `HCLOUD_ENDPOINT`.\n\n- `image_filter` (object) - Filters used to populate the `filter`\n  field. Example:\n\n  ```hcl\n  image_filter {\n    most_recent   = true\n    with_selector = [\"name==my-image\"]\n  }\n  ```\n\n  This selects the most recent image with the label `name==my-image`. NOTE:\n  This will fail unless _exactly_ one AMI is returned. In the above example,\n  `most_recent` will cause this to succeed by selecting the newest image.\n\n  - `with_selector` (list of strings) - label selectors used to select an\n    `image`. NOTE: This will fail unless _exactly_ one image is returned.\n    Check the official hcloud docs on\n    [Label Selectors](https://docs.hetzner.cloud/#overview-label-selector)\n    for more info.\n\n  - `most_recent` (boolean) - Selects the newest created image when true.\n    This is most useful if you base your image on another Packer build image.\n\n  You may set this in place of `image`, but not both.\n\n- `server_name` (string) - The name assigned to the server. The Hetzner Cloud\n  sets the hostname of the machine to this value.\n\n- `server_labels` (map of key/value strings) - Key/value pair labels to\n  apply to the created server.\n\n- `snapshot_name` (string) - The name of the resulting snapshot that will\n  appear in your account as image description. Defaults to `packer-{{timestamp}}` (see\n  [configuration templates](/packer/docs/templates/legacy_json_templates/engine) for more info).\n  The snapshot_name must be unique per architecture.\n  If you want to reference the image as a sample in your terraform configuration please use the image id or the `snapshot_labels`.\n\n- `snapshot_labels` (map of key/value strings) - Key/value pair labels to\n  apply to the created image.\n\n- `poll_interval` (string) - Configures the interval in which actions are\n  polled by the client. Default `500ms`. Increase this interval if you run\n  into rate limiting errors.\n\n- `user_data` (string) - User data to launch with the server. Packer will not\n  automatically wait for a user script to finish before shutting down the\n  instance this must be handled in a provisioner.\n\n- `user_data_file` (string) - Path to a file that will be used for the user\n  data when launching the server.\n\n- `ssh_keys_labels` (map of key/value strings) - Key/value pair labels to\n  apply to the created ssh keys.\n\n- `ssh_keys` (array of strings) - List of SSH keys by name or id to be added\n  to image on launch.\n\n<!-- Code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `temporary_key_pair_type` (string) - `dsa` | `ecdsa` | `ed25519` | `rsa` ( the default )\n  \n  Specifies the type of key to create. The possible values are 'dsa',\n  'ecdsa', 'ed25519', or 'rsa'.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure, please\n  consider other alternatives like RSA or ED25519.\n\n- `temporary_key_pair_bits` (int) - Specifies the number of bits in the key to create. For RSA keys, the\n  minimum size is 1024 bits and the default is 4096 bits. Generally, 3072\n  bits is considered sufficient. DSA keys must be exactly 1024 bits as\n  specified by FIPS 186-2. For ECDSA keys, bits determines the key length\n  by selecting from one of three elliptic curve sizes: 256, 384 or 521\n  bits. Attempting to use bit lengths other than these three values for\n  ECDSA keys will fail. Ed25519 keys have a fixed length and bits will be\n  ignored.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure as specified\n  by FIPS 186-5, please consider other alternatives like RSA or ED25519.\n\n<!-- End of code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; -->\n\n\n- `rescue` (string) - Enable and boot in to the specified rescue system. This\n  enables simple installation of custom operating systems. `linux64` or `linux32`\n\n- `upgrade_server_type` (string) - ID or name of the server type this server should\n  be upgraded to, without changing the disk size. Improves building performance.\n  The resulting snapshot is compatible with smaller server types and disk sizes.\n\n- `networks` (array of integers) - List of Network IDs which should be\n  attached to the server private network interface at creation time.\n\n- `public_ipv4` (string) - ID, name or IP address of a pre-allocated Hetzner\n  Primary IPv4 address to use for the created server.\n\n- `public_ipv6` (string) - ID, name or IP address of a pre-allocated Hetzner\n  Primary IPv6 address to use for the created server.\n\n## Basic Example\n\nHere is a basic example. It is completely valid as soon as you enter your own\naccess tokens:\n\n```hcl\nsource \"hcloud\" \"basic_example\" {\n  token = \"YOUR API TOKEN\"\n  image = \"ubuntu-22.04\"\n  location = \"nbg1\"\n  server_type = \"cx11\"\n  ssh_username = \"root\"\n}\n\nbuild {\n  sources  = [\"source.hcloud.basic_example\"]\n}\n```\n","created_at":"2024-01-12T12:29:11.615Z","updated_at":"2024-01-12T12:29:11.615Z","name":"Hetzner Cloud","slug":"hcloud","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]}]},"component":{"id":"8dfa704b-ce08-4c8b-9191-87e01c4ddb7a","integration_release_id":"a97ce939-5aa6-4cfc-9651-fdfe439fc3f0","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `hcloud`\nArtifact BuilderId: `hcloud.builder`\n\nThe `hcloud` Packer builder is able to create new images for use with [Hetzner\nCloud](https://www.hetzner.cloud). The builder takes a source image, runs any\nprovisioning necessary on the image after launching it, then snapshots it into\na reusable image. This reusable image can then be used as the foundation of new\nservers that are launched within the Hetzner Cloud.\n\nThe builder does _not_ manage images. Once it creates an image, it is up to you\nto use it or delete it.\n\n## Configuration Reference\n\nThere are many configuration options available for the builder. They are\nsegmented below into two categories: required and optional parameters. Within\neach category, the available configuration keys are alphabetized.\n\nIn addition to the options listed here, a\n[communicator](/packer/docs/templates/legacy_json_templates/communicator) can be configured for this\nbuilder.\n\n### Required Builder Configuration options:\n\n- `token` (string) - The client TOKEN to use to access your account. It can\n  also be specified via environment variable `HCLOUD_TOKEN`, if set.\n\n- `image` (string) - ID or name of image to launch server from. Alternatively\n  you can use `image_filter`.\n\n- `location` (string) - The name of the location to launch the server in.\n\n- `server_type` (string) - ID or name of the server type this server should\n  be created with.\n\n### Optional:\n\n- `endpoint` (string) - Non standard api endpoint URL. Set this if you are\n  using a Hetzner Cloud API compatible service. It can also be specified via\n  environment variable `HCLOUD_ENDPOINT`.\n\n- `image_filter` (object) - Filters used to populate the `filter`\n  field. Example:\n\n  ```hcl\n  image_filter {\n    most_recent   = true\n    with_selector = [\"name==my-image\"]\n  }\n  ```\n\n  This selects the most recent image with the label `name==my-image`. NOTE:\n  This will fail unless _exactly_ one AMI is returned. In the above example,\n  `most_recent` will cause this to succeed by selecting the newest image.\n\n  - `with_selector` (list of strings) - label selectors used to select an\n    `image`. NOTE: This will fail unless _exactly_ one image is returned.\n    Check the official hcloud docs on\n    [Label Selectors](https://docs.hetzner.cloud/#overview-label-selector)\n    for more info.\n\n  - `most_recent` (boolean) - Selects the newest created image when true.\n    This is most useful if you base your image on another Packer build image.\n\n  You may set this in place of `image`, but not both.\n\n- `server_name` (string) - The name assigned to the server. The Hetzner Cloud\n  sets the hostname of the machine to this value.\n\n- `server_labels` (map of key/value strings) - Key/value pair labels to\n  apply to the created server.\n\n- `snapshot_name` (string) - The name of the resulting snapshot that will\n  appear in your account as image description. Defaults to `packer-{{timestamp}}` (see\n  [configuration templates](/packer/docs/templates/legacy_json_templates/engine) for more info).\n  The snapshot_name must be unique per architecture.\n  If you want to reference the image as a sample in your terraform configuration please use the image id or the `snapshot_labels`.\n\n- `snapshot_labels` (map of key/value strings) - Key/value pair labels to\n  apply to the created image.\n\n- `poll_interval` (string) - Configures the interval in which actions are\n  polled by the client. Default `500ms`. Increase this interval if you run\n  into rate limiting errors.\n\n- `user_data` (string) - User data to launch with the server. Packer will not\n  automatically wait for a user script to finish before shutting down the\n  instance this must be handled in a provisioner.\n\n- `user_data_file` (string) - Path to a file that will be used for the user\n  data when launching the server.\n\n- `ssh_keys_labels` (map of key/value strings) - Key/value pair labels to\n  apply to the created ssh keys.\n\n- `ssh_keys` (array of strings) - List of SSH keys by name or id to be added\n  to image on launch.\n\n<!-- Code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `temporary_key_pair_type` (string) - `dsa` | `ecdsa` | `ed25519` | `rsa` ( the default )\n  \n  Specifies the type of key to create. The possible values are 'dsa',\n  'ecdsa', 'ed25519', or 'rsa'.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure, please\n  consider other alternatives like RSA or ED25519.\n\n- `temporary_key_pair_bits` (int) - Specifies the number of bits in the key to create. For RSA keys, the\n  minimum size is 1024 bits and the default is 4096 bits. Generally, 3072\n  bits is considered sufficient. DSA keys must be exactly 1024 bits as\n  specified by FIPS 186-2. For ECDSA keys, bits determines the key length\n  by selecting from one of three elliptic curve sizes: 256, 384 or 521\n  bits. Attempting to use bit lengths other than these three values for\n  ECDSA keys will fail. Ed25519 keys have a fixed length and bits will be\n  ignored.\n  \n  NOTE: DSA is deprecated and no longer recognized as secure as specified\n  by FIPS 186-5, please consider other alternatives like RSA or ED25519.\n\n<!-- End of code generated from the comments of the SSHTemporaryKeyPair struct in communicator/config.go; -->\n\n\n- `rescue` (string) - Enable and boot in to the specified rescue system. This\n  enables simple installation of custom operating systems. `linux64` or `linux32`\n\n- `upgrade_server_type` (string) - ID or name of the server type this server should\n  be upgraded to, without changing the disk size. Improves building performance.\n  The resulting snapshot is compatible with smaller server types and disk sizes.\n\n- `networks` (array of integers) - List of Network IDs which should be\n  attached to the server private network interface at creation time.\n\n- `public_ipv4` (string) - ID, name or IP address of a pre-allocated Hetzner\n  Primary IPv4 address to use for the created server.\n\n- `public_ipv6` (string) - ID, name or IP address of a pre-allocated Hetzner\n  Primary IPv6 address to use for the created server.\n\n## Basic Example\n\nHere is a basic example. It is completely valid as soon as you enter your own\naccess tokens:\n\n```hcl\nsource \"hcloud\" \"basic_example\" {\n  token = \"YOUR API TOKEN\"\n  image = \"ubuntu-22.04\"\n  location = \"nbg1\"\n  server_type = \"cx11\"\n  ssh_username = \"root\"\n}\n\nbuild {\n  sources  = [\"source.hcloud.basic_example\"]\n}\n```\n","created_at":"2024-01-12T12:29:11.615Z","updated_at":"2024-01-12T12:29:11.615Z","name":"Hetzner Cloud","slug":"hcloud","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},"processedVariablesMarkdown":{},"anchorLinks":[{"id":"configuration-reference","level":2,"title":"Configuration Reference"},{"id":"required-builder-configuration-options:","level":3,"title":"Required Builder Configuration options:"},{"id":"optional:","level":3,"title":"Optional:"},{"id":"basic-example","level":2,"title":"Basic Example"}],"serializedREADME":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var p=(a,n,t)=>n in a?c(a,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[n]=t,e=(a,n)=>{for(var t in n||(n={}))o.call(n,t)&&p(a,t,n[t]);if(s)for(var t of s(n))l.call(n,t)&&p(a,t,n[t]);return a},r=(a,n)=>d(a,N(n));var m=(a,n)=>{var t={};for(var i in a)o.call(a,i)&&n.indexOf(i)<0&&(t[i]=a[i]);if(a!=null&&s)for(var i of s(a))n.indexOf(i)<0&&l.call(a,i)&&(t[i]=a[i]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var i=t,{components:a}=i,n=m(i,[\"components\"]);return mdx(MDXLayout,r(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Type: \",mdx(\"inlineCode\",{parentName:\"p\"},\"hcloud\"),`\nArtifact BuilderId: `,mdx(\"inlineCode\",{parentName:\"p\"},\"hcloud.builder\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"hcloud\"),\" Packer builder is able to create new images for use with \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.hetzner.cloud\"}),`Hetzner\nCloud`),`. The builder takes a source image, runs any\nprovisioning necessary on the image after launching it, then snapshots it into\na reusable image. This reusable image can then be used as the foundation of new\nservers that are launched within the Hetzner Cloud.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The builder does \",mdx(\"em\",{parentName:\"p\"},\"not\"),` manage images. Once it creates an image, it is up to you\nto use it or delete it.`),mdx(\"h2\",e({},{id:\"user-content-configuration-reference\",\"data-text-content\":\"Configuration Reference\",className:\"g-type-display-3\"}),\"Configuration Reference\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`There are many configuration options available for the builder. They are\nsegmented below into two categories: required and optional parameters. Within\neach category, the available configuration keys are alphabetized.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`In addition to the options listed here, a\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/templates/legacy_json_templates/communicator\"}),\"communicator\"),` can be configured for this\nbuilder.`),mdx(\"h3\",e({},{id:\"user-content-required-builder-configuration-options:\",\"data-text-content\":\"Required Builder Configuration options\",className:\"g-type-display-4\"}),\"Required Builder Configuration options:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"token\"),` (string) - The client TOKEN to use to access your account. It can\nalso be specified via environment variable `,mdx(\"inlineCode\",{parentName:\"p\"},\"HCLOUD_TOKEN\"),\", if set.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"image\"),` (string) - ID or name of image to launch server from. Alternatively\nyou can use `,mdx(\"inlineCode\",{parentName:\"p\"},\"image_filter\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"location\"),\" (string) - The name of the location to launch the server in.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"server_type\"),` (string) - ID or name of the server type this server should\nbe created with.`))),mdx(\"h3\",e({},{id:\"user-content-optional:\",\"data-text-content\":\"Optional\",className:\"g-type-display-4\"}),\"Optional:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"endpoint\"),` (string) - Non standard api endpoint URL. Set this if you are\nusing a Hetzner Cloud API compatible service. It can also be specified via\nenvironment variable `,mdx(\"inlineCode\",{parentName:\"p\"},\"HCLOUD_ENDPOINT\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"image_filter\"),\" (object) - Filters used to populate the \",mdx(\"inlineCode\",{parentName:\"p\"},\"filter\"),`\nfield. Example:`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"image_filter\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"most_recent\"),\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"with_selector\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"name==my-image\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"This selects the most recent image with the label \",mdx(\"inlineCode\",{parentName:\"p\"},\"name==my-image\"),`. NOTE:\nThis will fail unless `,mdx(\"em\",{parentName:\"p\"},\"exactly\"),` one AMI is returned. In the above example,\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"most_recent\"),\" will cause this to succeed by selecting the newest image.\"),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"with_selector\"),` (list of strings) - label selectors used to select an\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"image\"),\". NOTE: This will fail unless \",mdx(\"em\",{parentName:\"p\"},\"exactly\"),` one image is returned.\nCheck the official hcloud docs on\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.hetzner.cloud/#overview-label-selector\"}),\"Label Selectors\"),`\nfor more info.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"most_recent\"),` (boolean) - Selects the newest created image when true.\nThis is most useful if you base your image on another Packer build image.`))),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"You may set this in place of \",mdx(\"inlineCode\",{parentName:\"p\"},\"image\"),\", but not both.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"server_name\"),` (string) - The name assigned to the server. The Hetzner Cloud\nsets the hostname of the machine to this value.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"server_labels\"),` (map of key/value strings) - Key/value pair labels to\napply to the created server.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"snapshot_name\"),` (string) - The name of the resulting snapshot that will\nappear in your account as image description. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},\"packer-{{timestamp}}\"),` (see\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/templates/legacy_json_templates/engine\"}),\"configuration templates\"),` for more info).\nThe snapshot_name must be unique per architecture.\nIf you want to reference the image as a sample in your terraform configuration please use the image id or the `,mdx(\"inlineCode\",{parentName:\"p\"},\"snapshot_labels\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"snapshot_labels\"),` (map of key/value strings) - Key/value pair labels to\napply to the created image.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"poll_interval\"),` (string) - Configures the interval in which actions are\npolled by the client. Default `,mdx(\"inlineCode\",{parentName:\"p\"},\"500ms\"),`. Increase this interval if you run\ninto rate limiting errors.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"user_data\"),` (string) - User data to launch with the server. Packer will not\nautomatically wait for a user script to finish before shutting down the\ninstance this must be handled in a provisioner.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"user_data_file\"),` (string) - Path to a file that will be used for the user\ndata when launching the server.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"ssh_keys_labels\"),` (map of key/value strings) - Key/value pair labels to\napply to the created ssh keys.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"ssh_keys\"),` (array of strings) - List of SSH keys by name or id to be added\nto image on launch.`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"temporary_key_pair_type\"),\" (string) - \",mdx(\"inlineCode\",{parentName:\"p\"},\"dsa\"),\" | \",mdx(\"inlineCode\",{parentName:\"p\"},\"ecdsa\"),\" | \",mdx(\"inlineCode\",{parentName:\"p\"},\"ed25519\"),\" | \",mdx(\"inlineCode\",{parentName:\"p\"},\"rsa\"),\" ( the default )\"),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`Specifies the type of key to create. The possible values are 'dsa',\n'ecdsa', 'ed25519', or 'rsa'.`),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`NOTE: DSA is deprecated and no longer recognized as secure, please\nconsider other alternatives like RSA or ED25519.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"temporary_key_pair_bits\"),` (int) - Specifies the number of bits in the key to create. For RSA keys, the\nminimum size is 1024 bits and the default is 4096 bits. Generally, 3072\nbits is considered sufficient. DSA keys must be exactly 1024 bits as\nspecified by FIPS 186-2. For ECDSA keys, bits determines the key length\nby selecting from one of three elliptic curve sizes: 256, 384 or 521\nbits. Attempting to use bit lengths other than these three values for\nECDSA keys will fail. Ed25519 keys have a fixed length and bits will be\nignored.`),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`NOTE: DSA is deprecated and no longer recognized as secure as specified\nby FIPS 186-5, please consider other alternatives like RSA or ED25519.`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"rescue\"),` (string) - Enable and boot in to the specified rescue system. This\nenables simple installation of custom operating systems. `,mdx(\"inlineCode\",{parentName:\"p\"},\"linux64\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"linux32\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"upgrade_server_type\"),` (string) - ID or name of the server type this server should\nbe upgraded to, without changing the disk size. Improves building performance.\nThe resulting snapshot is compatible with smaller server types and disk sizes.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"networks\"),` (array of integers) - List of Network IDs which should be\nattached to the server private network interface at creation time.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"public_ipv4\"),` (string) - ID, name or IP address of a pre-allocated Hetzner\nPrimary IPv4 address to use for the created server.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"public_ipv6\"),` (string) - ID, name or IP address of a pre-allocated Hetzner\nPrimary IPv6 address to use for the created server.`))),mdx(\"h2\",e({},{id:\"user-content-basic-example\",\"data-text-content\":\"Basic Example\",className:\"g-type-display-3\"}),\"Basic Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Here is a basic example. It is completely valid as soon as you enter your own\naccess tokens:`),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"hcloud\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"basic_example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"token\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"YOUR API TOKEN\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"image\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ubuntu-22.04\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"location\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"nbg1\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"server_type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"cx11\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_username\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"root\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"source.hcloud.basic_example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Hetzner Cloud","url":"/packer/integrations/hetznercloud/hcloud","isCurrentPage":false},{"title":"v1.3.0","url":"/packer/integrations/hetznercloud/hcloud/v1.3.0","isCurrentPage":false},{"title":"Components"},{"title":"Builder"},{"title":"Hetzner Cloud","url":"/packer/integrations/hetznercloud/hcloud/latest/components/builder/hcloud","isCurrentPage":true}]},"__N_SSG":true}