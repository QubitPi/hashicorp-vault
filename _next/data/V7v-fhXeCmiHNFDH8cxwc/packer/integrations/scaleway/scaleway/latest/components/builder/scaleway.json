{"pageProps":{"metadata":{"title":"Scaleway Builder | Integrations"},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"9a24d12d-bd49-4a88-9822-d3cff169eaea","slug":"scaleway","name":"Scaleway","description":"Create new images for use with Scaleway.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"partner","repo_url":"https://github.com/scaleway/packer-plugin-scaleway","subdirectory":"/.web-docs","created_at":"2023-08-14T20:21:47.732Z","updated_at":"2024-01-17T08:58:27.035Z","hide_versions":false,"organization":{"id":"60543ce8-e797-4290-beb3-cd3d236673c6","slug":"scaleway","created_at":"2022-11-09T22:56:34.598Z","updated_at":"2022-11-09T22:56:34.598Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["1.1.0","0.0.0"],"components":[{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"}],"flags":[],"integration_type":null},"activeRelease":{"id":"1eb4a02b-368c-4f0b-bca0-48869e93bab8","integration_id":"9a24d12d-bd49-4a88-9822-d3cff169eaea","version":"1.1.0","readme":"The [Scaleway](https://www.scaleway.com) Packer plugin provides a builder for building images in\nScaleway.\n\n### Installation\n\nTo install this plugin, copy and paste this code into your Packer configuration, then run [`packer init`](https://www.packer.io/docs/commands/init).\n\n```hcl\npacker {\n  required_plugins {\n    scaleway = {\n      version = \">= 1.0.5\"\n      source  = \"github.com/scaleway/scaleway\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\n$ packer plugins install github.com/scaleway/scaleway v1.0.x\n```\n\nThis command will install the most recent compatible Scaleway Packer plugin matching\nversion constraint. If the version constraint is omitted, the most recent\nversion of the plugin will be installed.\n\n### Components\n\n#### Builders\n\n- [scaleway](/packer/integrations/scaleway/scaleway/latest/components/builder/scaleway) - The Scaleway Packer builder is able to create new images for use with Scaleway Compute Instance servers. \nThe builder takes a source image, runs any provisioning necessary on the image after launching it, then snapshots it into a reusable image. \nThis reusable image can then be used as the foundation of new servers that are launched within Scaleway.\n\n","created_at":"2024-01-17T08:58:28.124Z","updated_at":"2024-01-17T08:58:28.124Z","components":[{"id":"2bca23d4-aea3-48fa-a97d-e7916a876d64","integration_release_id":"1eb4a02b-368c-4f0b-bca0-48869e93bab8","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `scaleway`\nArtifact BuilderId: `hashicorp.scaleway`\n\nThe `scaleway` Packer builder is able to create new images for use with\n[Scaleway](https://www.scaleway.com). The builder takes a source image, runs\nany provisioning necessary on the image after launching it, then snapshots it\ninto a reusable image. This reusable image can then be used as the foundation\nof new servers that are launched within Scaleway.\n\nThe builder does _not_ manage snapshots. Once it creates an image, it is up to\nyou to use it or delete it.\n\n## Configuration Reference\n\nThere are many configuration options available for the builder. They are\nsegmented below into two categories: required and optional parameters. Within\neach category, the available configuration keys are alphabetized.\n\nIn addition to the options listed here, a\n[communicator](/docs/templates/legacy_json_templates/communicator) can be configured for this\nbuilder. In addition to the options defined there, a private key file\ncan also be supplied to override the typical auto-generated key:\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n### Required:\n\n<!-- Code generated from the comments of the Config struct in builder/scaleway/config.go; DO NOT EDIT MANUALLY -->\n\n- `access_key` (string) - The AccessKey corresponding to the secret key.\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_ACCESS_KEY.\n\n- `secret_key` (string) - The SecretKey to authenticate against the Scaleway API.\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_SECRET_KEY.\n\n- `project_id` (string) - The Project ID in which the instances, volumes and snapshots will be created.\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_DEFAULT_PROJECT_ID.\n\n- `zone` (string) - The Zone in which the instances, volumes and snapshots will be created.\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_DEFAULT_ZONE\n\n- `image` (string) - The UUID of the base image to use. This is the image\n  that will be used to launch a new server and provision it. See\n  the images list\n  get the complete list of the accepted image UUID.\n  The marketplace image label (eg `ubuntu_focal`) also works.\n\n- `commercial_type` (string) - The name of the server commercial type:\n  DEV1-S, DEV1-M, DEV1-L, DEV1-XL,\n  PLAY2-PICO, PLAY2-NANO, PLAY2-MICRO,\n  PRO2-XXS, PRO2-XS, PRO2-S, PRO2-M, PRO2-L,\n  GP1-XS, GP1-S, GP1-M, GP1-L, GP1-XL,\n  ENT1-XXS, ENT1-XS, ENT1-S, ENT1-M, ENT1-L, ENT1-XL, ENT1-2XL,\n  GPU-3070-S, RENDER-S, STARDUST1-S,\n\n<!-- End of code generated from the comments of the Config struct in builder/scaleway/config.go; -->\n\n\n### Optional:\n\n<!-- Code generated from the comments of the Config struct in builder/scaleway/config.go; DO NOT EDIT MANUALLY -->\n\n- `api_url` (string) - The Scaleway API URL to use\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_API_URL\n\n- `image_size_in_gb` (int32) - The Image size in GB. Will only work for images based on block volumes.\n\n- `snapshot_name` (string) - The name of the resulting snapshot that will\n  appear in your account. Default packer-TIMESTAMP\n\n- `image_name` (string) - The name of the resulting image that will appear in\n  your account. Default packer-TIMESTAMP\n\n- `server_name` (string) - The name assigned to the server. Default\n  packer-UUID\n\n- `bootscript` (string) - The id of an existing bootscript to use when\n  booting the server.\n\n- `boottype` (string) - The type of boot, can be either local or\n  bootscript, Default bootscript\n\n- `remove_volume` (bool) - Remove Volume\n\n- `cleanup_machine_related_data` (string) - This value allows the user to remove information\n  that is particular to the instance used to build the image\n\n- `snapshot_creation_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for snapshot creation. Defaults to \"1h\"\n\n- `image_creation_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for image creation. Defaults to \"1h\"\n\n- `server_creation_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for server creation. Defaults to \"10m\"\n\n- `server_shutdown_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for server shutdown. Defaults to \"10m\"\n\n- `user_data` (map[string]string) - User data to apply when launching the instance\n\n- `user_data_timeout` (duration string | ex: \"1h5m2s\") - A custom timeout for user data to assure its completion. Defaults to \"0s\"\n\n- `api_token` (string) - The token to use to authenticate with your account.\n  It can also be specified via environment variable SCALEWAY_API_TOKEN. You\n  can see and generate tokens in the \"Credentials\"\n  section of the control panel.\n  Deprecated, use SecretKey instead\n\n- `organization_id` (string) - The organization id to use to identify your\n  organization. It can also be specified via environment variable\n  SCALEWAY_ORGANIZATION. Your organization id is available in the\n  \"Account\" section of the\n  control panel.\n  Previously named: api_access_key with environment variable: SCALEWAY_API_ACCESS_KEY\n  Deprecated, use ProjectID instead\n\n- `region` (string) - The name of the region to launch the server in (par1\n  or ams1). Consequently, this is the region where the snapshot will be\n  available.\n  Deprecated, use Zone instead\n\n<!-- End of code generated from the comments of the Config struct in builder/scaleway/config.go; -->\n\n\n## Basic Example\n\nHere is a basic example. It is completely valid as soon as you enter your own\naccess tokens:\n\n**HCL2**\n\n```hcl\nsource \"scaleway\" \"example\" {\n  project_id = \"YOUR PROJECT ID\"\n  access_key = \"YOUR ACCESS KEY\"\n  secret_key = \"YOUR SECRET KEY\"\n  image = \"UUID OF THE BASE IMAGE\"\n  zone = \"fr-par-1\"\n  commercial_type = \"DEV1-S\"\n  ssh_username = \"root\"\n  ssh_private_key_file = \"~/.ssh/id_rsa\"\n}\n\nbuild {\n  sources = [\"source.scaleway.example\"]\n}\n```\n\n\n**JSON**\n\n    ```json\n    {\n        \"type\": \"scaleway\",\n        \"project_id\": \"YOUR PROJECT ID\",\n        \"access_key\": \"YOUR ACCESS KEY\",\n        \"secret_key\": \"YOUR SECRET KEY\",\n        \"image\": \"UUID OF THE BASE IMAGE\",\n        \"zone\": \"fr-par-1\",\n        \"commercial_type\": \"DEV1-S\",\n        \"ssh_username\": \"root\",\n        \"ssh_private_key_file\": \"~/.ssh/id_rsa\"\n    }\n    ```\n\n\nWhen you do not specify the `ssh_private_key_file`, a temporary SSH keypair\nis generated to connect the server. This key will only allow the `root` user to\nconnect the server.\n","created_at":"2024-01-17T08:58:29.151Z","updated_at":"2024-01-17T08:58:29.151Z","name":"Scaleway","slug":"scaleway","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]}]},"component":{"id":"2bca23d4-aea3-48fa-a97d-e7916a876d64","integration_release_id":"1eb4a02b-368c-4f0b-bca0-48869e93bab8","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `scaleway`\nArtifact BuilderId: `hashicorp.scaleway`\n\nThe `scaleway` Packer builder is able to create new images for use with\n[Scaleway](https://www.scaleway.com). The builder takes a source image, runs\nany provisioning necessary on the image after launching it, then snapshots it\ninto a reusable image. This reusable image can then be used as the foundation\nof new servers that are launched within Scaleway.\n\nThe builder does _not_ manage snapshots. Once it creates an image, it is up to\nyou to use it or delete it.\n\n## Configuration Reference\n\nThere are many configuration options available for the builder. They are\nsegmented below into two categories: required and optional parameters. Within\neach category, the available configuration keys are alphabetized.\n\nIn addition to the options listed here, a\n[communicator](/docs/templates/legacy_json_templates/communicator) can be configured for this\nbuilder. In addition to the options defined there, a private key file\ncan also be supplied to override the typical auto-generated key:\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n### Required:\n\n<!-- Code generated from the comments of the Config struct in builder/scaleway/config.go; DO NOT EDIT MANUALLY -->\n\n- `access_key` (string) - The AccessKey corresponding to the secret key.\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_ACCESS_KEY.\n\n- `secret_key` (string) - The SecretKey to authenticate against the Scaleway API.\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_SECRET_KEY.\n\n- `project_id` (string) - The Project ID in which the instances, volumes and snapshots will be created.\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_DEFAULT_PROJECT_ID.\n\n- `zone` (string) - The Zone in which the instances, volumes and snapshots will be created.\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_DEFAULT_ZONE\n\n- `image` (string) - The UUID of the base image to use. This is the image\n  that will be used to launch a new server and provision it. See\n  the images list\n  get the complete list of the accepted image UUID.\n  The marketplace image label (eg `ubuntu_focal`) also works.\n\n- `commercial_type` (string) - The name of the server commercial type:\n  DEV1-S, DEV1-M, DEV1-L, DEV1-XL,\n  PLAY2-PICO, PLAY2-NANO, PLAY2-MICRO,\n  PRO2-XXS, PRO2-XS, PRO2-S, PRO2-M, PRO2-L,\n  GP1-XS, GP1-S, GP1-M, GP1-L, GP1-XL,\n  ENT1-XXS, ENT1-XS, ENT1-S, ENT1-M, ENT1-L, ENT1-XL, ENT1-2XL,\n  GPU-3070-S, RENDER-S, STARDUST1-S,\n\n<!-- End of code generated from the comments of the Config struct in builder/scaleway/config.go; -->\n\n\n### Optional:\n\n<!-- Code generated from the comments of the Config struct in builder/scaleway/config.go; DO NOT EDIT MANUALLY -->\n\n- `api_url` (string) - The Scaleway API URL to use\n  Will be fetched first from the [scaleway configuration file](https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md).\n  It can also be specified via the environment variable SCW_API_URL\n\n- `image_size_in_gb` (int32) - The Image size in GB. Will only work for images based on block volumes.\n\n- `snapshot_name` (string) - The name of the resulting snapshot that will\n  appear in your account. Default packer-TIMESTAMP\n\n- `image_name` (string) - The name of the resulting image that will appear in\n  your account. Default packer-TIMESTAMP\n\n- `server_name` (string) - The name assigned to the server. Default\n  packer-UUID\n\n- `bootscript` (string) - The id of an existing bootscript to use when\n  booting the server.\n\n- `boottype` (string) - The type of boot, can be either local or\n  bootscript, Default bootscript\n\n- `remove_volume` (bool) - Remove Volume\n\n- `cleanup_machine_related_data` (string) - This value allows the user to remove information\n  that is particular to the instance used to build the image\n\n- `snapshot_creation_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for snapshot creation. Defaults to \"1h\"\n\n- `image_creation_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for image creation. Defaults to \"1h\"\n\n- `server_creation_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for server creation. Defaults to \"10m\"\n\n- `server_shutdown_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for server shutdown. Defaults to \"10m\"\n\n- `user_data` (map[string]string) - User data to apply when launching the instance\n\n- `user_data_timeout` (duration string | ex: \"1h5m2s\") - A custom timeout for user data to assure its completion. Defaults to \"0s\"\n\n- `api_token` (string) - The token to use to authenticate with your account.\n  It can also be specified via environment variable SCALEWAY_API_TOKEN. You\n  can see and generate tokens in the \"Credentials\"\n  section of the control panel.\n  Deprecated, use SecretKey instead\n\n- `organization_id` (string) - The organization id to use to identify your\n  organization. It can also be specified via environment variable\n  SCALEWAY_ORGANIZATION. Your organization id is available in the\n  \"Account\" section of the\n  control panel.\n  Previously named: api_access_key with environment variable: SCALEWAY_API_ACCESS_KEY\n  Deprecated, use ProjectID instead\n\n- `region` (string) - The name of the region to launch the server in (par1\n  or ams1). Consequently, this is the region where the snapshot will be\n  available.\n  Deprecated, use Zone instead\n\n<!-- End of code generated from the comments of the Config struct in builder/scaleway/config.go; -->\n\n\n## Basic Example\n\nHere is a basic example. It is completely valid as soon as you enter your own\naccess tokens:\n\n**HCL2**\n\n```hcl\nsource \"scaleway\" \"example\" {\n  project_id = \"YOUR PROJECT ID\"\n  access_key = \"YOUR ACCESS KEY\"\n  secret_key = \"YOUR SECRET KEY\"\n  image = \"UUID OF THE BASE IMAGE\"\n  zone = \"fr-par-1\"\n  commercial_type = \"DEV1-S\"\n  ssh_username = \"root\"\n  ssh_private_key_file = \"~/.ssh/id_rsa\"\n}\n\nbuild {\n  sources = [\"source.scaleway.example\"]\n}\n```\n\n\n**JSON**\n\n    ```json\n    {\n        \"type\": \"scaleway\",\n        \"project_id\": \"YOUR PROJECT ID\",\n        \"access_key\": \"YOUR ACCESS KEY\",\n        \"secret_key\": \"YOUR SECRET KEY\",\n        \"image\": \"UUID OF THE BASE IMAGE\",\n        \"zone\": \"fr-par-1\",\n        \"commercial_type\": \"DEV1-S\",\n        \"ssh_username\": \"root\",\n        \"ssh_private_key_file\": \"~/.ssh/id_rsa\"\n    }\n    ```\n\n\nWhen you do not specify the `ssh_private_key_file`, a temporary SSH keypair\nis generated to connect the server. This key will only allow the `root` user to\nconnect the server.\n","created_at":"2024-01-17T08:58:29.151Z","updated_at":"2024-01-17T08:58:29.151Z","name":"Scaleway","slug":"scaleway","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},"processedVariablesMarkdown":{},"anchorLinks":[{"id":"configuration-reference","level":2,"title":"Configuration Reference"},{"id":"required:","level":3,"title":"Required:"},{"id":"optional:","level":3,"title":"Optional:"},{"id":"basic-example","level":2,"title":"Basic Example"}],"serializedREADME":{"compiledSource":"var m=Object.defineProperty,d=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var l=(a,n,t)=>n in a?m(a,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[n]=t,e=(a,n)=>{for(var t in n||(n={}))s.call(n,t)&&l(a,t,n[t]);if(o)for(var t of o(n))p.call(n,t)&&l(a,t,n[t]);return a},r=(a,n)=>d(a,N(n));var c=(a,n)=>{var t={};for(var i in a)s.call(a,i)&&n.indexOf(i)<0&&(t[i]=a[i]);if(a!=null&&o)for(var i of o(a))n.indexOf(i)<0&&p.call(a,i)&&(t[i]=a[i]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var i=t,{components:a}=i,n=c(i,[\"components\"]);return mdx(MDXLayout,r(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Type: \",mdx(\"inlineCode\",{parentName:\"p\"},\"scaleway\"),`\nArtifact BuilderId: `,mdx(\"inlineCode\",{parentName:\"p\"},\"hashicorp.scaleway\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"scaleway\"),` Packer builder is able to create new images for use with\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.scaleway.com\"}),\"Scaleway\"),`. The builder takes a source image, runs\nany provisioning necessary on the image after launching it, then snapshots it\ninto a reusable image. This reusable image can then be used as the foundation\nof new servers that are launched within Scaleway.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The builder does \",mdx(\"em\",{parentName:\"p\"},\"not\"),` manage snapshots. Once it creates an image, it is up to\nyou to use it or delete it.`),mdx(\"h2\",e({},{id:\"user-content-configuration-reference\",\"data-text-content\":\"Configuration Reference\",className:\"g-type-display-3\"}),\"Configuration Reference\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`There are many configuration options available for the builder. They are\nsegmented below into two categories: required and optional parameters. Within\neach category, the available configuration keys are alphabetized.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`In addition to the options listed here, a\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/docs/templates/legacy_json_templates/communicator\"}),\"communicator\"),` can be configured for this\nbuilder. In addition to the options defined there, a private key file\ncan also be supplied to override the typical auto-generated key:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"ssh_private_key_file\"),` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\nThe `,mdx(\"inlineCode\",{parentName:\"li\"},\"~\"),` can be used in path and will be expanded to the home directory\nof current user.`)),mdx(\"h3\",e({},{id:\"user-content-required:\",\"data-text-content\":\"Required\",className:\"g-type-display-4\"}),\"Required:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"access_key\"),` (string) - The AccessKey corresponding to the secret key.\nWill be fetched first from the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md\"}),\"scaleway configuration file\"),`.\nIt can also be specified via the environment variable SCW_ACCESS_KEY.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"secret_key\"),` (string) - The SecretKey to authenticate against the Scaleway API.\nWill be fetched first from the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md\"}),\"scaleway configuration file\"),`.\nIt can also be specified via the environment variable SCW_SECRET_KEY.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"project_id\"),` (string) - The Project ID in which the instances, volumes and snapshots will be created.\nWill be fetched first from the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md\"}),\"scaleway configuration file\"),`.\nIt can also be specified via the environment variable SCW_DEFAULT_PROJECT_ID.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"zone\"),` (string) - The Zone in which the instances, volumes and snapshots will be created.\nWill be fetched first from the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md\"}),\"scaleway configuration file\"),`.\nIt can also be specified via the environment variable SCW_DEFAULT_ZONE`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"image\"),` (string) - The UUID of the base image to use. This is the image\nthat will be used to launch a new server and provision it. See\nthe images list\nget the complete list of the accepted image UUID.\nThe marketplace image label (eg `,mdx(\"inlineCode\",{parentName:\"p\"},\"ubuntu_focal\"),\") also works.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"commercial_type\"),` (string) - The name of the server commercial type:\nDEV1-S, DEV1-M, DEV1-L, DEV1-XL,\nPLAY2-PICO, PLAY2-NANO, PLAY2-MICRO,\nPRO2-XXS, PRO2-XS, PRO2-S, PRO2-M, PRO2-L,\nGP1-XS, GP1-S, GP1-M, GP1-L, GP1-XL,\nENT1-XXS, ENT1-XS, ENT1-S, ENT1-M, ENT1-L, ENT1-XL, ENT1-2XL,\nGPU-3070-S, RENDER-S, STARDUST1-S,`))),mdx(\"h3\",e({},{id:\"user-content-optional:\",\"data-text-content\":\"Optional\",className:\"g-type-display-4\"}),\"Optional:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"api_url\"),` (string) - The Scaleway API URL to use\nWill be fetched first from the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/scaleway/scaleway-sdk-go/blob/master/scw/README.md\"}),\"scaleway configuration file\"),`.\nIt can also be specified via the environment variable SCW_API_URL`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"image_size_in_gb\"),\" (int32) - The Image size in GB. Will only work for images based on block volumes.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"snapshot_name\"),` (string) - The name of the resulting snapshot that will\nappear in your account. Default packer-TIMESTAMP`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"image_name\"),` (string) - The name of the resulting image that will appear in\nyour account. Default packer-TIMESTAMP`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"server_name\"),` (string) - The name assigned to the server. Default\npacker-UUID`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"bootscript\"),` (string) - The id of an existing bootscript to use when\nbooting the server.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"boottype\"),` (string) - The type of boot, can be either local or\nbootscript, Default bootscript`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"remove_volume\"),\" (bool) - Remove Volume\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"cleanup_machine_related_data\"),` (string) - This value allows the user to remove information\nthat is particular to the instance used to build the image`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"snapshot_creation_timeout\"),' (duration string | ex: \"1h5m2s\") - The time to wait for snapshot creation. Defaults to \"1h\"')),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"image_creation_timeout\"),' (duration string | ex: \"1h5m2s\") - The time to wait for image creation. Defaults to \"1h\"')),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"server_creation_timeout\"),' (duration string | ex: \"1h5m2s\") - The time to wait for server creation. Defaults to \"10m\"')),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"server_shutdown_timeout\"),' (duration string | ex: \"1h5m2s\") - The time to wait for server shutdown. Defaults to \"10m\"')),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"user_data\"),\" (map\",\"[string]\",\"string) - User data to apply when launching the instance\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"user_data_timeout\"),' (duration string | ex: \"1h5m2s\") - A custom timeout for user data to assure its completion. Defaults to \"0s\"')),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"api_token\"),` (string) - The token to use to authenticate with your account.\nIt can also be specified via environment variable SCALEWAY_API_TOKEN. You\ncan see and generate tokens in the \"Credentials\"\nsection of the control panel.\nDeprecated, use SecretKey instead`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"organization_id\"),` (string) - The organization id to use to identify your\norganization. It can also be specified via environment variable\nSCALEWAY_ORGANIZATION. Your organization id is available in the\n\"Account\" section of the\ncontrol panel.\nPreviously named: api_access_key with environment variable: SCALEWAY_API_ACCESS_KEY\nDeprecated, use ProjectID instead`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"region\"),` (string) - The name of the region to launch the server in (par1\nor ams1). Consequently, this is the region where the snapshot will be\navailable.\nDeprecated, use Zone instead`))),mdx(\"h2\",e({},{id:\"user-content-basic-example\",\"data-text-content\":\"Basic Example\",className:\"g-type-display-3\"}),\"Basic Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Here is a basic example. It is completely valid as soon as you enter your own\naccess tokens:`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"HCL2\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"scaleway\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"project_id\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"YOUR PROJECT ID\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"access_key\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"YOUR ACCESS KEY\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"secret_key\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"YOUR SECRET KEY\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"image\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"UUID OF THE BASE IMAGE\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"zone\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"fr-par-1\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"commercial_type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"DEV1-S\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_username\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"root\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_private_key_file\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"~/.ssh/id_rsa\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"source.scaleway.example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"JSON\")),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},\"```json\",`\n`,\"{\",`\n`,'    \"type\": \"scaleway\",',`\n`,'    \"project_id\": \"YOUR PROJECT ID\",',`\n`,'    \"access_key\": \"YOUR ACCESS KEY\",',`\n`,'    \"secret_key\": \"YOUR SECRET KEY\",',`\n`,'    \"image\": \"UUID OF THE BASE IMAGE\",',`\n`,'    \"zone\": \"fr-par-1\",',`\n`,'    \"commercial_type\": \"DEV1-S\",',`\n`,'    \"ssh_username\": \"root\",',`\n`,'    \"ssh_private_key_file\": \"~/.ssh/id_rsa\"',`\n`,\"}\",`\n`,\"```\",`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"When you do not specify the \",mdx(\"inlineCode\",{parentName:\"p\"},\"ssh_private_key_file\"),`, a temporary SSH keypair\nis generated to connect the server. This key will only allow the `,mdx(\"inlineCode\",{parentName:\"p\"},\"root\"),` user to\nconnect the server.`))}MDXContent.isMDXComponent=!0;\n","scope":{}},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Scaleway","url":"/packer/integrations/scaleway/scaleway","isCurrentPage":false},{"title":"v1.1.0","url":"/packer/integrations/scaleway/scaleway/v1.1.0","isCurrentPage":false},{"title":"Components"},{"title":"Builder"},{"title":"Scaleway","url":"/packer/integrations/scaleway/scaleway/latest/components/builder/scaleway","isCurrentPage":true}]},"__N_SSG":true}