{"pageProps":{"metadata":{"title":"Outline | Integrations","description":"Outline - Wiki and knowledgebase for teams"},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"ba5ba039-18f2-48b9-9948-f7ebbf6dfd0d","slug":"outline","name":"Outline","description":"Outline - Wiki and knowledgebase for teams","license_type":null,"license_url":null,"external_only":false,"external_url":"https://www.getoutline.com/","tier":"community","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/outline","created_at":"2023-05-17T17:27:33.530Z","updated_at":"2023-07-12T18:05:08.940Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"c02e0291-65ee-45ef-9fe8-d18f571cc733","integration_id":"ba5ba039-18f2-48b9-9948-f7ebbf6dfd0d","version":"0.0.1","readme":"This pack contains a service job that runs [Outline](https://www.getoutline.com/) in a single Nomad client. It currently supports\nbeing run by the [Docker](https://www.nomadproject.io/docs/drivers/docker) driver.\n\nIt has 4 tasks:\n- **Outline:** [*(reference)*](https://www.getoutline.com/) the wiki and knowledgebase for teams;\n- **PostgreSQL:** [*(reference)*](https://www.postgresql.org/) the persistent database used by Outline;\n- **Redis:** [*(reference)*](https://redis.io/) for in-memory storage and cache;\n- **MinIO:** [*(reference)*](https://min.io/) for images storage, compatible with S3 cloud storage service.\n\nSetup:\n- Service-to-service communication is handled with Consul Connect;\n- Bitnami images are being used for [PostgreSQL](https://hub.docker.com/r/bitnami/postgresql), [Redis](https://hub.docker.com/r/bitnami/redis) and [MinIO](https://hub.docker.com/r/bitnami/minio). They are non-root containers and as such the mounted files and directories must have the proper permissions for the UID 1001. To achieve this, these 3 images are being run as user 1001 and there are prestart tasks that create their respective directories, while setting the correct ownership, in the host filesystem with the raw exec driver;\n- Only MinIO and Outline ports are exposed. To simplify the pack, MinIO has a static host port of 9000, whereas Outline's port is being randomly assigned. In production it's recommended that none of the services are directly exposed and that traffic is run through a reverse proxy that supports Consul Connect enabled services, like Traefik;\n- MinIO's group has a poststart task that applies a policy that disables directory browsing. It does it by finding the correct Docker container, exec'ing into the container and applying the policy with MinIO's MC;\n- Outline supports a number of authentication methods. Slack is used for demonstration purposes, but enabling more authentication methods is a matter of defining the [environment variables](https://github.com/outline/outline/blob/main/.env.sample);\n- The default variables are defined for a local setup.\n\n## Requirements\nClients that expect to run this job require:\n- [Docker volumes](https://www.nomadproject.io/docs/drivers/docker \"Docker volumes\") to be enabled within their Docker plugin stanza:\n```hcl\nplugin \"docker\" {\n  config {\n    volumes {\n      enabled = true\n    }\n  }\n}\n```\n\n- [Raw Exec](https://www.nomadproject.io/docs/drivers/raw_exec \"Raw Exec\") driver to be enabled:\n```hcl\nplugin \"raw_exec\" {\n  config {\n    enabled = true\n  }\n}\n```\n\n- [CNI plugins installed](https://www.nomadproject.io/docs/job-specification/network#network-modes \"CNI plugins installed\") and [its path](https://www.nomadproject.io/docs/configuration/client#cni_path \"its path\") set in the client's configuration if network mode is set to bridge.\n\n- [Consul Connect](https://www.nomadproject.io/docs/integrations/consul-connect \"Consul Connect\") to be enabled in Consul's configuration:\n```hcl\nports {\n  grpc = 8502\n}\n\nconnect {\n  enabled = true\n}\n```\n\n## Customizing the Docker images\n\nThe 4 docker images can be replaced by using their variable names:\n- postgresql_task_image\n- minio_task_image\n- redis_task_image\n- outline_task_image\n\nExample:\n```\nnomad-pack run outline --var outline_task_image=\"outlinewiki/outline:0.59.0\"\n```\n\n## Customizing the environment variables\n\nThe 4 tasks have default environment variables. However, it's recommended to change the ones related to authentication if the services are going to be publicly accessible. Additional environment variables can be passed to nomad-pack, even if not in the default variables file.\n\nDefault PostgreSQL environment variables:\n```\npostgresql_task_env_vars = [\n  {\n    key = \"ALLOW_EMPTY_PASSWORD\"\n    value = \"no\"\n  },\n  {\n    key = \"POSTGRESQL_USERNAME\"\n    value = \"outline_user\"\n  },\n  {\n    key = \"POSTGRESQL_PASSWORD\"\n    value = \"outline_user_password\"\n  },\n  {\n    key = \"POSTGRESQL_DATABASE\"\n    value = \"outline\"\n  }\n]\n```\n\nDefault Redis environment variables:\n```\nredis_task_env_vars = [\n  {\n    key = \"ALLOW_EMPTY_PASSWORD\"\n    value = \"no\"\n  },\n  {\n    key = \"REDIS_PASSWORD\"\n    value = \"redis_password\"\n  }\n]\n```\n\nDefault MinIO environment variables:\n```\nminio_task_env_vars = [\n  {\n    key = \"MINIO_ROOT_USER\"\n    value = \"minio_root_user\"\n  },\n  {\n    key = \"MINIO_ROOT_PASSWORD\"\n    value = \"minio_root_password\"\n  },\n  {\n    key = \"MINIO_BROWSER\"\n    value = \"off\"\n  },\n  {\n    key = \"MINIO_DEFAULT_BUCKETS\"\n    value = \"outline:none\"\n  },\n  {\n    key = \"MINIO_FORCE_NEW_KEYS\"\n    value = \"yes\"\n  }\n]\n```\n\nDefault Outline environment variables:\n```\noutline_task_env_vars = [\n  {\n    key = \"SECRET_KEY\"\n    value = \"d1434eff0725153e1cc457a013b53dbcdba6a2b40f00729be5680b56fc003897\"\n  },\n  {\n    key = \"UTILS_SECRET\"\n    value = \"d5c59234b0018fe6036b0376d022c7f5187feb8cc1769c7bc4c282ed8a983b54\"\n  },\n  {\n    key = \"REDIS_URL\"\n    value = \"redis://:redis_password@$${NOMAD_UPSTREAM_ADDR_outline-redis}\"\n  },\n  {\n    key = \"DATABASE_URL\"\n    value = \"postgres://outline_user:outline_user_password@$${NOMAD_UPSTREAM_ADDR_outline-postgresql}/outline\"\n  },\n  {\n    key = \"DATABASE_URL_TEST\"\n    value = \"postgres://outline_user:outline_user_password@$${NOMAD_UPSTREAM_ADDR_outline-postgresql}/outline_test\"\n  },\n  {\n    key = \"PGSSLMODE\"\n    value = \"disable\"\n  },\n  {\n    key = \"URL\"\n    value = \"http://localhost:3000\"\n  },\n  {\n    key = \"PORT\"\n    value = \"3000\"\n  },\n  {\n    key = \"AWS_ACCESS_KEY_ID\"\n    value = \"minio_root_user\"\n  },\n  {\n    key = \"AWS_SECRET_ACCESS_KEY\"\n    value = \"minio_root_password\"\n  },\n  {\n    key = \"AWS_REGION\"\n    value = \"us-east-1\"\n  },\n  {\n    key = \"AWS_S3_UPLOAD_BUCKET_URL\"\n    value = \"http://localhost:9000\"\n  },\n  {\n    key = \"AWS_S3_UPLOAD_BUCKET_NAME\"\n    value = \"outline\"\n  },\n  {\n    key = \"AWS_S3_UPLOAD_MAX_SIZE\"\n    value = \"26214400\"\n  },\n  {\n    key = \"AWS_S3_FORCE_PATH_STYLE\"\n    value = \"true\"\n  },\n  {\n    key = \"AWS_S3_ACL\"\n    value = \"private\"\n  },\n  {\n    key = \"SLACK_KEY\"\n    value = \"123123\"\n  },\n  {\n    key = \"SLACK_SECRET\"\n    value = \"123123\"\n  },\n  {\n    key = \"FORCE_HTTPS\"\n    value = \"false\"\n  },\n  {\n    key = \"ENABLE_UPDATES\"\n    value = \"no\"\n  },\n  {\n    key = \"WEB_CONCURRENCY\"\n    value = \"1\"\n  },\n  {\n    key = \"MAXIMUM_IMPORT_SIZE\"\n    value = \"5120000\"\n  },\n  {\n    key = \"DEBUG\"\n    value = \"http\"\n  },\n  {\n    key = \"DEFAULT_LANGUAGE\"\n    value = \"en_US\"\n  }\n]\n```\n\n## Customizing ports\n\nPostgreSQL and Redis ports are not exposed and communication to it needs to be done via its sidecar proxy.\n\nOutline's ports is exposed and randomly assigned to the host.\n\nMinIO port is exposed to the host and static.\n\nThe usage of a reverse proxy, such as Traefik, is highly recommended.\n\n## Customizing resources\n\nThe application resource limits can be customized on a task level. The variables names are:\n- outline_task_resources\n- postgresql_task_resources\n- redis_task_resources\n- minio_task_resources\n\nExample:\n```\noutline_task_resources = {\n  cpu = 1024\n  memory = 2048\n}\n```\n\n## Setting the host paths\n\nPostgreSQL, Redis and MinIO are using bind mounts for storage persistence.\nThe path for the mounts can be replaced through the following variables:\n- postgresql_task_volume_path\n- redis_task_volume_path\n- minio_task_volume_path\n\nExample:\n```\nnomad-pack run outline --var postgresql_task_volume_path=\"/var/lib/outline/postgresql\"\n```","created_at":"2023-05-17T22:19:21.584Z","updated_at":"2023-05-17T22:19:21.584Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"Outline","url":"/nomad/integrations/hashicorp/outline","isCurrentPage":true}],"anchorLinks":[{"id":"requirements","level":2,"title":"Requirements"},{"id":"customizing-the-docker-images","level":2,"title":"Customizing the Docker images"},{"id":"customizing-the-environment-variables","level":2,"title":"Customizing the environment variables"},{"id":"customizing-ports","level":2,"title":"Customizing ports"},{"id":"customizing-resources","level":2,"title":"Customizing resources"},{"id":"setting-the-host-paths","level":2,"title":"Setting the host paths"}],"serializedREADME":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",{\"className\":\"g-type-long-body\"},`This pack contains a service job that runs `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.getoutline.com/\"},`Outline`),` in a single Nomad client. It currently supports\nbeing run by the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.nomadproject.io/docs/drivers/docker\"},`Docker`),` driver.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`It has 4 tasks:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},`Outline:`),` `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://www.getoutline.com/\"},mdx(\"em\",{parentName:\"a\"},`(reference)`)),` the wiki and knowledgebase for teams;`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},`PostgreSQL:`),` `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://www.postgresql.org/\"},mdx(\"em\",{parentName:\"a\"},`(reference)`)),` the persistent database used by Outline;`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},`Redis:`),` `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://redis.io/\"},mdx(\"em\",{parentName:\"a\"},`(reference)`)),` for in-memory storage and cache;`),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},`MinIO:`),` `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://min.io/\"},mdx(\"em\",{parentName:\"a\"},`(reference)`)),` for images storage, compatible with S3 cloud storage service.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Setup:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`Service-to-service communication is handled with Consul Connect;`),mdx(\"li\",{parentName:\"ul\"},`Bitnami images are being used for `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://hub.docker.com/r/bitnami/postgresql\"},`PostgreSQL`),`, `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://hub.docker.com/r/bitnami/redis\"},`Redis`),` and `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://hub.docker.com/r/bitnami/minio\"},`MinIO`),`. They are non-root containers and as such the mounted files and directories must have the proper permissions for the UID 1001. To achieve this, these 3 images are being run as user 1001 and there are prestart tasks that create their respective directories, while setting the correct ownership, in the host filesystem with the raw exec driver;`),mdx(\"li\",{parentName:\"ul\"},`Only MinIO and Outline ports are exposed. To simplify the pack, MinIO has a static host port of 9000, whereas Outline's port is being randomly assigned. In production it's recommended that none of the services are directly exposed and that traffic is run through a reverse proxy that supports Consul Connect enabled services, like Traefik;`),mdx(\"li\",{parentName:\"ul\"},`MinIO's group has a poststart task that applies a policy that disables directory browsing. It does it by finding the correct Docker container, exec'ing into the container and applying the policy with MinIO's MC;`),mdx(\"li\",{parentName:\"ul\"},`Outline supports a number of authentication methods. Slack is used for demonstration purposes, but enabling more authentication methods is a matter of defining the `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://github.com/outline/outline/blob/main/.env.sample\"},`environment variables`),`;`),mdx(\"li\",{parentName:\"ul\"},`The default variables are defined for a local setup.`)),mdx(\"h2\",{\"id\":\"user-content-requirements\",\"data-text-content\":\"Requirements\",\"className\":\"g-type-display-3\"},`Requirements`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Clients that expect to run this job require:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"https://www.nomadproject.io/docs/drivers/docker\",\"title\":\"Docker volumes\"},`Docker volumes`),` to be enabled within their Docker plugin stanza:`)),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},`plugin `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"docker\"`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`config`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`    `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`volumes`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`      `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`enabled`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token boolean\"},`true`),`\n`,`    `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",{parentName:\"li\",\"href\":\"https://www.nomadproject.io/docs/drivers/raw_exec\",\"title\":\"Raw Exec\"},`Raw Exec`),` driver to be enabled:`)),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},`plugin `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"raw_exec\"`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`config`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`    `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`enabled`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token boolean\"},`true`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.nomadproject.io/docs/job-specification/network#network-modes\",\"title\":\"CNI plugins installed\"},`CNI plugins installed`),` and `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.nomadproject.io/docs/configuration/client#cni_path\",\"title\":\"its path\"},`its path`),` set in the client's configuration if network mode is set to bridge.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.nomadproject.io/docs/integrations/consul-connect\",\"title\":\"Consul Connect\"},`Consul Connect`),` to be enabled in Consul's configuration:`))),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`ports`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`grpc`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token number\"},`8502`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`connect`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`enabled`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token boolean\"},`true`),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"h2\",{\"id\":\"user-content-customizing-the-docker-images\",\"data-text-content\":\"Customizing the Docker images\",\"className\":\"g-type-display-3\"},`Customizing the Docker images`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The 4 docker images can be replaced by using their variable names:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`postgresql_task_image`),mdx(\"li\",{parentName:\"ul\"},`minio_task_image`),mdx(\"li\",{parentName:\"ul\"},`redis_task_image`),mdx(\"li\",{parentName:\"ul\"},`outline_task_image`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`nomad-pack run outline --var outline_task_image=\"outlinewiki/outline:0.59.0\"`,`\n`)),mdx(\"h2\",{\"id\":\"user-content-customizing-the-environment-variables\",\"data-text-content\":\"Customizing the environment variables\",\"className\":\"g-type-display-3\"},`Customizing the environment variables`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The 4 tasks have default environment variables. However, it's recommended to change the ones related to authentication if the services are going to be publicly accessible. Additional environment variables can be passed to nomad-pack, even if not in the default variables file.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Default PostgreSQL environment variables:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`postgresql_task_env_vars = [`,`\n`,`  {`,`\n`,`    key = \"ALLOW_EMPTY_PASSWORD\"`,`\n`,`    value = \"no\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"POSTGRESQL_USERNAME\"`,`\n`,`    value = \"outline_user\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"POSTGRESQL_PASSWORD\"`,`\n`,`    value = \"outline_user_password\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"POSTGRESQL_DATABASE\"`,`\n`,`    value = \"outline\"`,`\n`,`  }`,`\n`,`]`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Default Redis environment variables:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`redis_task_env_vars = [`,`\n`,`  {`,`\n`,`    key = \"ALLOW_EMPTY_PASSWORD\"`,`\n`,`    value = \"no\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"REDIS_PASSWORD\"`,`\n`,`    value = \"redis_password\"`,`\n`,`  }`,`\n`,`]`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Default MinIO environment variables:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`minio_task_env_vars = [`,`\n`,`  {`,`\n`,`    key = \"MINIO_ROOT_USER\"`,`\n`,`    value = \"minio_root_user\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"MINIO_ROOT_PASSWORD\"`,`\n`,`    value = \"minio_root_password\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"MINIO_BROWSER\"`,`\n`,`    value = \"off\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"MINIO_DEFAULT_BUCKETS\"`,`\n`,`    value = \"outline:none\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"MINIO_FORCE_NEW_KEYS\"`,`\n`,`    value = \"yes\"`,`\n`,`  }`,`\n`,`]`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Default Outline environment variables:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`outline_task_env_vars = [`,`\n`,`  {`,`\n`,`    key = \"SECRET_KEY\"`,`\n`,`    value = \"d1434eff0725153e1cc457a013b53dbcdba6a2b40f00729be5680b56fc003897\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"UTILS_SECRET\"`,`\n`,`    value = \"d5c59234b0018fe6036b0376d022c7f5187feb8cc1769c7bc4c282ed8a983b54\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"REDIS_URL\"`,`\n`,`    value = \"redis://:redis_password@$\\${NOMAD_UPSTREAM_ADDR_outline-redis}\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"DATABASE_URL\"`,`\n`,`    value = \"postgres://outline_user:outline_user_password@$\\${NOMAD_UPSTREAM_ADDR_outline-postgresql}/outline\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"DATABASE_URL_TEST\"`,`\n`,`    value = \"postgres://outline_user:outline_user_password@$\\${NOMAD_UPSTREAM_ADDR_outline-postgresql}/outline_test\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"PGSSLMODE\"`,`\n`,`    value = \"disable\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"URL\"`,`\n`,`    value = \"http://localhost:3000\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"PORT\"`,`\n`,`    value = \"3000\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"AWS_ACCESS_KEY_ID\"`,`\n`,`    value = \"minio_root_user\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"AWS_SECRET_ACCESS_KEY\"`,`\n`,`    value = \"minio_root_password\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"AWS_REGION\"`,`\n`,`    value = \"us-east-1\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"AWS_S3_UPLOAD_BUCKET_URL\"`,`\n`,`    value = \"http://localhost:9000\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"AWS_S3_UPLOAD_BUCKET_NAME\"`,`\n`,`    value = \"outline\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"AWS_S3_UPLOAD_MAX_SIZE\"`,`\n`,`    value = \"26214400\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"AWS_S3_FORCE_PATH_STYLE\"`,`\n`,`    value = \"true\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"AWS_S3_ACL\"`,`\n`,`    value = \"private\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"SLACK_KEY\"`,`\n`,`    value = \"123123\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"SLACK_SECRET\"`,`\n`,`    value = \"123123\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"FORCE_HTTPS\"`,`\n`,`    value = \"false\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"ENABLE_UPDATES\"`,`\n`,`    value = \"no\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"WEB_CONCURRENCY\"`,`\n`,`    value = \"1\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"MAXIMUM_IMPORT_SIZE\"`,`\n`,`    value = \"5120000\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"DEBUG\"`,`\n`,`    value = \"http\"`,`\n`,`  },`,`\n`,`  {`,`\n`,`    key = \"DEFAULT_LANGUAGE\"`,`\n`,`    value = \"en_US\"`,`\n`,`  }`,`\n`,`]`,`\n`)),mdx(\"h2\",{\"id\":\"user-content-customizing-ports\",\"data-text-content\":\"Customizing ports\",\"className\":\"g-type-display-3\"},`Customizing ports`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`PostgreSQL and Redis ports are not exposed and communication to it needs to be done via its sidecar proxy.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Outline's ports is exposed and randomly assigned to the host.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`MinIO port is exposed to the host and static.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The usage of a reverse proxy, such as Traefik, is highly recommended.`),mdx(\"h2\",{\"id\":\"user-content-customizing-resources\",\"data-text-content\":\"Customizing resources\",\"className\":\"g-type-display-3\"},`Customizing resources`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The application resource limits can be customized on a task level. The variables names are:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`outline_task_resources`),mdx(\"li\",{parentName:\"ul\"},`postgresql_task_resources`),mdx(\"li\",{parentName:\"ul\"},`redis_task_resources`),mdx(\"li\",{parentName:\"ul\"},`minio_task_resources`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`outline_task_resources = {`,`\n`,`  cpu = 1024`,`\n`,`  memory = 2048`,`\n`,`}`,`\n`)),mdx(\"h2\",{\"id\":\"user-content-setting-the-host-paths\",\"data-text-content\":\"Setting the host paths\",\"className\":\"g-type-display-3\"},`Setting the host paths`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`PostgreSQL, Redis and MinIO are using bind mounts for storage persistence.\nThe path for the mounts can be replaced through the following variables:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`postgresql_task_volume_path`),mdx(\"li\",{parentName:\"ul\"},`redis_task_volume_path`),mdx(\"li\",{parentName:\"ul\"},`minio_task_volume_path`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Example:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},`nomad-pack run outline --var postgresql_task_volume_path=\"/var/lib/outline/postgresql\"`,`\n`)))};MDXContent.isMDXComponent=true;","scope":{}}},"__N_SSG":true}