{"pageProps":{"metadata":{"title":"Nutanix Builder | Integrations"},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"bf907899-0078-4dfd-abce-e36594b64f11","slug":"nutanix","name":"Nutanix","description":"A multi-component plugin can be used with Packer to create custom images.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"partner","repo_url":"https://github.com/nutanix-cloud-native/packer-plugin-nutanix","subdirectory":"/.web-docs","created_at":"2024-02-07T11:30:47.548Z","updated_at":"2024-02-07T12:20:47.378Z","hide_versions":false,"organization":{"id":"9f3b64e6-6f6c-4a46-97f4-de628f669b6b","slug":"nutanix-cloud-native","created_at":"2023-08-14T20:21:46.598Z","updated_at":"2023-08-14T20:21:46.598Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["0.8.1"],"components":[{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"}],"flags":[],"integration_type":null},"activeRelease":{"id":"665a509b-88c1-4d47-8a20-6192e368d571","integration_id":"bf907899-0078-4dfd-abce-e36594b64f11","version":"0.8.1","readme":"\nThe `Nutanix` multi-component plugin can be used with HashiCorp [Packer](https://www.packer.io)\nto create custom images.\n\n### Installation\n\nTo install this plugin, copy and paste this code into your Packer configuration, then run [`packer init`](https://www.packer.io/docs/commands/init).\n\n```\npacker {\n  required_plugins {\n    nutanix = {\n      version = \">= 0.8.0\"\n      source  = \"github.com/nutanix-cloud-native/nutanix\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\n$ packer plugins install github.com/nutanix-cloud-native/nutanix\n```\n\n### Components\n\n#### Builders\n\n- [nutanix](/packer/integrations/nutanix-cloud-native/nutanix/latest/components/builder/nutanix) - The Nutanix builder will create a temporary VM as foundation of your Packer image, apply all providers you define to customize your image, then clone the VM disk image as your final Packer image.\n\n### Limitations\n#### Building temporary ISOs on MacOS\nIf you want to use the cd_files Option to create an additional iso-image for kickstart-files or similar be aware that MacOS wonÂ´t create a suitable file.\nPlease install xorriso for support on MacOS.\n```\n brew install xorriso\n```\n\n### Contributing\nSee the [contributing docs](https://github.com/nutanix-cloud-native/packer-plugin-nutanix/blob/main/CONTRIBUTING.md).\n\n### Support\n#### Community Plus\n\nThis code is developed in the open with input from the community through issues and PRs. A Nutanix engineering team serves as the maintainer. Documentation is available in the project repository.\n\nIssues and enhancement requests can be submitted in the [Issues tab of this repository](https://github.com/nutanix-cloud-native/packer-plugin-nutanix/issues). Please search for and review the existing open issues before submitting a new issue.\n\n### License\nThe project is released under version 2.0 of the [Apache license](http://www.apache.org/licenses/LICENSE-2.0).\n\n","created_at":"2024-02-07T12:20:47.827Z","updated_at":"2024-02-07T12:20:47.827Z","components":[{"id":"76922c83-bdc7-4dbe-8294-be853c09b4e7","integration_release_id":"665a509b-88c1-4d47-8a20-6192e368d571","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"This document is going to detail all Nutanix plugin parameters.\n\n## Principle\nThe Nutanix plugin will create a temporary VM as foundation of your Packer image, apply all providers you define to customize your image, then clone the VM disk image as your final Packer image.\n\n## Environment configuration\nThese parameters allow to define information about platform and temporary VM used to create the image.\n\n### Required\n  - `nutanix_username` (string) - User used for Prism Central login.\n  - `nutanix_password` (string) - Password of this user for Prism Central login.\n  - `nutanix_endpoint` (string) - Prism Central FQDN or IP.\n  - `cluster_name` or `cluster_uuid` (string) - Nutanix cluster name or uuid used to create and store image.\n  - `os_type` (string) - OS Type (\"Linux\" or \"Windows\").\n\n### Optional\n  - `nutanix_port` (number) - Port used for connection to Prism Central.\n  - `nutanix_insecure` (bool) - Authorize connection to Prism Central without valid certificate.\n  - `vm_name` (string) - Name of the temporary VM to create. If not specified a random `packer-*` name will be used.\n  - `cpu` (number) - Number of vCPU for temporary VM.\n  - `memory_mb` (number) - Size of vRAM for temporary VM (in megabytes).\n  - `cd_files` (array of strings) - A list of files to place onto a CD that is attached when the VM is booted. This can include either files or directories; any directories will be copied onto the CD recursively, preserving directory structure hierarchy.\n  - `cd_label` (string) - Label of this CD Drive.\n  - `boot_type` (string) - Type of boot used on the temporary VM (\"legacy\" or \"uefi\").\n  - `ip_wait_timeout` (duration string | ex: \"0h42m0s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'. Defaults to 15m (15 minutes). See the Golang [ParseDuration](https://golang.org/pkg/time/#ParseDuration) documentation for full details.\n  - `vm_categories` ([]Category) - Assign Categories to the vm.\n  - `project` (string) - Assign Project to the vm.\n  \n\n\n## Output configuration\nThese parameters allow to configure everything around image creation, from the temporary VM connection to the final image definition.\n\n### All OS\n- `image_name` (string) - Name of the output image.\n- `image_description` (string) - Description for output image.\n- `image_categories` ([]Category) - Assign Categories to the image.\n- `force_deregister` (bool) - Allow output image override if already exists.\n- `image_delete` (bool) - Delete image once build process is completed (default is false).\n- `image_export` (bool) - Export raw image in the current folder (default is false).\n- `shutdown_command` (string) - Command line to shutdown your temporary VM.\n- `shutdown_timeout` (string) - Timeout for VM shutdown (format : 2m).\n- `vm_force_delete` (bool) - Delete vm even if build is not succesful (default is false).\n- `communicator` (string) - Protocol used for Packer connection (ex \"winrm\" or \"ssh\"). Default is : \"ssh\".\n\n### Dedicated to Linux\n- `user_data` (string) - cloud-init content base64 encoded.\n- `ssh_username` (string) - user for ssh connection initiated by Packer.\n- `ssh_password` (string) - password for the ssh user.\n\n### Dedicated to Windows\n- `winrm_port` (number) - Port for WinRM communication (default is 5986).\n- `winrm_insecure` (bool) - Allow insecure connection to WinRM.\n- `winrm_use_ssl` (bool) - Request SSL connection with WinRM.\n- `winrm_timeout` (string) - Timeout for WinRM (format 45m).\n- `winrm_username` (string) - User login for WinRM connection.\n- `winrm_password` (string) - Password this User.\n\n## Disk configuration\nUse `vm_disks{}` entry to configure disk to your VM image. If you want to configure several disks, use this entry multiple times.\n\nAll parameters of this `vm_disks` section are described below.\n\n3 types of disk configurations can be used:\n- disk (create an empty disk)\n- disk image (create disk from Nutanix image library)\n- ISO image (create disk from ISO image)\n\n### Disk \n- `image_type` (string) - \"DISK\".\n- `disk_size_gb` (number) - size of th disk (in gigabytes).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"DISK\"\n      disk_size_gb = 30\n  }\n```\n\n### Disk image\n- `image_type` (string) - \"DISK_IMAGE\" (you must use one of the three following parameters to source the image).\n- `source_image_name` (string) - Name of the image used as disk source.\n- `source_image_uuid` (string) - UUID of the image used as disk source.\n- `source_image_uri` (string) - URI of the image used as disk source (if image is not already on the cluster, it will download and store it before launching output image creation process).\n- `source_image_delete` (bool) - Delete source image once build process is completed (default is false).\n- `source_image_force` (bool) - Always download and replace source image even if already exist (default is false).\n- `disk_size_gb` (number) - size of the disk (in gigabytes).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"DISK_IMAGE\"\n      source_image_name = \"<myDiskImage>\"\n      disk_size_gb = 40\n  }\n```\n### ISO Image\n- `image_type` (string) - \"ISO_IMAGE\".\n- `source_image_name` (string) - Name of the ISO image to mount.\n- `source_image_uuid` (string) - UUID of the ISO image to mount.\n- `source_image_delete` (bool) - Delete source image once build process is completed (default is false).\n- `source_image_force` (bool) - Always download and replace source image even if already exist (default is false).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"ISO_IMAGE\"\n      source_image_name = \"<myISOimage>\"\n  }\n```\n\n## Network Configuration\nUse `vm_nics{}` entry to configure NICs in your image\n\nIn this section, you have to define network you will to connect with one of this keyword :\n\n- `subnet_name` (string) - Name of the cluster subnet to use.\n- `subnet_uuid` (string) - UUID of the cluster subnet to use.\n\nSample\n```hcl\n  vm_nics {\n    subnet_name = \"<mySubnet>\"\n  }\n```\n\n## Categories Configuration\n\nUse `image_categories{}` and `vm_categories{}` to assign category to your image or vm.  If you want to assign multiple categories , use the entry multiple times.\n\nIn this section, you have to define category you will to assign with the following parameters:\n\n- `key` (string) - Name of the category to assign.\n- `value` (string) - Value of the category to assign.\n\nSample\n```hcl\n  image_categories {\n    key = \"OSType\"\n    value = \"ubuntu-22.04\"\n  }\n```\n\nNote: Categories must already be present in Prism Central.\n\n## Samples\n\nYou can find samples [here](https://github.com/nutanix-cloud-native/packer-plugin-nutanix/tree/main/example) for these instructions usage.\n","created_at":"2024-02-07T12:20:48.170Z","updated_at":"2024-02-07T12:20:48.170Z","name":"Nutanix plugin","slug":"nutanix","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]}]},"component":{"id":"76922c83-bdc7-4dbe-8294-be853c09b4e7","integration_release_id":"665a509b-88c1-4d47-8a20-6192e368d571","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"This document is going to detail all Nutanix plugin parameters.\n\n## Principle\nThe Nutanix plugin will create a temporary VM as foundation of your Packer image, apply all providers you define to customize your image, then clone the VM disk image as your final Packer image.\n\n## Environment configuration\nThese parameters allow to define information about platform and temporary VM used to create the image.\n\n### Required\n  - `nutanix_username` (string) - User used for Prism Central login.\n  - `nutanix_password` (string) - Password of this user for Prism Central login.\n  - `nutanix_endpoint` (string) - Prism Central FQDN or IP.\n  - `cluster_name` or `cluster_uuid` (string) - Nutanix cluster name or uuid used to create and store image.\n  - `os_type` (string) - OS Type (\"Linux\" or \"Windows\").\n\n### Optional\n  - `nutanix_port` (number) - Port used for connection to Prism Central.\n  - `nutanix_insecure` (bool) - Authorize connection to Prism Central without valid certificate.\n  - `vm_name` (string) - Name of the temporary VM to create. If not specified a random `packer-*` name will be used.\n  - `cpu` (number) - Number of vCPU for temporary VM.\n  - `memory_mb` (number) - Size of vRAM for temporary VM (in megabytes).\n  - `cd_files` (array of strings) - A list of files to place onto a CD that is attached when the VM is booted. This can include either files or directories; any directories will be copied onto the CD recursively, preserving directory structure hierarchy.\n  - `cd_label` (string) - Label of this CD Drive.\n  - `boot_type` (string) - Type of boot used on the temporary VM (\"legacy\" or \"uefi\").\n  - `ip_wait_timeout` (duration string | ex: \"0h42m0s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'. Defaults to 15m (15 minutes). See the Golang [ParseDuration](https://golang.org/pkg/time/#ParseDuration) documentation for full details.\n  - `vm_categories` ([]Category) - Assign Categories to the vm.\n  - `project` (string) - Assign Project to the vm.\n  \n\n\n## Output configuration\nThese parameters allow to configure everything around image creation, from the temporary VM connection to the final image definition.\n\n### All OS\n- `image_name` (string) - Name of the output image.\n- `image_description` (string) - Description for output image.\n- `image_categories` ([]Category) - Assign Categories to the image.\n- `force_deregister` (bool) - Allow output image override if already exists.\n- `image_delete` (bool) - Delete image once build process is completed (default is false).\n- `image_export` (bool) - Export raw image in the current folder (default is false).\n- `shutdown_command` (string) - Command line to shutdown your temporary VM.\n- `shutdown_timeout` (string) - Timeout for VM shutdown (format : 2m).\n- `vm_force_delete` (bool) - Delete vm even if build is not succesful (default is false).\n- `communicator` (string) - Protocol used for Packer connection (ex \"winrm\" or \"ssh\"). Default is : \"ssh\".\n\n### Dedicated to Linux\n- `user_data` (string) - cloud-init content base64 encoded.\n- `ssh_username` (string) - user for ssh connection initiated by Packer.\n- `ssh_password` (string) - password for the ssh user.\n\n### Dedicated to Windows\n- `winrm_port` (number) - Port for WinRM communication (default is 5986).\n- `winrm_insecure` (bool) - Allow insecure connection to WinRM.\n- `winrm_use_ssl` (bool) - Request SSL connection with WinRM.\n- `winrm_timeout` (string) - Timeout for WinRM (format 45m).\n- `winrm_username` (string) - User login for WinRM connection.\n- `winrm_password` (string) - Password this User.\n\n## Disk configuration\nUse `vm_disks{}` entry to configure disk to your VM image. If you want to configure several disks, use this entry multiple times.\n\nAll parameters of this `vm_disks` section are described below.\n\n3 types of disk configurations can be used:\n- disk (create an empty disk)\n- disk image (create disk from Nutanix image library)\n- ISO image (create disk from ISO image)\n\n### Disk \n- `image_type` (string) - \"DISK\".\n- `disk_size_gb` (number) - size of th disk (in gigabytes).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"DISK\"\n      disk_size_gb = 30\n  }\n```\n\n### Disk image\n- `image_type` (string) - \"DISK_IMAGE\" (you must use one of the three following parameters to source the image).\n- `source_image_name` (string) - Name of the image used as disk source.\n- `source_image_uuid` (string) - UUID of the image used as disk source.\n- `source_image_uri` (string) - URI of the image used as disk source (if image is not already on the cluster, it will download and store it before launching output image creation process).\n- `source_image_delete` (bool) - Delete source image once build process is completed (default is false).\n- `source_image_force` (bool) - Always download and replace source image even if already exist (default is false).\n- `disk_size_gb` (number) - size of the disk (in gigabytes).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"DISK_IMAGE\"\n      source_image_name = \"<myDiskImage>\"\n      disk_size_gb = 40\n  }\n```\n### ISO Image\n- `image_type` (string) - \"ISO_IMAGE\".\n- `source_image_name` (string) - Name of the ISO image to mount.\n- `source_image_uuid` (string) - UUID of the ISO image to mount.\n- `source_image_delete` (bool) - Delete source image once build process is completed (default is false).\n- `source_image_force` (bool) - Always download and replace source image even if already exist (default is false).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"ISO_IMAGE\"\n      source_image_name = \"<myISOimage>\"\n  }\n```\n\n## Network Configuration\nUse `vm_nics{}` entry to configure NICs in your image\n\nIn this section, you have to define network you will to connect with one of this keyword :\n\n- `subnet_name` (string) - Name of the cluster subnet to use.\n- `subnet_uuid` (string) - UUID of the cluster subnet to use.\n\nSample\n```hcl\n  vm_nics {\n    subnet_name = \"<mySubnet>\"\n  }\n```\n\n## Categories Configuration\n\nUse `image_categories{}` and `vm_categories{}` to assign category to your image or vm.  If you want to assign multiple categories , use the entry multiple times.\n\nIn this section, you have to define category you will to assign with the following parameters:\n\n- `key` (string) - Name of the category to assign.\n- `value` (string) - Value of the category to assign.\n\nSample\n```hcl\n  image_categories {\n    key = \"OSType\"\n    value = \"ubuntu-22.04\"\n  }\n```\n\nNote: Categories must already be present in Prism Central.\n\n## Samples\n\nYou can find samples [here](https://github.com/nutanix-cloud-native/packer-plugin-nutanix/tree/main/example) for these instructions usage.\n","created_at":"2024-02-07T12:20:48.170Z","updated_at":"2024-02-07T12:20:48.170Z","name":"Nutanix plugin","slug":"nutanix","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},"processedVariablesMarkdown":{},"anchorLinks":[{"id":"principle","level":2,"title":"Principle"},{"id":"environment-configuration","level":2,"title":"Environment configuration"},{"id":"required","level":3,"title":"Required"},{"id":"optional","level":3,"title":"Optional"},{"id":"output-configuration","level":2,"title":"Output configuration"},{"id":"all-os","level":3,"title":"All OS"},{"id":"dedicated-to-linux","level":3,"title":"Dedicated to Linux"},{"id":"dedicated-to-windows","level":3,"title":"Dedicated to Windows"},{"id":"disk-configuration","level":2,"title":"Disk configuration"},{"id":"disk","level":3,"title":"Disk"},{"id":"disk-image","level":3,"title":"Disk image"},{"id":"iso-image","level":3,"title":"ISO Image"},{"id":"network-configuration","level":2,"title":"Network Configuration"},{"id":"categories-configuration","level":2,"title":"Categories Configuration"},{"id":"samples","level":2,"title":"Samples"}],"serializedREADME":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",{\"className\":\"g-type-long-body\"},`This document is going to detail all Nutanix plugin parameters.`),mdx(\"h2\",{\"id\":\"user-content-principle\",\"data-text-content\":\"Principle\",\"className\":\"g-type-display-3\"},`Principle`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The Nutanix plugin will create a temporary VM as foundation of your Packer image, apply all providers you define to customize your image, then clone the VM disk image as your final Packer image.`),mdx(\"h2\",{\"id\":\"user-content-environment-configuration\",\"data-text-content\":\"Environment configuration\",\"className\":\"g-type-display-3\"},`Environment configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`These parameters allow to define information about platform and temporary VM used to create the image.`),mdx(\"h3\",{\"id\":\"user-content-required\",\"data-text-content\":\"Required\",\"className\":\"g-type-display-4\"},`Required`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_username`),` (string) - User used for Prism Central login.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_password`),` (string) - Password of this user for Prism Central login.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_endpoint`),` (string) - Prism Central FQDN or IP.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cluster_name`),` or `,mdx(\"inlineCode\",{parentName:\"li\"},`cluster_uuid`),` (string) - Nutanix cluster name or uuid used to create and store image.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`os_type`),` (string) - OS Type (\"Linux\" or \"Windows\").`)),mdx(\"h3\",{\"id\":\"user-content-optional\",\"data-text-content\":\"Optional\",\"className\":\"g-type-display-4\"},`Optional`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_port`),` (number) - Port used for connection to Prism Central.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_insecure`),` (bool) - Authorize connection to Prism Central without valid certificate.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`vm_name`),` (string) - Name of the temporary VM to create. If not specified a random `,mdx(\"inlineCode\",{parentName:\"li\"},`packer-*`),` name will be used.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cpu`),` (number) - Number of vCPU for temporary VM.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`memory_mb`),` (number) - Size of vRAM for temporary VM (in megabytes).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cd_files`),` (array of strings) - A list of files to place onto a CD that is attached when the VM is booted. This can include either files or directories; any directories will be copied onto the CD recursively, preserving directory structure hierarchy.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cd_label`),` (string) - Label of this CD Drive.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`boot_type`),` (string) - Type of boot used on the temporary VM (\"legacy\" or \"uefi\").`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`ip_wait_timeout`),` (duration string | ex: \"0h42m0s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'. Defaults to 15m (15 minutes). See the Golang `,mdx(\"a\",{parentName:\"li\",\"href\":\"https://golang.org/pkg/time/#ParseDuration\"},`ParseDuration`),` documentation for full details.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`vm_categories`),` ([]Category) - Assign Categories to the vm.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`project`),` (string) - Assign Project to the vm.`)),mdx(\"h2\",{\"id\":\"user-content-output-configuration\",\"data-text-content\":\"Output configuration\",\"className\":\"g-type-display-3\"},`Output configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`These parameters allow to configure everything around image creation, from the temporary VM connection to the final image definition.`),mdx(\"h3\",{\"id\":\"user-content-all-os\",\"data-text-content\":\"All OS\",\"className\":\"g-type-display-4\"},`All OS`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_name`),` (string) - Name of the output image.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_description`),` (string) - Description for output image.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_categories`),` ([]Category) - Assign Categories to the image.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`force_deregister`),` (bool) - Allow output image override if already exists.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_delete`),` (bool) - Delete image once build process is completed (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_export`),` (bool) - Export raw image in the current folder (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`shutdown_command`),` (string) - Command line to shutdown your temporary VM.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`shutdown_timeout`),` (string) - Timeout for VM shutdown (format : 2m).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`vm_force_delete`),` (bool) - Delete vm even if build is not succesful (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`communicator`),` (string) - Protocol used for Packer connection (ex \"winrm\" or \"ssh\"). Default is : \"ssh\".`)),mdx(\"h3\",{\"id\":\"user-content-dedicated-to-linux\",\"data-text-content\":\"Dedicated to Linux\",\"className\":\"g-type-display-4\"},`Dedicated to Linux`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`user_data`),` (string) - cloud-init content base64 encoded.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`ssh_username`),` (string) - user for ssh connection initiated by Packer.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`ssh_password`),` (string) - password for the ssh user.`)),mdx(\"h3\",{\"id\":\"user-content-dedicated-to-windows\",\"data-text-content\":\"Dedicated to Windows\",\"className\":\"g-type-display-4\"},`Dedicated to Windows`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_port`),` (number) - Port for WinRM communication (default is 5986).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_insecure`),` (bool) - Allow insecure connection to WinRM.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_use_ssl`),` (bool) - Request SSL connection with WinRM.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_timeout`),` (string) - Timeout for WinRM (format 45m).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_username`),` (string) - User login for WinRM connection.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_password`),` (string) - Password this User.`)),mdx(\"h2\",{\"id\":\"user-content-disk-configuration\",\"data-text-content\":\"Disk configuration\",\"className\":\"g-type-display-3\"},`Disk configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_disks{}`),` entry to configure disk to your VM image. If you want to configure several disks, use this entry multiple times.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`All parameters of this `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_disks`),` section are described below.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`3 types of disk configurations can be used:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`disk (create an empty disk)`),mdx(\"li\",{parentName:\"ul\"},`disk image (create disk from Nutanix image library)`),mdx(\"li\",{parentName:\"ul\"},`ISO image (create disk from ISO image)`)),mdx(\"h3\",{\"id\":\"user-content-disk\",\"data-text-content\":\"Disk\",\"className\":\"g-type-display-4\"},`Disk`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_type`),` (string) - \"DISK\".`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`disk_size_gb`),` (number) - size of th disk (in gigabytes).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`vm_disks`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`      `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`image_type`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"DISK\"`),`\n`,`      `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`disk_size_gb`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token number\"},`30`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"h3\",{\"id\":\"user-content-disk-image\",\"data-text-content\":\"Disk image\",\"className\":\"g-type-display-4\"},`Disk image`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_type`),` (string) - \"DISK_IMAGE\" (you must use one of the three following parameters to source the image).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_name`),` (string) - Name of the image used as disk source.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uuid`),` (string) - UUID of the image used as disk source.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uri`),` (string) - URI of the image used as disk source (if image is not already on the cluster, it will download and store it before launching output image creation process).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_delete`),` (bool) - Delete source image once build process is completed (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_force`),` (bool) - Always download and replace source image even if already exist (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`disk_size_gb`),` (number) - size of the disk (in gigabytes).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`vm_disks`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`      `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`image_type`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"DISK_IMAGE\"`),`\n`,`      `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`source_image_name`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"<myDiskImage>\"`),`\n`,`      `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`disk_size_gb`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token number\"},`40`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"h3\",{\"id\":\"user-content-iso-image\",\"data-text-content\":\"ISO Image\",\"className\":\"g-type-display-4\"},`ISO Image`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_type`),` (string) - \"ISO_IMAGE\".`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_name`),` (string) - Name of the ISO image to mount.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uuid`),` (string) - UUID of the ISO image to mount.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_delete`),` (bool) - Delete source image once build process is completed (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_force`),` (bool) - Always download and replace source image even if already exist (default is false).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`vm_disks`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`      `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`image_type`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"ISO_IMAGE\"`),`\n`,`      `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`source_image_name`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"<myISOimage>\"`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"h2\",{\"id\":\"user-content-network-configuration\",\"data-text-content\":\"Network Configuration\",\"className\":\"g-type-display-3\"},`Network Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_nics{}`),` entry to configure NICs in your image`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In this section, you have to define network you will to connect with one of this keyword :`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`subnet_name`),` (string) - Name of the cluster subnet to use.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`subnet_uuid`),` (string) - UUID of the cluster subnet to use.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample`),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`vm_nics`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`    `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`subnet_name`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"<mySubnet>\"`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"h2\",{\"id\":\"user-content-categories-configuration\",\"data-text-content\":\"Categories Configuration\",\"className\":\"g-type-display-3\"},`Categories Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`image_categories{}`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_categories{}`),` to assign category to your image or vm.  If you want to assign multiple categories , use the entry multiple times.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In this section, you have to define category you will to assign with the following parameters:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`key`),` (string) - Name of the category to assign.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`value`),` (string) - Value of the category to assign.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample`),mdx(\"pre\",{\"className\":\"language-hcl\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-hcl\"},`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token keyword\"},`image_categories`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`{`),`\n`,`    `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`key`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"OSType\"`),`\n`,`    `,mdx(\"span\",{parentName:\"code\",\"className\":\"token property\"},`value`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`=`),` `,mdx(\"span\",{parentName:\"code\",\"className\":\"token string\"},`\"ubuntu-22.04\"`),`\n`,`  `,mdx(\"span\",{parentName:\"code\",\"className\":\"token punctuation\"},`}`),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Note: Categories must already be present in Prism Central.`),mdx(\"h2\",{\"id\":\"user-content-samples\",\"data-text-content\":\"Samples\",\"className\":\"g-type-display-3\"},`Samples`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`You can find samples `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/nutanix-cloud-native/packer-plugin-nutanix/tree/main/example\"},`here`),` for these instructions usage.`))};MDXContent.isMDXComponent=true;","scope":{}},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Nutanix","url":"/packer/integrations/nutanix-cloud-native/nutanix","isCurrentPage":false},{"title":"v0.8.1","url":"/packer/integrations/nutanix-cloud-native/nutanix/v0.8.1","isCurrentPage":false},{"title":"Components"},{"title":"Builder"},{"title":"Nutanix plugin","url":"/packer/integrations/nutanix-cloud-native/nutanix/latest/components/builder/nutanix","isCurrentPage":true}]},"__N_SSG":true}