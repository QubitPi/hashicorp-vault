{"pageProps":{"metadata":{"title":"Nutanix Builder | Integrations"},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"bf907899-0078-4dfd-abce-e36594b64f11","slug":"nutanix","name":"Nutanix","description":"A multi-component plugin can be used with Packer to create custom images.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"partner","repo_url":"https://github.com/nutanix-cloud-native/packer-plugin-nutanix","subdirectory":"/.web-docs","created_at":"2024-02-07T11:30:47.548Z","updated_at":"2024-02-07T12:20:47.378Z","hide_versions":false,"organization":{"id":"9f3b64e6-6f6c-4a46-97f4-de628f669b6b","slug":"nutanix-cloud-native","created_at":"2023-08-14T20:21:46.598Z","updated_at":"2023-08-14T20:21:46.598Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["1.1.1","1.1.0","1.0.0","0.13.1","0.13.0","0.12.2","0.12.1","0.12.0","0.11.0","0.10.0","0.9.4","0.9.3","0.9.2","0.9.1","0.9.0","0.8.1"],"components":[{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"}],"flags":[],"integration_type":null},"activeRelease":{"id":"febfcfc3-aded-4ed8-95c2-4fec7d79b5a1","integration_id":"bf907899-0078-4dfd-abce-e36594b64f11","version":"1.1.1","readme":"\nThe `Nutanix` multi-component plugin can be used with HashiCorp [Packer](https://www.packer.io) to create custom images.\n\n### Installation\n\nTo install this plugin, copy and paste this code into your Packer configuration, then run [`packer init`](https://www.packer.io/docs/commands/init).\n\n```\npacker {\n  required_plugins {\n    nutanix = {\n      version = \">= 1.1.0\"\n      source  = \"github.com/nutanix-cloud-native/nutanix\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\n$ packer plugins install github.com/nutanix-cloud-native/nutanix\n```\n\n### Components\n\n#### Builders\n\n- [nutanix](/packer/integrations/nutanix-cloud-native/nutanix/latest/components/builder/nutanix) - The Nutanix builder will create a temporary VM as foundation of your Packer image, apply all providers you define to customize your image, then clone the VM disk image as your final Packer image.\n\n### Limitations\n#### Building temporary ISOs on MacOS\nIf you want to use the `cd_files` option to create an additional ISO image for kickstart files or similar purposes, be aware that macOS does not generate a compatible file by default.  \nTo enable support on macOS, please install xorriso.\n```\n brew install xorriso\n```\n\n### Contributing\nSee the [contributing docs](https://github.com/nutanix-cloud-native/packer-plugin-nutanix/blob/main/CONTRIBUTING.md).\n\n### Support\n#### Community Plus\n\nThis code is developed in the open with input from the community through issues and PRs. A Nutanix engineering team serves as the maintainer. Documentation is available in the project repository.\n\nIssues and enhancement requests can be submitted in the [Issues tab of this repository](https://github.com/nutanix-cloud-native/packer-plugin-nutanix/issues). Please search for and review the existing open issues before submitting a new issue.\n\n### License\nThe project is released under version 2.0 of the [Apache license](http://www.apache.org/licenses/LICENSE-2.0).\n\n","created_at":"2025-07-21T10:13:28.115Z","updated_at":"2025-07-21T10:13:28.115Z","components":[{"id":"08a10880-0d26-4553-bb8c-23a57752ef62","integration_release_id":"febfcfc3-aded-4ed8-95c2-4fec7d79b5a1","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"This document is going to detail all Nutanix plugin parameters.\n\n## Principle\nThe Nutanix plugin will create a temporary VM as foundation of your Packer image, apply all providers you define to customize your image, then clone the VM disk image as your final Packer image.\n\n## Environment configuration\nThese parameters allow to define information about platform and temporary VM used to create the image.\n\n### Required\n  - `nutanix_username` (string) - User used for Prism Central login.\n  - `nutanix_password` (string) - Password of this user for Prism Central login.\n  - `nutanix_endpoint` (string) - Prism Central FQDN or IP.\n  - `cluster_name` or `cluster_uuid` (string) - Nutanix cluster name or uuid used to create and store image.\n  - `os_type` (string) - OS Type (\"Linux\" or \"Windows\").\n\n### Optional\n  - `nutanix_port` (number) - Port used for connection to Prism Central.\n  - `nutanix_insecure` (bool) - Authorize connection to Prism Central without valid certificate.\n  - `vm_name` (string) - Name of the temporary VM to create. If not specified a random `packer-*` name will be used.\n  - `cpu` (number) - Number of vCPU for temporary VM (default is 1).\n  - `core` (number) - Number of cores per vCPU for temporary VM (default is 1).\n  - `memory_mb` (number) - Size of vRAM for temporary VM (in megabytes).\n  - `hardware_virtualization` (bool) - Enable hardware virtualization for temporary VM (default is false).\n  - `cd_files` (array of strings) - A list of files to place onto a CD that is attached when the VM is booted. This can include either files or directories; any directories will be copied onto the CD recursively, preserving directory structure hierarchy.\n  - `cd_label` (string) - Label of this CD Drive.\n  - `boot_type` (string) - Type of boot used on the temporary VM (\"legacy\", \"uefi\" or \"secure_boot\", default is \"legacy\").\n  - `boot_priority` (string) - Priority of boot device (\"cdrom\" or \"disk\", default is \"cdrom\". UEFI support need AHV 8.0.12+, 9.1.1.2+, 9.1.3+, 9.2+ or 10.0+). \n  - `vm_categories` ([]Category) - Assign Categories to the vm.\n  - `project` (string) - Assign Project to the vm.\n  - `gpu` ([] GPU) - GPU in cluster name to be attached on temporary VM.\n  - `serialport` (bool) - Add a serial port to the temporary VM. This is required for some Linux Cloud Images that will have a kernel panic if a serial port is not present on first boot.\n\n#### vTPM\n\nUse `vtpm{}` entry to configure vTPM on the temporary VM.\n\n\nAll parameters of this `vtpm` section are described below.\n\n- `enabled` (bool) - Enable vTPM for the temporary VM (default is false).\n\n\nSample:\n```hcl\n  vtpm {\n      enabled = true\n  }\n```\n\n## Output configuration\nThese parameters allow to configure everything around image creation, from the temporary VM connection to the final image definition.\n\n### All OS\n- `image_name` (string) - Name of the output image.\n- `image_description` (string) - Description for output image.\n- `image_categories` ([]Category) - Assign Categories to the image.\n- `force_deregister` (bool) - Allow output image override if already exists.\n- `image_delete` (bool) - Delete image once build process is completed (default is false).\n- `image_skip` (bool) - Skip image creation (default is false).\n- `image_export` (bool) - Export raw image in the current folder (default is false).\n- `fail_if_image_exists` (bool) - Fail the build if an image with the same name already exists (default is false).\n- `shutdown_command` (string) - Command line to shutdown your temporary VM.\n- `shutdown_timeout` (string) - Timeout for VM shutdown (format : 2m).\n- `vm_force_delete` (bool) - Delete vm even if build is not succesful (default is false).\n- `vm_retain` (bool) - Retain the temporary VM after build process is completed (default is false).\n- `disable_stop_instance` (bool) - When `true`, prevents Packer from automatically stopping the build instance after provisioning completes. Your final provisioner must handle stopping the instance, or the build will timeout (default is false).\n\n### Dedicated to Linux\n- `user_data` (string) - cloud-init content base64 encoded.\n- `ssh_username` (string) - user for ssh connection initiated by Packer.\n- `ssh_password` (string) - password for the ssh user.\n\n### Dedicated to Windows\n- `winrm_port` (number) - Port for WinRM communication (default is 5986).\n- `winrm_insecure` (bool) - Allow insecure connection to WinRM.\n- `winrm_use_ssl` (bool) - Request SSL connection with WinRM.\n- `winrm_timeout` (string) - Timeout for WinRM (format 45m).\n- `winrm_username` (string) - User login for WinRM connection.\n- `winrm_password` (string) - Password this User.\n\n## Disk configuration\nUse `vm_disks{}` entry to configure disk to your VM image. If you want to configure several disks, use this entry multiple times.\n\nAll parameters of this `vm_disks` section are described below.\n\n3 types of disk configurations can be used:\n- disk (create an empty disk)\n- disk image (create disk from Nutanix image library)\n- ISO image (create disk from ISO image)\n\n### Disk \n- `image_type` (string) - \"DISK\".\n- `disk_size_gb` (number) - size of th disk (in gigabytes).\n- `storage_container_uuid` (string) - UUID of the storage container where the disk image will be created. If not specified, the default storage container for the cluster will be used.\n\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"DISK\"\n      disk_size_gb = 30\n  }\n```\n\n### Disk image\n- `image_type` (string) - \"DISK_IMAGE\" (you must use one of the three following parameters to source the image).\n- `source_image_name` (string) - Name of the image used as disk source.\n- `source_image_uuid` (string) - UUID of the image used as disk source.\n- `source_image_uri` (string) - URI of the image used as disk source (if image is not already on the cluster, it will download and store it before launching output image creation process).\n- `source_image_path` (string) - Path to the local image used as disk source (it will upload it before launching output image creation process).\n- `source_image_checksum` (string) - Checksum of the image used as disk source (work only with `source_image_uri` and if image is not already present in the library).\n- `source_image_checksum_type` (string) - Type of checksum used for `source_image_checksum` (`sha256` or `sha1` ).\n- `source_image_delete` (bool) - Delete image once build process is completed (default is false).\n- `source_image_force` (bool) - Always download and replace image even if already exist (default is false).\n- `disk_size_gb` (number) - size of the disk (in gigabytes).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"DISK_IMAGE\"\n      source_image_name = \"<myDiskImage>\"\n      disk_size_gb = 40\n  }\n```\n### ISO Image\n- `image_type` (string) - \"ISO_IMAGE\".\n- `source_image_name` (string) - Name of the ISO image to mount.\n- `source_image_uuid` (string) - UUID of the ISO image to mount.\n- `source_image_uri` (string) - URI of the image used as ISO source (if image is not already on the cluster, it will download and store it before launching output image creation process).\n- `source_image_path` (string) - Path to the local image used as ISO source (it will upload it before launching output image creation process).\n- `source_image_checksum` (string) - Checksum of the image used as ISO source (work only with `source_image_uri` and if image is not already present in the library).\n- `source_image_checksum_type` (string) - Type of checksum used for `source_image_checksum` (`sha256` or `sha1` ).\n- `source_image_delete` (bool) - Delete source image once build process is completed (default is false).\n- `source_image_force` (bool) - Always download and replace source image even if already exist (default is false).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"ISO_IMAGE\"\n      source_image_name = \"<myISOimage>\"\n  }\n```\n\n## VM Clean\n\nUse `vm_clean{}` entry to configure VM cleaning options. This section allows you to clean up the temporary VM after the image creation process is completed.\nIt can be useful to remove unnecessary components or reset the VM to a clean state before creating a template or exporting an OVA.\n\nAll parameters of this `vm_clean` section are described below.\n\n- `cdrom` (bool) - Remove all CD-ROMs from the VM (default is false).\n\nSample:\n```hcl\n  vm_clean {\n      cdrom = true\n  }\n```\n\n## Template configuration\n\nUse `template{}` entry to create a template from the temporary VM.\n\nTemplate feature need Prism Central 2024.3+ or later.\n\nAll parameters of this `template` section are described below.\n\n- `create` (bool) - Create a template from the temporary VM (default is false).\n- `name` (string) - Name of the template to create (default is the vm_name).\n- `description` (string) - Description of the template to create (default is no description).\n\nSample:\n```hcl\n  template {\n      create = true\n      name = \"myTemplate\"\n      description = \"This is my template\"\n  }\n```\n\n## OVA Config\nUse `ova{}` entry to configure the OVA creation & export\n\nAll parameters of this `ova` section are described below.\n\n- `create` (bool) - Create OVA image for the vm (default is false).\n- `export` (bool) - Export OVA image in the current folder (default is false).\n- `format` (string) - Format of the ova image (allowed values: 'vmdk', 'qcow2', default 'vmdk').\n- `name` (string) - Name of the the OVA image (default is the vm_name).\n\nSample:\n```hcl\n  ova {\n      create = true\n      export = true\n      format = \"vmdk\"\n      name = \"myExportedOVA\"\n  }\n```\n\n## Network Configuration\nUse `vm_nics{}` entry to configure NICs in your image\n\nIn this section, you have to define network you will to connect with one of this keyword :\n\n- `subnet_name` (string) - Name of the cluster subnet to use.\n- `subnet_uuid` (string) - UUID of the cluster subnet to use.\n- `mac_address` (string) - The network card MAC address. If not specified, a random MAC address will be generated.\n\nSample\n```hcl\n  vm_nics {\n    subnet_name = \"<mySubnet>\"\n  }\n```\n\n### Categories Configuration\n\nUse `image_categories{}` and `vm_categories{}` to assign category to your image or vm.  If you want to assign multiple categories , use the entry multiple times.\n\nIn this section, you have to define category you will to assign with the following parameters:\n\n- `key` (string) - Name of the category to assign.\n- `value` (string) - Value of the category to assign.\n\nSample\n```hcl\n  image_categories {\n    key = \"OSType\"\n    value = \"ubuntu-22.04\"\n  }\n```\n\nNote: Categories must already be present in Prism Central.\n\n## GPU Configuration\n\nUse `GPU` to assign a GPU that is present on `cluster-name` on the temporary vm. Add the name of the GPU you wish to attach.\n\nSample\n\n```hcl\n  gpu {\n    name = \"Ampere 40\"\n  }\n```\n\n## Boot Configuration\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\nThe boot configuration is very important: `boot_command` specifies the keys\nto type when the virtual machine is first booted in order to start the OS\ninstaller. This command is typed after boot_wait, which gives the virtual\nmachine some time to actually load.\n\nThe boot_command is an array of strings. The strings are all typed in\nsequence. It is an array only to improve readability within the template.\n\nThere are a set of special keys available. If these are in your boot\ncommand, they will be replaced by the proper key:\n\n-   `<bs>` - Backspace\n\n-   `<del>` - Delete\n\n-   `<enter> <return>` - Simulates an actual \"enter\" or \"return\" keypress.\n\n-   `<esc>` - Simulates pressing the escape key.\n\n-   `<tab>` - Simulates pressing the tab key.\n\n-   `<f1> - <f12>` - Simulates pressing a function key.\n\n-   `<up> <down> <left> <right>` - Simulates pressing an arrow key.\n\n-   `<spacebar>` - Simulates pressing the spacebar.\n\n-   `<insert>` - Simulates pressing the insert key.\n\n-   `<home> <end>` - Simulates pressing the home and end keys.\n\n  - `<pageUp> <pageDown>` - Simulates pressing the page up and page down\n    keys.\n\n-   `<menu>` - Simulates pressing the Menu key.\n\n-   `<leftAlt> <rightAlt>` - Simulates pressing the alt key.\n\n-   `<leftCtrl> <rightCtrl>` - Simulates pressing the ctrl key.\n\n-   `<leftShift> <rightShift>` - Simulates pressing the shift key.\n\n-   `<leftSuper> <rightSuper>` - Simulates pressing the ⌘ or Windows key.\n\n  - `<wait> <wait5> <wait10>` - Adds a 1, 5 or 10 second pause before\n    sending any additional keys. This is useful if you have to generally\n    wait for the UI to update before typing more.\n\n  - `<waitXX>` - Add an arbitrary pause before sending any additional keys.\n    The format of `XX` is a sequence of positive decimal numbers, each with\n    optional fraction and a unit suffix, such as `300ms`, `1.5h` or `2h45m`.\n    Valid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. For\n    example `<wait10m>` or `<wait1m20s>`.\n\n  - `<XXXOn> <XXXOff>` - Any printable keyboard character, and of these\n    \"special\" expressions, with the exception of the `<wait>` types, can\n    also be toggled on or off. For example, to simulate ctrl+c, use\n    `<leftCtrlOn>c<leftCtrlOff>`. Be sure to release them, otherwise they\n    will be held down until the machine reboots. To hold the `c` key down,\n    you would use `<cOn>`. Likewise, `<cOff>` to release.\n\n  - `{{ .HTTPIP }} {{ .HTTPPort }}` - The IP and port, respectively of an\n    HTTP server that is started serving the directory specified by the\n    `http_directory` configuration parameter. If `http_directory` isn't\n    specified, these will be blank!\n\n-   `{{ .Name }}` - The name of the VM.\n\nExample boot command. This is actually a working boot command used to start an\nCentOS 6.4 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nThe example shown below is a working boot command used to start an Ubuntu\n12.04 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nFor more examples of various boot commands, see the sample projects from our\n[community templates page](https://packer.io/community-tools#templates).\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\n<!-- Code generated from the comments of the VNCConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\nThe boot command \"typed\" character for character over a VNC connection to\nthe machine, simulating a human actually typing the keyboard.\n\nKeystrokes are typed as separate key up/down events over VNC with a default\n100ms delay. The delay alleviates issues with latency and CPU contention.\nYou can tune this delay on a per-builder basis by specifying\n\"boot_key_interval\" in your Packer template.\n\n<!-- End of code generated from the comments of the VNCConfig struct in bootcommand/config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\n- `boot_keygroup_interval` (duration string | ex: \"1h5m2s\") - Time to wait after sending a group of key pressses. The value of this\n  should be a duration. Examples are `5s` and `1m30s` which will cause\n  Packer to wait five seconds and one minute 30 seconds, respectively. If\n  this isn't specified, a sensible default value is picked depending on\n  the builder type.\n\n- `boot_wait` (duration string | ex: \"1h5m2s\") - The time to wait after booting the initial virtual machine before typing\n  the `boot_command`. The value of this should be a duration. Examples are\n  `5s` and `1m30s` which will cause Packer to wait five seconds and one\n  minute 30 seconds, respectively. If this isn't specified, the default is\n  `10s` or 10 seconds. To set boot_wait to 0s, use a negative number, such\n  as \"-1s\"\n\n- `boot_command` ([]string) - This is an array of commands to type when the virtual machine is first\n  booted. The goal of these commands should be to type just enough to\n  initialize the operating system installer. Special keys can be typed as\n  well, and are covered in the section below on the boot command. If this\n  is not specified, it is assumed the installer will start itself.\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\n<!-- Code generated from the comments of the VNCConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\n- `disable_vnc` (bool) - Whether to create a VNC connection or not. A boot_command cannot be used\n  when this is true. Defaults to false.\n\n- `boot_key_interval` (duration string | ex: \"1h5m2s\") - Time in ms to wait between each key press\n\n<!-- End of code generated from the comments of the VNCConfig struct in bootcommand/config.go; -->\n\n\n## IP Wait configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the WaitIpConfig struct in builder/nutanix/step_wait_for_ip.go; DO NOT EDIT MANUALLY -->\n\n- `ip_wait_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'.\n  Defaults to `30m` (30 minutes). Refer to the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration)\n  documentation for full details.\n\n- `ip_settle_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP to settle down, sometimes VM may\n  report incorrect IP initially, then it is recommended to set that\n  parameter to apx. 2 minutes. Examples `45s` and `10m`.\n  Defaults to `5s` (5 seconds). Refer to the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration)\n  documentation for full details.\n\n- `ip_wait_address` (\\*string) - Set this to a CIDR address to cause the service to wait for an address that is contained in\n  this network range. Defaults to `0.0.0.0/0` for any IPv4 address. Examples include:\n  \n  * empty string (\"\") - remove all filters\n  * `0:0:0:0:0:0:0:0/0` - allow only ipv6 addresses\n  * `192.168.1.0/24` - only allow ipv4 addresses from 192.168.1.1 to 192.168.1.254\n\n<!-- End of code generated from the comments of the WaitIpConfig struct in builder/nutanix/step_wait_for_ip.go; -->\n\n\n## Communicator Configuration\n\n**Optional**:\n\n##### Common\n\n<!-- Code generated from the comments of the Config struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `communicator` (string) - Packer currently supports three kinds of communicators:\n  \n  -   `none` - No communicator will be used. If this is set, most\n      provisioners also can't be used.\n  \n  -   `ssh` - An SSH connection will be established to the machine. This\n      is usually the default.\n  \n  -   `winrm` - A WinRM connection will be established.\n  \n  In addition to the above, some builders have custom communicators they\n  can use. For example, the Docker builder has a \"docker\" communicator\n  that uses `docker exec` and `docker cp` to execute scripts and copy\n  files.\n\n- `pause_before_connecting` (duration string | ex: \"1h5m2s\") - We recommend that you enable SSH or WinRM as the very last step in your\n  guest's bootstrap script, but sometimes you may have a race condition\n  where you need Packer to wait before attempting to connect to your\n  guest.\n  \n  If you end up in this situation, you can use the template option\n  `pause_before_connecting`. By default, there is no pause. For example if\n  you set `pause_before_connecting` to `10m` Packer will check whether it\n  can connect, as normal. But once a connection attempt is successful, it\n  will disconnect and then wait 10 minutes before connecting to the guest\n  and beginning provisioning.\n\n<!-- End of code generated from the comments of the Config struct in communicator/config.go; -->\n\n\n##### SSH\n\n<!-- Code generated from the comments of the SSH struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `ssh_host` (string) - The address to SSH to. This usually is automatically configured by the\n  builder.\n\n- `ssh_port` (int) - The port to connect to SSH. This defaults to `22`.\n\n- `ssh_username` (string) - The username to connect to SSH with. Required if using SSH.\n\n- `ssh_password` (string) - A plaintext password to use to authenticate with SSH.\n\n- `ssh_ciphers` ([]string) - This overrides the value of ciphers supported by default by Golang.\n  The default value is [\n    \"aes128-gcm@openssh.com\",\n    \"chacha20-poly1305@openssh.com\",\n    \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n  ]\n  \n  Valid options for ciphers include:\n  \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"aes128-gcm@openssh.com\",\n  \"chacha20-poly1305@openssh.com\",\n  \"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",\n\n- `ssh_clear_authorized_keys` (bool) - If true, Packer will attempt to remove its temporary key from\n  `~/.ssh/authorized_keys` and `/root/.ssh/authorized_keys`. This is a\n  mostly cosmetic option, since Packer will delete the temporary private\n  key from the host system regardless of whether this is set to true\n  (unless the user has set the `-debug` flag). Defaults to \"false\";\n  currently only works on guests with `sed` installed.\n\n- `ssh_key_exchange_algorithms` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\n  supported by default by Golang. Acceptable values include:\n  \"curve25519-sha256@libssh.org\", \"ecdh-sha2-nistp256\",\n  \"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n  \"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".\n\n- `ssh_certificate_file` (string) - Path to user certificate used to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_pty` (bool) - If `true`, a PTY will be requested for the SSH connection. This defaults\n  to `false`.\n\n- `ssh_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\n  determine when the machine has booted so this is usually quite long.\n  Example value: `10m`.\n  This defaults to `5m`, unless `ssh_handshake_attempts` is set.\n\n- `ssh_disable_agent_forwarding` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `false`.\n\n- `ssh_handshake_attempts` (int) - The number of handshakes to attempt with SSH once it can connect.\n  This defaults to `10`, unless a `ssh_timeout` is set.\n\n- `ssh_bastion_host` (string) - A bastion host to use for the actual SSH connection.\n\n- `ssh_bastion_port` (int) - The port of the bastion host. Defaults to `22`.\n\n- `ssh_bastion_agent_auth` (bool) - If `true`, the local SSH agent will be used to authenticate with the\n  bastion host. Defaults to `false`.\n\n- `ssh_bastion_username` (string) - The username to connect to the bastion host.\n\n- `ssh_bastion_password` (string) - The password to use to authenticate with the bastion host.\n\n- `ssh_bastion_interactive` (bool) - If `true`, the keyboard-interactive used to authenticate with bastion host.\n\n- `ssh_bastion_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with the\n  bastion host. The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_bastion_certificate_file` (string) - Path to user certificate used to authenticate with bastion host.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_file_transfer_method` (string) - `scp` or `sftp` - How to transfer files, Secure copy (default) or SSH\n  File Transfer Protocol.\n  \n  **NOTE**: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n  (the default protocol for copying data) returns a a non-zero error code since the MOTW\n  cannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\n  with SFTP instead `ssh_file_transfer_method = \"sftp\"`.\n\n- `ssh_proxy_host` (string) - A SOCKS proxy host to use for SSH connection\n\n- `ssh_proxy_port` (int) - A port of the SOCKS proxy. Defaults to `1080`.\n\n- `ssh_proxy_username` (string) - The optional username to authenticate with the proxy server.\n\n- `ssh_proxy_password` (string) - The optional password to use to authenticate with the proxy server.\n\n- `ssh_keep_alive_interval` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\n  value (`-1s`) to disable. Example value: `10s`. Defaults to `5s`.\n\n- `ssh_read_write_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\n  useful if, for example, packer hangs on a connection after a reboot.\n  Example: `5m`. Disabled by default.\n\n- `ssh_remote_tunnels` ([]string) - Remote tunnels forward a port from your local machine to the instance.\n  Format: [\"REMOTE_PORT:LOCAL_HOST:LOCAL_PORT\"]\n  Example: \"9090:localhost:80\" forwards localhost:9090 on your machine to port 80 on the instance.\n\n- `ssh_local_tunnels` ([]string) - Local tunnels forward a port from the instance to your local machine.\n  Format: [\"LOCAL_PORT:REMOTE_HOST:REMOTE_PORT\"]\n  Example: \"8080:localhost:3000\" allows the instance to access your local machine’s port 3000 via localhost:8080.\n\n<!-- End of code generated from the comments of the SSH struct in communicator/config.go; -->\n\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n##### Windows Remote Management (WinRM)\n\n<!-- Code generated from the comments of the WinRM struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `winrm_username` (string) - The username to use to connect to WinRM.\n\n- `winrm_password` (string) - The password to use to connect to WinRM.\n\n- `winrm_host` (string) - The address for WinRM to connect to.\n  \n  NOTE: If using an Amazon EBS builder, you can specify the interface\n  WinRM connects to via\n  [`ssh_interface`](/packer/integrations/nutanix-cloud-native/amazon/latest/components/builder/ebs#ssh_interface)\n\n- `winrm_no_proxy` (bool) - Setting this to `true` adds the remote\n  `host:port` to the `NO_PROXY` environment variable. This has the effect of\n  bypassing any configured proxies when connecting to the remote host.\n  Default to `false`.\n\n- `winrm_port` (int) - The WinRM port to connect to. This defaults to `5985` for plain\n  unencrypted connection and `5986` for SSL when `winrm_use_ssl` is set to\n  true.\n\n- `winrm_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for WinRM to become available. This defaults\n  to `30m` since setting up a Windows machine generally takes a long time.\n\n- `winrm_use_ssl` (bool) - If `true`, use HTTPS for WinRM.\n\n- `winrm_insecure` (bool) - If `true`, do not check server certificate chain and host name.\n\n- `winrm_use_ntlm` (bool) - If `true`, NTLMv2 authentication (with session security) will be used\n  for WinRM, rather than default (basic authentication), removing the\n  requirement for basic authentication to be enabled within the target\n  guest. Further reading for remote connection authentication can be found\n  [here](https://msdn.microsoft.com/en-us/library/aa384295(v=vs.85).aspx).\n\n<!-- End of code generated from the comments of the WinRM struct in communicator/config.go; -->\n\n\n## Samples\n\nYou can find samples [here](https://github.com/nutanix-cloud-native/packer-plugin-nutanix/tree/main/example) for these instructions usage.\n","created_at":"2025-07-21T10:13:28.979Z","updated_at":"2025-07-21T10:13:28.979Z","name":"Nutanix plugin","slug":"nutanix","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]}]},"component":{"id":"08a10880-0d26-4553-bb8c-23a57752ef62","integration_release_id":"febfcfc3-aded-4ed8-95c2-4fec7d79b5a1","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"This document is going to detail all Nutanix plugin parameters.\n\n## Principle\nThe Nutanix plugin will create a temporary VM as foundation of your Packer image, apply all providers you define to customize your image, then clone the VM disk image as your final Packer image.\n\n## Environment configuration\nThese parameters allow to define information about platform and temporary VM used to create the image.\n\n### Required\n  - `nutanix_username` (string) - User used for Prism Central login.\n  - `nutanix_password` (string) - Password of this user for Prism Central login.\n  - `nutanix_endpoint` (string) - Prism Central FQDN or IP.\n  - `cluster_name` or `cluster_uuid` (string) - Nutanix cluster name or uuid used to create and store image.\n  - `os_type` (string) - OS Type (\"Linux\" or \"Windows\").\n\n### Optional\n  - `nutanix_port` (number) - Port used for connection to Prism Central.\n  - `nutanix_insecure` (bool) - Authorize connection to Prism Central without valid certificate.\n  - `vm_name` (string) - Name of the temporary VM to create. If not specified a random `packer-*` name will be used.\n  - `cpu` (number) - Number of vCPU for temporary VM (default is 1).\n  - `core` (number) - Number of cores per vCPU for temporary VM (default is 1).\n  - `memory_mb` (number) - Size of vRAM for temporary VM (in megabytes).\n  - `hardware_virtualization` (bool) - Enable hardware virtualization for temporary VM (default is false).\n  - `cd_files` (array of strings) - A list of files to place onto a CD that is attached when the VM is booted. This can include either files or directories; any directories will be copied onto the CD recursively, preserving directory structure hierarchy.\n  - `cd_label` (string) - Label of this CD Drive.\n  - `boot_type` (string) - Type of boot used on the temporary VM (\"legacy\", \"uefi\" or \"secure_boot\", default is \"legacy\").\n  - `boot_priority` (string) - Priority of boot device (\"cdrom\" or \"disk\", default is \"cdrom\". UEFI support need AHV 8.0.12+, 9.1.1.2+, 9.1.3+, 9.2+ or 10.0+). \n  - `vm_categories` ([]Category) - Assign Categories to the vm.\n  - `project` (string) - Assign Project to the vm.\n  - `gpu` ([] GPU) - GPU in cluster name to be attached on temporary VM.\n  - `serialport` (bool) - Add a serial port to the temporary VM. This is required for some Linux Cloud Images that will have a kernel panic if a serial port is not present on first boot.\n\n#### vTPM\n\nUse `vtpm{}` entry to configure vTPM on the temporary VM.\n\n\nAll parameters of this `vtpm` section are described below.\n\n- `enabled` (bool) - Enable vTPM for the temporary VM (default is false).\n\n\nSample:\n```hcl\n  vtpm {\n      enabled = true\n  }\n```\n\n## Output configuration\nThese parameters allow to configure everything around image creation, from the temporary VM connection to the final image definition.\n\n### All OS\n- `image_name` (string) - Name of the output image.\n- `image_description` (string) - Description for output image.\n- `image_categories` ([]Category) - Assign Categories to the image.\n- `force_deregister` (bool) - Allow output image override if already exists.\n- `image_delete` (bool) - Delete image once build process is completed (default is false).\n- `image_skip` (bool) - Skip image creation (default is false).\n- `image_export` (bool) - Export raw image in the current folder (default is false).\n- `fail_if_image_exists` (bool) - Fail the build if an image with the same name already exists (default is false).\n- `shutdown_command` (string) - Command line to shutdown your temporary VM.\n- `shutdown_timeout` (string) - Timeout for VM shutdown (format : 2m).\n- `vm_force_delete` (bool) - Delete vm even if build is not succesful (default is false).\n- `vm_retain` (bool) - Retain the temporary VM after build process is completed (default is false).\n- `disable_stop_instance` (bool) - When `true`, prevents Packer from automatically stopping the build instance after provisioning completes. Your final provisioner must handle stopping the instance, or the build will timeout (default is false).\n\n### Dedicated to Linux\n- `user_data` (string) - cloud-init content base64 encoded.\n- `ssh_username` (string) - user for ssh connection initiated by Packer.\n- `ssh_password` (string) - password for the ssh user.\n\n### Dedicated to Windows\n- `winrm_port` (number) - Port for WinRM communication (default is 5986).\n- `winrm_insecure` (bool) - Allow insecure connection to WinRM.\n- `winrm_use_ssl` (bool) - Request SSL connection with WinRM.\n- `winrm_timeout` (string) - Timeout for WinRM (format 45m).\n- `winrm_username` (string) - User login for WinRM connection.\n- `winrm_password` (string) - Password this User.\n\n## Disk configuration\nUse `vm_disks{}` entry to configure disk to your VM image. If you want to configure several disks, use this entry multiple times.\n\nAll parameters of this `vm_disks` section are described below.\n\n3 types of disk configurations can be used:\n- disk (create an empty disk)\n- disk image (create disk from Nutanix image library)\n- ISO image (create disk from ISO image)\n\n### Disk \n- `image_type` (string) - \"DISK\".\n- `disk_size_gb` (number) - size of th disk (in gigabytes).\n- `storage_container_uuid` (string) - UUID of the storage container where the disk image will be created. If not specified, the default storage container for the cluster will be used.\n\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"DISK\"\n      disk_size_gb = 30\n  }\n```\n\n### Disk image\n- `image_type` (string) - \"DISK_IMAGE\" (you must use one of the three following parameters to source the image).\n- `source_image_name` (string) - Name of the image used as disk source.\n- `source_image_uuid` (string) - UUID of the image used as disk source.\n- `source_image_uri` (string) - URI of the image used as disk source (if image is not already on the cluster, it will download and store it before launching output image creation process).\n- `source_image_path` (string) - Path to the local image used as disk source (it will upload it before launching output image creation process).\n- `source_image_checksum` (string) - Checksum of the image used as disk source (work only with `source_image_uri` and if image is not already present in the library).\n- `source_image_checksum_type` (string) - Type of checksum used for `source_image_checksum` (`sha256` or `sha1` ).\n- `source_image_delete` (bool) - Delete image once build process is completed (default is false).\n- `source_image_force` (bool) - Always download and replace image even if already exist (default is false).\n- `disk_size_gb` (number) - size of the disk (in gigabytes).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"DISK_IMAGE\"\n      source_image_name = \"<myDiskImage>\"\n      disk_size_gb = 40\n  }\n```\n### ISO Image\n- `image_type` (string) - \"ISO_IMAGE\".\n- `source_image_name` (string) - Name of the ISO image to mount.\n- `source_image_uuid` (string) - UUID of the ISO image to mount.\n- `source_image_uri` (string) - URI of the image used as ISO source (if image is not already on the cluster, it will download and store it before launching output image creation process).\n- `source_image_path` (string) - Path to the local image used as ISO source (it will upload it before launching output image creation process).\n- `source_image_checksum` (string) - Checksum of the image used as ISO source (work only with `source_image_uri` and if image is not already present in the library).\n- `source_image_checksum_type` (string) - Type of checksum used for `source_image_checksum` (`sha256` or `sha1` ).\n- `source_image_delete` (bool) - Delete source image once build process is completed (default is false).\n- `source_image_force` (bool) - Always download and replace source image even if already exist (default is false).\n\nSample:\n```hcl\n  vm_disks {\n      image_type = \"ISO_IMAGE\"\n      source_image_name = \"<myISOimage>\"\n  }\n```\n\n## VM Clean\n\nUse `vm_clean{}` entry to configure VM cleaning options. This section allows you to clean up the temporary VM after the image creation process is completed.\nIt can be useful to remove unnecessary components or reset the VM to a clean state before creating a template or exporting an OVA.\n\nAll parameters of this `vm_clean` section are described below.\n\n- `cdrom` (bool) - Remove all CD-ROMs from the VM (default is false).\n\nSample:\n```hcl\n  vm_clean {\n      cdrom = true\n  }\n```\n\n## Template configuration\n\nUse `template{}` entry to create a template from the temporary VM.\n\nTemplate feature need Prism Central 2024.3+ or later.\n\nAll parameters of this `template` section are described below.\n\n- `create` (bool) - Create a template from the temporary VM (default is false).\n- `name` (string) - Name of the template to create (default is the vm_name).\n- `description` (string) - Description of the template to create (default is no description).\n\nSample:\n```hcl\n  template {\n      create = true\n      name = \"myTemplate\"\n      description = \"This is my template\"\n  }\n```\n\n## OVA Config\nUse `ova{}` entry to configure the OVA creation & export\n\nAll parameters of this `ova` section are described below.\n\n- `create` (bool) - Create OVA image for the vm (default is false).\n- `export` (bool) - Export OVA image in the current folder (default is false).\n- `format` (string) - Format of the ova image (allowed values: 'vmdk', 'qcow2', default 'vmdk').\n- `name` (string) - Name of the the OVA image (default is the vm_name).\n\nSample:\n```hcl\n  ova {\n      create = true\n      export = true\n      format = \"vmdk\"\n      name = \"myExportedOVA\"\n  }\n```\n\n## Network Configuration\nUse `vm_nics{}` entry to configure NICs in your image\n\nIn this section, you have to define network you will to connect with one of this keyword :\n\n- `subnet_name` (string) - Name of the cluster subnet to use.\n- `subnet_uuid` (string) - UUID of the cluster subnet to use.\n- `mac_address` (string) - The network card MAC address. If not specified, a random MAC address will be generated.\n\nSample\n```hcl\n  vm_nics {\n    subnet_name = \"<mySubnet>\"\n  }\n```\n\n### Categories Configuration\n\nUse `image_categories{}` and `vm_categories{}` to assign category to your image or vm.  If you want to assign multiple categories , use the entry multiple times.\n\nIn this section, you have to define category you will to assign with the following parameters:\n\n- `key` (string) - Name of the category to assign.\n- `value` (string) - Value of the category to assign.\n\nSample\n```hcl\n  image_categories {\n    key = \"OSType\"\n    value = \"ubuntu-22.04\"\n  }\n```\n\nNote: Categories must already be present in Prism Central.\n\n## GPU Configuration\n\nUse `GPU` to assign a GPU that is present on `cluster-name` on the temporary vm. Add the name of the GPU you wish to attach.\n\nSample\n\n```hcl\n  gpu {\n    name = \"Ampere 40\"\n  }\n```\n\n## Boot Configuration\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\nThe boot configuration is very important: `boot_command` specifies the keys\nto type when the virtual machine is first booted in order to start the OS\ninstaller. This command is typed after boot_wait, which gives the virtual\nmachine some time to actually load.\n\nThe boot_command is an array of strings. The strings are all typed in\nsequence. It is an array only to improve readability within the template.\n\nThere are a set of special keys available. If these are in your boot\ncommand, they will be replaced by the proper key:\n\n-   `<bs>` - Backspace\n\n-   `<del>` - Delete\n\n-   `<enter> <return>` - Simulates an actual \"enter\" or \"return\" keypress.\n\n-   `<esc>` - Simulates pressing the escape key.\n\n-   `<tab>` - Simulates pressing the tab key.\n\n-   `<f1> - <f12>` - Simulates pressing a function key.\n\n-   `<up> <down> <left> <right>` - Simulates pressing an arrow key.\n\n-   `<spacebar>` - Simulates pressing the spacebar.\n\n-   `<insert>` - Simulates pressing the insert key.\n\n-   `<home> <end>` - Simulates pressing the home and end keys.\n\n  - `<pageUp> <pageDown>` - Simulates pressing the page up and page down\n    keys.\n\n-   `<menu>` - Simulates pressing the Menu key.\n\n-   `<leftAlt> <rightAlt>` - Simulates pressing the alt key.\n\n-   `<leftCtrl> <rightCtrl>` - Simulates pressing the ctrl key.\n\n-   `<leftShift> <rightShift>` - Simulates pressing the shift key.\n\n-   `<leftSuper> <rightSuper>` - Simulates pressing the ⌘ or Windows key.\n\n  - `<wait> <wait5> <wait10>` - Adds a 1, 5 or 10 second pause before\n    sending any additional keys. This is useful if you have to generally\n    wait for the UI to update before typing more.\n\n  - `<waitXX>` - Add an arbitrary pause before sending any additional keys.\n    The format of `XX` is a sequence of positive decimal numbers, each with\n    optional fraction and a unit suffix, such as `300ms`, `1.5h` or `2h45m`.\n    Valid time units are `ns`, `us` (or `µs`), `ms`, `s`, `m`, `h`. For\n    example `<wait10m>` or `<wait1m20s>`.\n\n  - `<XXXOn> <XXXOff>` - Any printable keyboard character, and of these\n    \"special\" expressions, with the exception of the `<wait>` types, can\n    also be toggled on or off. For example, to simulate ctrl+c, use\n    `<leftCtrlOn>c<leftCtrlOff>`. Be sure to release them, otherwise they\n    will be held down until the machine reboots. To hold the `c` key down,\n    you would use `<cOn>`. Likewise, `<cOff>` to release.\n\n  - `{{ .HTTPIP }} {{ .HTTPPort }}` - The IP and port, respectively of an\n    HTTP server that is started serving the directory specified by the\n    `http_directory` configuration parameter. If `http_directory` isn't\n    specified, these will be blank!\n\n-   `{{ .Name }}` - The name of the VM.\n\nExample boot command. This is actually a working boot command used to start an\nCentOS 6.4 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t   \"<tab><wait>\",\n\t   \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"\n\t]\n\n```\n\nThe example shown below is a working boot command used to start an Ubuntu\n12.04 installer:\n\nIn JSON:\n\n```json\n\"boot_command\": [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nIn HCL2:\n\n```hcl\nboot_command = [\n\n\t\"<esc><esc><enter><wait>\",\n\t\"/install/vmlinuz noapic \",\n\t\"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \",\n\t\"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \",\n\t\"hostname={{ .Name }} \",\n\t\"fb=false debconf/frontend=noninteractive \",\n\t\"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \",\n\t\"keyboard-configuration/variant=USA console-setup/ask_detect=false \",\n\t\"initrd=/install/initrd.gz -- <enter>\"\n\n]\n```\n\nFor more examples of various boot commands, see the sample projects from our\n[community templates page](https://packer.io/community-tools#templates).\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\n<!-- Code generated from the comments of the VNCConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\nThe boot command \"typed\" character for character over a VNC connection to\nthe machine, simulating a human actually typing the keyboard.\n\nKeystrokes are typed as separate key up/down events over VNC with a default\n100ms delay. The delay alleviates issues with latency and CPU contention.\nYou can tune this delay on a per-builder basis by specifying\n\"boot_key_interval\" in your Packer template.\n\n<!-- End of code generated from the comments of the VNCConfig struct in bootcommand/config.go; -->\n\n\n**Optional**:\n\n<!-- Code generated from the comments of the BootConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\n- `boot_keygroup_interval` (duration string | ex: \"1h5m2s\") - Time to wait after sending a group of key pressses. The value of this\n  should be a duration. Examples are `5s` and `1m30s` which will cause\n  Packer to wait five seconds and one minute 30 seconds, respectively. If\n  this isn't specified, a sensible default value is picked depending on\n  the builder type.\n\n- `boot_wait` (duration string | ex: \"1h5m2s\") - The time to wait after booting the initial virtual machine before typing\n  the `boot_command`. The value of this should be a duration. Examples are\n  `5s` and `1m30s` which will cause Packer to wait five seconds and one\n  minute 30 seconds, respectively. If this isn't specified, the default is\n  `10s` or 10 seconds. To set boot_wait to 0s, use a negative number, such\n  as \"-1s\"\n\n- `boot_command` ([]string) - This is an array of commands to type when the virtual machine is first\n  booted. The goal of these commands should be to type just enough to\n  initialize the operating system installer. Special keys can be typed as\n  well, and are covered in the section below on the boot command. If this\n  is not specified, it is assumed the installer will start itself.\n\n<!-- End of code generated from the comments of the BootConfig struct in bootcommand/config.go; -->\n\n\n<!-- Code generated from the comments of the VNCConfig struct in bootcommand/config.go; DO NOT EDIT MANUALLY -->\n\n- `disable_vnc` (bool) - Whether to create a VNC connection or not. A boot_command cannot be used\n  when this is true. Defaults to false.\n\n- `boot_key_interval` (duration string | ex: \"1h5m2s\") - Time in ms to wait between each key press\n\n<!-- End of code generated from the comments of the VNCConfig struct in bootcommand/config.go; -->\n\n\n## IP Wait configuration\n\n**Optional**:\n\n<!-- Code generated from the comments of the WaitIpConfig struct in builder/nutanix/step_wait_for_ip.go; DO NOT EDIT MANUALLY -->\n\n- `ip_wait_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'.\n  Defaults to `30m` (30 minutes). Refer to the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration)\n  documentation for full details.\n\n- `ip_settle_timeout` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP to settle down, sometimes VM may\n  report incorrect IP initially, then it is recommended to set that\n  parameter to apx. 2 minutes. Examples `45s` and `10m`.\n  Defaults to `5s` (5 seconds). Refer to the Golang\n  [ParseDuration](https://golang.org/pkg/time/#ParseDuration)\n  documentation for full details.\n\n- `ip_wait_address` (\\*string) - Set this to a CIDR address to cause the service to wait for an address that is contained in\n  this network range. Defaults to `0.0.0.0/0` for any IPv4 address. Examples include:\n  \n  * empty string (\"\") - remove all filters\n  * `0:0:0:0:0:0:0:0/0` - allow only ipv6 addresses\n  * `192.168.1.0/24` - only allow ipv4 addresses from 192.168.1.1 to 192.168.1.254\n\n<!-- End of code generated from the comments of the WaitIpConfig struct in builder/nutanix/step_wait_for_ip.go; -->\n\n\n## Communicator Configuration\n\n**Optional**:\n\n##### Common\n\n<!-- Code generated from the comments of the Config struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `communicator` (string) - Packer currently supports three kinds of communicators:\n  \n  -   `none` - No communicator will be used. If this is set, most\n      provisioners also can't be used.\n  \n  -   `ssh` - An SSH connection will be established to the machine. This\n      is usually the default.\n  \n  -   `winrm` - A WinRM connection will be established.\n  \n  In addition to the above, some builders have custom communicators they\n  can use. For example, the Docker builder has a \"docker\" communicator\n  that uses `docker exec` and `docker cp` to execute scripts and copy\n  files.\n\n- `pause_before_connecting` (duration string | ex: \"1h5m2s\") - We recommend that you enable SSH or WinRM as the very last step in your\n  guest's bootstrap script, but sometimes you may have a race condition\n  where you need Packer to wait before attempting to connect to your\n  guest.\n  \n  If you end up in this situation, you can use the template option\n  `pause_before_connecting`. By default, there is no pause. For example if\n  you set `pause_before_connecting` to `10m` Packer will check whether it\n  can connect, as normal. But once a connection attempt is successful, it\n  will disconnect and then wait 10 minutes before connecting to the guest\n  and beginning provisioning.\n\n<!-- End of code generated from the comments of the Config struct in communicator/config.go; -->\n\n\n##### SSH\n\n<!-- Code generated from the comments of the SSH struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `ssh_host` (string) - The address to SSH to. This usually is automatically configured by the\n  builder.\n\n- `ssh_port` (int) - The port to connect to SSH. This defaults to `22`.\n\n- `ssh_username` (string) - The username to connect to SSH with. Required if using SSH.\n\n- `ssh_password` (string) - A plaintext password to use to authenticate with SSH.\n\n- `ssh_ciphers` ([]string) - This overrides the value of ciphers supported by default by Golang.\n  The default value is [\n    \"aes128-gcm@openssh.com\",\n    \"chacha20-poly1305@openssh.com\",\n    \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n  ]\n  \n  Valid options for ciphers include:\n  \"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"aes128-gcm@openssh.com\",\n  \"chacha20-poly1305@openssh.com\",\n  \"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",\n\n- `ssh_clear_authorized_keys` (bool) - If true, Packer will attempt to remove its temporary key from\n  `~/.ssh/authorized_keys` and `/root/.ssh/authorized_keys`. This is a\n  mostly cosmetic option, since Packer will delete the temporary private\n  key from the host system regardless of whether this is set to true\n  (unless the user has set the `-debug` flag). Defaults to \"false\";\n  currently only works on guests with `sed` installed.\n\n- `ssh_key_exchange_algorithms` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\n  supported by default by Golang. Acceptable values include:\n  \"curve25519-sha256@libssh.org\", \"ecdh-sha2-nistp256\",\n  \"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n  \"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".\n\n- `ssh_certificate_file` (string) - Path to user certificate used to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_pty` (bool) - If `true`, a PTY will be requested for the SSH connection. This defaults\n  to `false`.\n\n- `ssh_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\n  determine when the machine has booted so this is usually quite long.\n  Example value: `10m`.\n  This defaults to `5m`, unless `ssh_handshake_attempts` is set.\n\n- `ssh_disable_agent_forwarding` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `false`.\n\n- `ssh_handshake_attempts` (int) - The number of handshakes to attempt with SSH once it can connect.\n  This defaults to `10`, unless a `ssh_timeout` is set.\n\n- `ssh_bastion_host` (string) - A bastion host to use for the actual SSH connection.\n\n- `ssh_bastion_port` (int) - The port of the bastion host. Defaults to `22`.\n\n- `ssh_bastion_agent_auth` (bool) - If `true`, the local SSH agent will be used to authenticate with the\n  bastion host. Defaults to `false`.\n\n- `ssh_bastion_username` (string) - The username to connect to the bastion host.\n\n- `ssh_bastion_password` (string) - The password to use to authenticate with the bastion host.\n\n- `ssh_bastion_interactive` (bool) - If `true`, the keyboard-interactive used to authenticate with bastion host.\n\n- `ssh_bastion_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with the\n  bastion host. The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_bastion_certificate_file` (string) - Path to user certificate used to authenticate with bastion host.\n  The `~` can be used in path and will be expanded to the\n  home directory of current user.\n\n- `ssh_file_transfer_method` (string) - `scp` or `sftp` - How to transfer files, Secure copy (default) or SSH\n  File Transfer Protocol.\n  \n  **NOTE**: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n  (the default protocol for copying data) returns a a non-zero error code since the MOTW\n  cannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\n  with SFTP instead `ssh_file_transfer_method = \"sftp\"`.\n\n- `ssh_proxy_host` (string) - A SOCKS proxy host to use for SSH connection\n\n- `ssh_proxy_port` (int) - A port of the SOCKS proxy. Defaults to `1080`.\n\n- `ssh_proxy_username` (string) - The optional username to authenticate with the proxy server.\n\n- `ssh_proxy_password` (string) - The optional password to use to authenticate with the proxy server.\n\n- `ssh_keep_alive_interval` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\n  value (`-1s`) to disable. Example value: `10s`. Defaults to `5s`.\n\n- `ssh_read_write_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\n  useful if, for example, packer hangs on a connection after a reboot.\n  Example: `5m`. Disabled by default.\n\n- `ssh_remote_tunnels` ([]string) - Remote tunnels forward a port from your local machine to the instance.\n  Format: [\"REMOTE_PORT:LOCAL_HOST:LOCAL_PORT\"]\n  Example: \"9090:localhost:80\" forwards localhost:9090 on your machine to port 80 on the instance.\n\n- `ssh_local_tunnels` ([]string) - Local tunnels forward a port from the instance to your local machine.\n  Format: [\"LOCAL_PORT:REMOTE_HOST:REMOTE_PORT\"]\n  Example: \"8080:localhost:3000\" allows the instance to access your local machine’s port 3000 via localhost:8080.\n\n<!-- End of code generated from the comments of the SSH struct in communicator/config.go; -->\n\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n##### Windows Remote Management (WinRM)\n\n<!-- Code generated from the comments of the WinRM struct in communicator/config.go; DO NOT EDIT MANUALLY -->\n\n- `winrm_username` (string) - The username to use to connect to WinRM.\n\n- `winrm_password` (string) - The password to use to connect to WinRM.\n\n- `winrm_host` (string) - The address for WinRM to connect to.\n  \n  NOTE: If using an Amazon EBS builder, you can specify the interface\n  WinRM connects to via\n  [`ssh_interface`](/packer/integrations/nutanix-cloud-native/amazon/latest/components/builder/ebs#ssh_interface)\n\n- `winrm_no_proxy` (bool) - Setting this to `true` adds the remote\n  `host:port` to the `NO_PROXY` environment variable. This has the effect of\n  bypassing any configured proxies when connecting to the remote host.\n  Default to `false`.\n\n- `winrm_port` (int) - The WinRM port to connect to. This defaults to `5985` for plain\n  unencrypted connection and `5986` for SSL when `winrm_use_ssl` is set to\n  true.\n\n- `winrm_timeout` (duration string | ex: \"1h5m2s\") - The amount of time to wait for WinRM to become available. This defaults\n  to `30m` since setting up a Windows machine generally takes a long time.\n\n- `winrm_use_ssl` (bool) - If `true`, use HTTPS for WinRM.\n\n- `winrm_insecure` (bool) - If `true`, do not check server certificate chain and host name.\n\n- `winrm_use_ntlm` (bool) - If `true`, NTLMv2 authentication (with session security) will be used\n  for WinRM, rather than default (basic authentication), removing the\n  requirement for basic authentication to be enabled within the target\n  guest. Further reading for remote connection authentication can be found\n  [here](https://msdn.microsoft.com/en-us/library/aa384295(v=vs.85).aspx).\n\n<!-- End of code generated from the comments of the WinRM struct in communicator/config.go; -->\n\n\n## Samples\n\nYou can find samples [here](https://github.com/nutanix-cloud-native/packer-plugin-nutanix/tree/main/example) for these instructions usage.\n","created_at":"2025-07-21T10:13:28.979Z","updated_at":"2025-07-21T10:13:28.979Z","name":"Nutanix plugin","slug":"nutanix","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},"processedVariablesMarkdown":{},"anchorLinks":[{"id":"principle","level":2,"title":"Principle"},{"id":"environment-configuration","level":2,"title":"Environment configuration"},{"id":"required","level":3,"title":"Required"},{"id":"optional","level":3,"title":"Optional"},{"id":"vtpm","level":4,"title":"vTPM"},{"id":"output-configuration","level":2,"title":"Output configuration"},{"id":"all-os","level":3,"title":"All OS"},{"id":"dedicated-to-linux","level":3,"title":"Dedicated to Linux"},{"id":"dedicated-to-windows","level":3,"title":"Dedicated to Windows"},{"id":"disk-configuration","level":2,"title":"Disk configuration"},{"id":"disk","level":3,"title":"Disk"},{"id":"disk-image","level":3,"title":"Disk image"},{"id":"iso-image","level":3,"title":"ISO Image"},{"id":"vm-clean","level":2,"title":"VM Clean"},{"id":"template-configuration","level":2,"title":"Template configuration"},{"id":"ova-config","level":2,"title":"OVA Config"},{"id":"network-configuration","level":2,"title":"Network Configuration"},{"id":"categories-configuration","level":3,"title":"Categories Configuration"},{"id":"gpu-configuration","level":2,"title":"GPU Configuration"},{"id":"boot-configuration","level":2,"title":"Boot Configuration"},{"id":"ip-wait-configuration","level":2,"title":"IP Wait configuration"},{"id":"communicator-configuration","level":2,"title":"Communicator Configuration"},{"id":"common","level":5,"title":"Common"},{"id":"ssh","level":5,"title":"SSH"},{"id":"windows-remote-management-(winrm)","level":5,"title":"Windows Remote Management (WinRM)"},{"id":"samples","level":2,"title":"Samples"}],"serializedREADME":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",{\"className\":\"g-type-long-body\"},`This document is going to detail all Nutanix plugin parameters.`),mdx(\"h2\",{\"id\":\"user-content-principle\",\"data-text-content\":\"Principle\",\"className\":\"g-type-display-3\"},`Principle`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The Nutanix plugin will create a temporary VM as foundation of your Packer image, apply all providers you define to customize your image, then clone the VM disk image as your final Packer image.`),mdx(\"h2\",{\"id\":\"user-content-environment-configuration\",\"data-text-content\":\"Environment configuration\",\"className\":\"g-type-display-3\"},`Environment configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`These parameters allow to define information about platform and temporary VM used to create the image.`),mdx(\"h3\",{\"id\":\"user-content-required\",\"data-text-content\":\"Required\",\"className\":\"g-type-display-4\"},`Required`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_username`),` (string) - User used for Prism Central login.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_password`),` (string) - Password of this user for Prism Central login.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_endpoint`),` (string) - Prism Central FQDN or IP.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cluster_name`),` or `,mdx(\"inlineCode\",{parentName:\"li\"},`cluster_uuid`),` (string) - Nutanix cluster name or uuid used to create and store image.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`os_type`),` (string) - OS Type (\"Linux\" or \"Windows\").`)),mdx(\"h3\",{\"id\":\"user-content-optional\",\"data-text-content\":\"Optional\",\"className\":\"g-type-display-4\"},`Optional`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_port`),` (number) - Port used for connection to Prism Central.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`nutanix_insecure`),` (bool) - Authorize connection to Prism Central without valid certificate.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`vm_name`),` (string) - Name of the temporary VM to create. If not specified a random `,mdx(\"inlineCode\",{parentName:\"li\"},`packer-*`),` name will be used.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cpu`),` (number) - Number of vCPU for temporary VM (default is 1).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`core`),` (number) - Number of cores per vCPU for temporary VM (default is 1).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`memory_mb`),` (number) - Size of vRAM for temporary VM (in megabytes).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`hardware_virtualization`),` (bool) - Enable hardware virtualization for temporary VM (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cd_files`),` (array of strings) - A list of files to place onto a CD that is attached when the VM is booted. This can include either files or directories; any directories will be copied onto the CD recursively, preserving directory structure hierarchy.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cd_label`),` (string) - Label of this CD Drive.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`boot_type`),` (string) - Type of boot used on the temporary VM (\"legacy\", \"uefi\" or \"secure_boot\", default is \"legacy\").`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`boot_priority`),` (string) - Priority of boot device (\"cdrom\" or \"disk\", default is \"cdrom\". UEFI support need AHV 8.0.12+, 9.1.1.2+, 9.1.3+, 9.2+ or 10.0+). `),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`vm_categories`),` ([]Category) - Assign Categories to the vm.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`project`),` (string) - Assign Project to the vm.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`gpu`),` ([] GPU) - GPU in cluster name to be attached on temporary VM.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`serialport`),` (bool) - Add a serial port to the temporary VM. This is required for some Linux Cloud Images that will have a kernel panic if a serial port is not present on first boot.`)),mdx(\"h4\",{\"id\":\"user-content-vtpm\",\"data-text-content\":\"vTPM\",\"className\":\"g-type-display-5\"},`vTPM`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`vtpm{}`),` entry to configure vTPM on the temporary VM.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`All parameters of this `,mdx(\"inlineCode\",{parentName:\"p\"},`vtpm`),` section are described below.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`enabled`),` (bool) - Enable vTPM for the temporary VM (default is false).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  vtpm`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      enabled `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h2\",{\"id\":\"user-content-output-configuration\",\"data-text-content\":\"Output configuration\",\"className\":\"g-type-display-3\"},`Output configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`These parameters allow to configure everything around image creation, from the temporary VM connection to the final image definition.`),mdx(\"h3\",{\"id\":\"user-content-all-os\",\"data-text-content\":\"All OS\",\"className\":\"g-type-display-4\"},`All OS`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_name`),` (string) - Name of the output image.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_description`),` (string) - Description for output image.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_categories`),` ([]Category) - Assign Categories to the image.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`force_deregister`),` (bool) - Allow output image override if already exists.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_delete`),` (bool) - Delete image once build process is completed (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_skip`),` (bool) - Skip image creation (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_export`),` (bool) - Export raw image in the current folder (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`fail_if_image_exists`),` (bool) - Fail the build if an image with the same name already exists (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`shutdown_command`),` (string) - Command line to shutdown your temporary VM.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`shutdown_timeout`),` (string) - Timeout for VM shutdown (format : 2m).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`vm_force_delete`),` (bool) - Delete vm even if build is not succesful (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`vm_retain`),` (bool) - Retain the temporary VM after build process is completed (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`disable_stop_instance`),` (bool) - When `,mdx(\"inlineCode\",{parentName:\"li\"},`true`),`, prevents Packer from automatically stopping the build instance after provisioning completes. Your final provisioner must handle stopping the instance, or the build will timeout (default is false).`)),mdx(\"h3\",{\"id\":\"user-content-dedicated-to-linux\",\"data-text-content\":\"Dedicated to Linux\",\"className\":\"g-type-display-4\"},`Dedicated to Linux`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`user_data`),` (string) - cloud-init content base64 encoded.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`ssh_username`),` (string) - user for ssh connection initiated by Packer.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`ssh_password`),` (string) - password for the ssh user.`)),mdx(\"h3\",{\"id\":\"user-content-dedicated-to-windows\",\"data-text-content\":\"Dedicated to Windows\",\"className\":\"g-type-display-4\"},`Dedicated to Windows`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_port`),` (number) - Port for WinRM communication (default is 5986).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_insecure`),` (bool) - Allow insecure connection to WinRM.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_use_ssl`),` (bool) - Request SSL connection with WinRM.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_timeout`),` (string) - Timeout for WinRM (format 45m).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_username`),` (string) - User login for WinRM connection.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`winrm_password`),` (string) - Password this User.`)),mdx(\"h2\",{\"id\":\"user-content-disk-configuration\",\"data-text-content\":\"Disk configuration\",\"className\":\"g-type-display-3\"},`Disk configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_disks{}`),` entry to configure disk to your VM image. If you want to configure several disks, use this entry multiple times.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`All parameters of this `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_disks`),` section are described below.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`3 types of disk configurations can be used:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},`disk (create an empty disk)`),mdx(\"li\",{parentName:\"ul\"},`disk image (create disk from Nutanix image library)`),mdx(\"li\",{parentName:\"ul\"},`ISO image (create disk from ISO image)`)),mdx(\"h3\",{\"id\":\"user-content-disk\",\"data-text-content\":\"Disk\",\"className\":\"g-type-display-4\"},`Disk`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_type`),` (string) - \"DISK\".`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`disk_size_gb`),` (number) - size of th disk (in gigabytes).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`storage_container_uuid`),` (string) - UUID of the storage container where the disk image will be created. If not specified, the default storage container for the cluster will be used.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  vm_disks`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      image_type `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"DISK\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      disk_size_gb `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 30`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h3\",{\"id\":\"user-content-disk-image\",\"data-text-content\":\"Disk image\",\"className\":\"g-type-display-4\"},`Disk image`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_type`),` (string) - \"DISK_IMAGE\" (you must use one of the three following parameters to source the image).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_name`),` (string) - Name of the image used as disk source.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uuid`),` (string) - UUID of the image used as disk source.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uri`),` (string) - URI of the image used as disk source (if image is not already on the cluster, it will download and store it before launching output image creation process).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_path`),` (string) - Path to the local image used as disk source (it will upload it before launching output image creation process).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_checksum`),` (string) - Checksum of the image used as disk source (work only with `,mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uri`),` and if image is not already present in the library).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_checksum_type`),` (string) - Type of checksum used for `,mdx(\"inlineCode\",{parentName:\"li\"},`source_image_checksum`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`sha256`),` or `,mdx(\"inlineCode\",{parentName:\"li\"},`sha1`),` ).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_delete`),` (bool) - Delete image once build process is completed (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_force`),` (bool) - Always download and replace image even if already exist (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`disk_size_gb`),` (number) - size of the disk (in gigabytes).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  vm_disks`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      image_type `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"DISK_IMAGE\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      source_image_name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"<myDiskImage>\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      disk_size_gb `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` 40`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h3\",{\"id\":\"user-content-iso-image\",\"data-text-content\":\"ISO Image\",\"className\":\"g-type-display-4\"},`ISO Image`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_type`),` (string) - \"ISO_IMAGE\".`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_name`),` (string) - Name of the ISO image to mount.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uuid`),` (string) - UUID of the ISO image to mount.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uri`),` (string) - URI of the image used as ISO source (if image is not already on the cluster, it will download and store it before launching output image creation process).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_path`),` (string) - Path to the local image used as ISO source (it will upload it before launching output image creation process).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_checksum`),` (string) - Checksum of the image used as ISO source (work only with `,mdx(\"inlineCode\",{parentName:\"li\"},`source_image_uri`),` and if image is not already present in the library).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_checksum_type`),` (string) - Type of checksum used for `,mdx(\"inlineCode\",{parentName:\"li\"},`source_image_checksum`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`sha256`),` or `,mdx(\"inlineCode\",{parentName:\"li\"},`sha1`),` ).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_delete`),` (bool) - Delete source image once build process is completed (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`source_image_force`),` (bool) - Always download and replace source image even if already exist (default is false).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  vm_disks`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      image_type `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"ISO_IMAGE\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      source_image_name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"<myISOimage>\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h2\",{\"id\":\"user-content-vm-clean\",\"data-text-content\":\"VM Clean\",\"className\":\"g-type-display-3\"},`VM Clean`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_clean{}`),` entry to configure VM cleaning options. This section allows you to clean up the temporary VM after the image creation process is completed.\nIt can be useful to remove unnecessary components or reset the VM to a clean state before creating a template or exporting an OVA.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`All parameters of this `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_clean`),` section are described below.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cdrom`),` (bool) - Remove all CD-ROMs from the VM (default is false).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  vm_clean`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      cdrom `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h2\",{\"id\":\"user-content-template-configuration\",\"data-text-content\":\"Template configuration\",\"className\":\"g-type-display-3\"},`Template configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`template{}`),` entry to create a template from the temporary VM.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Template feature need Prism Central 2024.3+ or later.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`All parameters of this `,mdx(\"inlineCode\",{parentName:\"p\"},`template`),` section are described below.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`create`),` (bool) - Create a template from the temporary VM (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`name`),` (string) - Name of the template to create (default is the vm_name).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`description`),` (string) - Description of the template to create (default is no description).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  template`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      create `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"myTemplate\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      description `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"This is my template\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h2\",{\"id\":\"user-content-ova-config\",\"data-text-content\":\"OVA Config\",\"className\":\"g-type-display-3\"},`OVA Config`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`ova{}`),` entry to configure the OVA creation & export`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`All parameters of this `,mdx(\"inlineCode\",{parentName:\"p\"},`ova`),` section are described below.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`create`),` (bool) - Create OVA image for the vm (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`export`),` (bool) - Export OVA image in the current folder (default is false).`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`format`),` (string) - Format of the ova image (allowed values: 'vmdk', 'qcow2', default 'vmdk').`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`name`),` (string) - Name of the the OVA image (default is the vm_name).`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  ova`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      create `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      export `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` true`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      format `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"vmdk\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`      name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"myExportedOVA\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h2\",{\"id\":\"user-content-network-configuration\",\"data-text-content\":\"Network Configuration\",\"className\":\"g-type-display-3\"},`Network Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_nics{}`),` entry to configure NICs in your image`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In this section, you have to define network you will to connect with one of this keyword :`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`subnet_name`),` (string) - Name of the cluster subnet to use.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`subnet_uuid`),` (string) - UUID of the cluster subnet to use.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`mac_address`),` (string) - The network card MAC address. If not specified, a random MAC address will be generated.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  vm_nics`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    subnet_name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"<mySubnet>\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h3\",{\"id\":\"user-content-categories-configuration\",\"data-text-content\":\"Categories Configuration\",\"className\":\"g-type-display-4\"},`Categories Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`image_categories{}`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`vm_categories{}`),` to assign category to your image or vm.  If you want to assign multiple categories , use the entry multiple times.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In this section, you have to define category you will to assign with the following parameters:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`key`),` (string) - Name of the category to assign.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`value`),` (string) - Value of the category to assign.`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  image_categories`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    key `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"OSType\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    value `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"ubuntu-22.04\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Note: Categories must already be present in Prism Central.`),mdx(\"h2\",{\"id\":\"user-content-gpu-configuration\",\"data-text-content\":\"GPU Configuration\",\"className\":\"g-type-display-3\"},`GPU Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Use `,mdx(\"inlineCode\",{parentName:\"p\"},`GPU`),` to assign a GPU that is present on `,mdx(\"inlineCode\",{parentName:\"p\"},`cluster-name`),` on the temporary vm. Add the name of the GPU you wish to attach.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Sample`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`  gpu`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    name `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},` \"Ampere 40\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`)),mdx(\"h2\",{\"id\":\"user-content-boot-configuration\",\"data-text-content\":\"Boot Configuration\",\"className\":\"g-type-display-3\"},`Boot Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The boot configuration is very important: `,mdx(\"inlineCode\",{parentName:\"p\"},`boot_command`),` specifies the keys\nto type when the virtual machine is first booted in order to start the OS\ninstaller. This command is typed after boot_wait, which gives the virtual\nmachine some time to actually load.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The boot_command is an array of strings. The strings are all typed in\nsequence. It is an array only to improve readability within the template.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`There are a set of special keys available. If these are in your boot\ncommand, they will be replaced by the proper key:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<bs>`),` - Backspace`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<del>`),` - Delete`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<enter> <return>`),` - Simulates an actual \"enter\" or \"return\" keypress.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<esc>`),` - Simulates pressing the escape key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<tab>`),` - Simulates pressing the tab key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<f1> - <f12>`),` - Simulates pressing a function key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<up> <down> <left> <right>`),` - Simulates pressing an arrow key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<spacebar>`),` - Simulates pressing the spacebar.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<insert>`),` - Simulates pressing the insert key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<home> <end>`),` - Simulates pressing the home and end keys.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<pageUp> <pageDown>`),` - Simulates pressing the page up and page down\nkeys.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<menu>`),` - Simulates pressing the Menu key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<leftAlt> <rightAlt>`),` - Simulates pressing the alt key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<leftCtrl> <rightCtrl>`),` - Simulates pressing the ctrl key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<leftShift> <rightShift>`),` - Simulates pressing the shift key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<leftSuper> <rightSuper>`),` - Simulates pressing the ⌘ or Windows key.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<wait> <wait5> <wait10>`),` - Adds a 1, 5 or 10 second pause before\nsending any additional keys. This is useful if you have to generally\nwait for the UI to update before typing more.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<waitXX>`),` - Add an arbitrary pause before sending any additional keys.\nThe format of `,mdx(\"inlineCode\",{parentName:\"p\"},`XX`),` is a sequence of positive decimal numbers, each with\noptional fraction and a unit suffix, such as `,mdx(\"inlineCode\",{parentName:\"p\"},`300ms`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`1.5h`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`2h45m`),`.\nValid time units are `,mdx(\"inlineCode\",{parentName:\"p\"},`ns`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`us`),` (or `,mdx(\"inlineCode\",{parentName:\"p\"},`\\xb5s`),`), `,mdx(\"inlineCode\",{parentName:\"p\"},`ms`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`s`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`m`),`, `,mdx(\"inlineCode\",{parentName:\"p\"},`h`),`. For\nexample `,mdx(\"inlineCode\",{parentName:\"p\"},`<wait10m>`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`<wait1m20s>`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`<XXXOn> <XXXOff>`),` - Any printable keyboard character, and of these\n\"special\" expressions, with the exception of the `,mdx(\"inlineCode\",{parentName:\"p\"},`<wait>`),` types, can\nalso be toggled on or off. For example, to simulate ctrl+c, use\n`,mdx(\"inlineCode\",{parentName:\"p\"},`<leftCtrlOn>c<leftCtrlOff>`),`. Be sure to release them, otherwise they\nwill be held down until the machine reboots. To hold the `,mdx(\"inlineCode\",{parentName:\"p\"},`c`),` key down,\nyou would use `,mdx(\"inlineCode\",{parentName:\"p\"},`<cOn>`),`. Likewise, `,mdx(\"inlineCode\",{parentName:\"p\"},`<cOff>`),` to release.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`{{ .HTTPIP }} {{ .HTTPPort }}`),` - The IP and port, respectively of an\nHTTP server that is started serving the directory specified by the\n`,mdx(\"inlineCode\",{parentName:\"p\"},`http_directory`),` configuration parameter. If `,mdx(\"inlineCode\",{parentName:\"p\"},`http_directory`),` isn't\nspecified, these will be blank!`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`{{ .Name }}`),` - The name of the VM.`))),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Example boot command. This is actually a working boot command used to start an\nCentOS 6.4 installer:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In JSON:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"boot_command\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`       \"<tab><wait>\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`       \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    ]`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In HCL2:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`boot_command `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`       \"<tab><wait>\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`       \" ks=http://{{ .HTTPIP }}:{{ .HTTPPort }}/centos6-ks.cfg<enter>\"`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    ]`)),`\n`,`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The example shown below is a working boot command used to start an Ubuntu\n12.04 installer:`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In JSON:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"boot_command\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`: [`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"<esc><esc><enter><wait>\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"/install/vmlinuz noapic \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"hostname={{ .Name }} \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"fb=false debconf/frontend=noninteractive \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"keyboard-configuration/variant=USA console-setup/ask_detect=false \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"initrd=/install/initrd.gz -- <enter>\"`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`In HCL2:`),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`boot_command `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` [`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"<esc><esc><enter><wait>\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"/install/vmlinuz noapic \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"debian-installer=en_US auto locale=en_US kbd-chooser/method=us \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"hostname={{ .Name }} \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"fb=false debconf/frontend=noninteractive \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"keyboard-configuration/modelcode=SKIP keyboard-configuration/layout=USA \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"keyboard-configuration/variant=USA console-setup/ask_detect=false \"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-punctuation)\"}},`,`)),`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`    \"initrd=/install/initrd.gz -- <enter>\"`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`]`)),`\n`)),mdx(\"p\",{\"className\":\"g-type-long-body\"},`For more examples of various boot commands, see the sample projects from our\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://packer.io/community-tools#templates\"},`community templates page`),`.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The boot command \"typed\" character for character over a VNC connection to\nthe machine, simulating a human actually typing the keyboard.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Keystrokes are typed as separate key up/down events over VNC with a default\n100ms delay. The delay alleviates issues with latency and CPU contention.\nYou can tune this delay on a per-builder basis by specifying\n\"boot_key_interval\" in your Packer template.`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`boot_keygroup_interval`),` (duration string | ex: \"1h5m2s\") - Time to wait after sending a group of key pressses. The value of this\nshould be a duration. Examples are `,mdx(\"inlineCode\",{parentName:\"p\"},`5s`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`1m30s`),` which will cause\nPacker to wait five seconds and one minute 30 seconds, respectively. If\nthis isn't specified, a sensible default value is picked depending on\nthe builder type.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`boot_wait`),` (duration string | ex: \"1h5m2s\") - The time to wait after booting the initial virtual machine before typing\nthe `,mdx(\"inlineCode\",{parentName:\"p\"},`boot_command`),`. The value of this should be a duration. Examples are\n`,mdx(\"inlineCode\",{parentName:\"p\"},`5s`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`1m30s`),` which will cause Packer to wait five seconds and one\nminute 30 seconds, respectively. If this isn't specified, the default is\n`,mdx(\"inlineCode\",{parentName:\"p\"},`10s`),` or 10 seconds. To set boot_wait to 0s, use a negative number, such\nas \"-1s\"`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`boot_command`),` ([]string) - This is an array of commands to type when the virtual machine is first\nbooted. The goal of these commands should be to type just enough to\ninitialize the operating system installer. Special keys can be typed as\nwell, and are covered in the section below on the boot command. If this\nis not specified, it is assumed the installer will start itself.`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`disable_vnc`),` (bool) - Whether to create a VNC connection or not. A boot_command cannot be used\nwhen this is true. Defaults to false.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`boot_key_interval`),` (duration string | ex: \"1h5m2s\") - Time in ms to wait between each key press`))),mdx(\"h2\",{\"id\":\"user-content-ip-wait-configuration\",\"data-text-content\":\"IP Wait configuration\",\"className\":\"g-type-display-3\"},`IP Wait configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ip_wait_timeout`),` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP, similar to 'ssh_timeout'.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`30m`),` (30 minutes). Refer to the Golang\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://golang.org/pkg/time/#ParseDuration\"},`ParseDuration`),`\ndocumentation for full details.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ip_settle_timeout`),` (duration string | ex: \"1h5m2s\") - Amount of time to wait for VM's IP to settle down, sometimes VM may\nreport incorrect IP initially, then it is recommended to set that\nparameter to apx. 2 minutes. Examples `,mdx(\"inlineCode\",{parentName:\"p\"},`45s`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`10m`),`.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`5s`),` (5 seconds). Refer to the Golang\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://golang.org/pkg/time/#ParseDuration\"},`ParseDuration`),`\ndocumentation for full details.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ip_wait_address`),` (`,`*`,`string) - Set this to a CIDR address to cause the service to wait for an address that is contained in\nthis network range. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`0.0.0.0/0`),` for any IPv4 address. Examples include:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},`empty string (\"\") - remove all filters`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`0:0:0:0:0:0:0:0/0`),` - allow only ipv6 addresses`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`192.168.1.0/24`),` - only allow ipv4 addresses from 192.168.1.1 to 192.168.1.254`)))),mdx(\"h2\",{\"id\":\"user-content-communicator-configuration\",\"data-text-content\":\"Communicator Configuration\",\"className\":\"g-type-display-3\"},`Communicator Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Optional`),`:`),mdx(\"h5\",{\"id\":\"user-content-common\",\"data-text-content\":\"Common\",\"className\":\"g-type-display-6\"},`Common`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`communicator`),` (string) - Packer currently supports three kinds of communicators:`),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`none`),` - No communicator will be used. If this is set, most\nprovisioners also can't be used.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh`),` - An SSH connection will be established to the machine. This\nis usually the default.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm`),` - A WinRM connection will be established.`))),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`In addition to the above, some builders have custom communicators they\ncan use. For example, the Docker builder has a \"docker\" communicator\nthat uses `,mdx(\"inlineCode\",{parentName:\"p\"},`docker exec`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`docker cp`),` to execute scripts and copy\nfiles.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`pause_before_connecting`),` (duration string | ex: \"1h5m2s\") - We recommend that you enable SSH or WinRM as the very last step in your\nguest's bootstrap script, but sometimes you may have a race condition\nwhere you need Packer to wait before attempting to connect to your\nguest.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`If you end up in this situation, you can use the template option\n`,mdx(\"inlineCode\",{parentName:\"p\"},`pause_before_connecting`),`. By default, there is no pause. For example if\nyou set `,mdx(\"inlineCode\",{parentName:\"p\"},`pause_before_connecting`),` to `,mdx(\"inlineCode\",{parentName:\"p\"},`10m`),` Packer will check whether it\ncan connect, as normal. But once a connection attempt is successful, it\nwill disconnect and then wait 10 minutes before connecting to the guest\nand beginning provisioning.`))),mdx(\"h5\",{\"id\":\"user-content-ssh\",\"data-text-content\":\"SSH\",\"className\":\"g-type-display-6\"},`SSH`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_host`),` (string) - The address to SSH to. This usually is automatically configured by the\nbuilder.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_port`),` (int) - The port to connect to SSH. This defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`22`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_username`),` (string) - The username to connect to SSH with. Required if using SSH.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_password`),` (string) - A plaintext password to use to authenticate with SSH.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_ciphers`),` ([]string) - This overrides the value of ciphers supported by default by Golang.\nThe default value is `,`[\n\"aes128-gcm@openssh.com\",\n\"chacha20-poly1305@openssh.com\",\n\"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\",\n]`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`Valid options for ciphers include:\n\"aes128-ctr\", \"aes192-ctr\", \"aes256-ctr\", \"`,mdx(\"a\",{parentName:\"p\",\"href\":\"mailto:aes128-gcm@openssh.com\"},`aes128-gcm@openssh.com`),`\",\n\"`,mdx(\"a\",{parentName:\"p\",\"href\":\"mailto:chacha20-poly1305@openssh.com\"},`chacha20-poly1305@openssh.com`),`\",\n\"arcfour256\", \"arcfour128\", \"arcfour\", \"aes128-cbc\", \"3des-cbc\",`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_clear_authorized_keys`),` (bool) - If true, Packer will attempt to remove its temporary key from\n`,mdx(\"inlineCode\",{parentName:\"p\"},`~/.ssh/authorized_keys`),` and `,mdx(\"inlineCode\",{parentName:\"p\"},`/root/.ssh/authorized_keys`),`. This is a\nmostly cosmetic option, since Packer will delete the temporary private\nkey from the host system regardless of whether this is set to true\n(unless the user has set the `,mdx(\"inlineCode\",{parentName:\"p\"},`-debug`),` flag). Defaults to \"false\";\ncurrently only works on guests with `,mdx(\"inlineCode\",{parentName:\"p\"},`sed`),` installed.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_key_exchange_algorithms`),` ([]string) - If set, Packer will override the value of key exchange (kex) algorithms\nsupported by default by Golang. Acceptable values include:\n\"`,mdx(\"a\",{parentName:\"p\",\"href\":\"mailto:curve25519-sha256@libssh.org\"},`curve25519-sha256@libssh.org`),`\", \"ecdh-sha2-nistp256\",\n\"ecdh-sha2-nistp384\", \"ecdh-sha2-nistp521\",\n\"diffie-hellman-group14-sha1\", and \"diffie-hellman-group1-sha1\".`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_certificate_file`),` (string) - Path to user certificate used to authenticate with SSH.\nThe `,mdx(\"inlineCode\",{parentName:\"p\"},`~`),` can be used in path and will be expanded to the\nhome directory of current user.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_pty`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, a PTY will be requested for the SSH connection. This defaults\nto `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_timeout`),` (duration string | ex: \"1h5m2s\") - The time to wait for SSH to become available. Packer uses this to\ndetermine when the machine has booted so this is usually quite long.\nExample value: `,mdx(\"inlineCode\",{parentName:\"p\"},`10m`),`.\nThis defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`5m`),`, unless `,mdx(\"inlineCode\",{parentName:\"p\"},`ssh_handshake_attempts`),` is set.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_disable_agent_forwarding`),` (bool) - If true, SSH agent forwarding will be disabled. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_handshake_attempts`),` (int) - The number of handshakes to attempt with SSH once it can connect.\nThis defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`10`),`, unless a `,mdx(\"inlineCode\",{parentName:\"p\"},`ssh_timeout`),` is set.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_host`),` (string) - A bastion host to use for the actual SSH connection.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_port`),` (int) - The port of the bastion host. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`22`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_agent_auth`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, the local SSH agent will be used to authenticate with the\nbastion host. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_username`),` (string) - The username to connect to the bastion host.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_password`),` (string) - The password to use to authenticate with the bastion host.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_interactive`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, the keyboard-interactive used to authenticate with bastion host.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_private_key_file`),` (string) - Path to a PEM encoded private key file to use to authenticate with the\nbastion host. The `,mdx(\"inlineCode\",{parentName:\"p\"},`~`),` can be used in path and will be expanded to the\nhome directory of current user.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_bastion_certificate_file`),` (string) - Path to user certificate used to authenticate with bastion host.\nThe `,mdx(\"inlineCode\",{parentName:\"p\"},`~`),` can be used in path and will be expanded to the\nhome directory of current user.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_file_transfer_method`),` (string) - `,mdx(\"inlineCode\",{parentName:\"p\"},`scp`),` or `,mdx(\"inlineCode\",{parentName:\"p\"},`sftp`),` - How to transfer files, Secure copy (default) or SSH\nFile Transfer Protocol.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`NOTE`),`: Guests using Windows with Win32-OpenSSH v9.1.0.0p1-Beta, scp\n(the default protocol for copying data) returns a a non-zero error code since the MOTW\ncannot be set, which cause any file transfer to fail. As a workaround you can override the transfer protocol\nwith SFTP instead `,mdx(\"inlineCode\",{parentName:\"p\"},`ssh_file_transfer_method = \"sftp\"`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_proxy_host`),` (string) - A SOCKS proxy host to use for SSH connection`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_proxy_port`),` (int) - A port of the SOCKS proxy. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`1080`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_proxy_username`),` (string) - The optional username to authenticate with the proxy server.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_proxy_password`),` (string) - The optional password to use to authenticate with the proxy server.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_keep_alive_interval`),` (duration string | ex: \"1h5m2s\") - How often to send \"keep alive\" messages to the server. Set to a negative\nvalue (`,mdx(\"inlineCode\",{parentName:\"p\"},`-1s`),`) to disable. Example value: `,mdx(\"inlineCode\",{parentName:\"p\"},`10s`),`. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`5s`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_read_write_timeout`),` (duration string | ex: \"1h5m2s\") - The amount of time to wait for a remote command to end. This might be\nuseful if, for example, packer hangs on a connection after a reboot.\nExample: `,mdx(\"inlineCode\",{parentName:\"p\"},`5m`),`. Disabled by default.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_remote_tunnels`),` ([]string) - Remote tunnels forward a port from your local machine to the instance.\nFormat: `,`[\"REMOTE_PORT:LOCAL_HOST:LOCAL_PORT\"]`,`\nExample: \"9090:localhost:80\" forwards localhost:9090 on your machine to port 80 on the instance.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`ssh_local_tunnels`),` ([]string) - Local tunnels forward a port from the instance to your local machine.\nFormat: `,`[\"LOCAL_PORT:REMOTE_HOST:REMOTE_PORT\"]`,`\nExample: \"8080:localhost:3000\" allows the instance to access your local machine’s port 3000 via localhost:8080.`))),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`ssh_private_key_file`),` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\nThe `,mdx(\"inlineCode\",{parentName:\"li\"},`~`),` can be used in path and will be expanded to the home directory\nof current user.`)),mdx(\"h5\",{\"id\":\"user-content-windows-remote-management-(winrm)\",\"data-text-content\":\"Windows Remote Management WinRM\",\"className\":\"g-type-display-6\"},`Windows Remote Management (WinRM)`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_username`),` (string) - The username to use to connect to WinRM.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_password`),` (string) - The password to use to connect to WinRM.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_host`),` (string) - The address for WinRM to connect to.`),mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},`NOTE: If using an Amazon EBS builder, you can specify the interface\nWinRM connects to via\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"/packer/integrations/nutanix-cloud-native/amazon/latest/components/builder/ebs#ssh_interface\"},mdx(\"inlineCode\",{parentName:\"a\"},`ssh_interface`)))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_no_proxy`),` (bool) - Setting this to `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),` adds the remote\n`,mdx(\"inlineCode\",{parentName:\"p\"},`host:port`),` to the `,mdx(\"inlineCode\",{parentName:\"p\"},`NO_PROXY`),` environment variable. This has the effect of\nbypassing any configured proxies when connecting to the remote host.\nDefault to `,mdx(\"inlineCode\",{parentName:\"p\"},`false`),`.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_port`),` (int) - The WinRM port to connect to. This defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},`5985`),` for plain\nunencrypted connection and `,mdx(\"inlineCode\",{parentName:\"p\"},`5986`),` for SSL when `,mdx(\"inlineCode\",{parentName:\"p\"},`winrm_use_ssl`),` is set to\ntrue.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_timeout`),` (duration string | ex: \"1h5m2s\") - The amount of time to wait for WinRM to become available. This defaults\nto `,mdx(\"inlineCode\",{parentName:\"p\"},`30m`),` since setting up a Windows machine generally takes a long time.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_use_ssl`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, use HTTPS for WinRM.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_insecure`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, do not check server certificate chain and host name.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"inlineCode\",{parentName:\"p\"},`winrm_use_ntlm`),` (bool) - If `,mdx(\"inlineCode\",{parentName:\"p\"},`true`),`, NTLMv2 authentication (with session security) will be used\nfor WinRM, rather than default (basic authentication), removing the\nrequirement for basic authentication to be enabled within the target\nguest. Further reading for remote connection authentication can be found\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://msdn.microsoft.com/en-us/library/aa384295(v=vs.85).aspx\"},`here`),`.`))),mdx(\"h2\",{\"id\":\"user-content-samples\",\"data-text-content\":\"Samples\",\"className\":\"g-type-display-3\"},`Samples`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`You can find samples `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/nutanix-cloud-native/packer-plugin-nutanix/tree/main/example\"},`here`),` for these instructions usage.`))};MDXContent.isMDXComponent=true;","scope":{}},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Nutanix","url":"/packer/integrations/nutanix-cloud-native/nutanix","isCurrentPage":false},{"title":"v1.1.1","url":"/packer/integrations/nutanix-cloud-native/nutanix/v1.1.1","isCurrentPage":false},{"title":"Components"},{"title":"Builder"},{"title":"Nutanix plugin","url":"/packer/integrations/nutanix-cloud-native/nutanix/latest/components/builder/nutanix","isCurrentPage":true}]},"__N_SSG":true}