{"pageProps":{"metadata":{"title":"Kibana | Integrations","description":"Kibana is a free and open user interface that lets you visualize your Elasticsearch data and navigate the Elastic Stack."},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"835dc4a3-c0f9-480e-85c8-fb5747f59b61","slug":"kibana","name":"Kibana","description":"Kibana is a free and open user interface that lets you visualize your Elasticsearch data and navigate the Elastic Stack.","license_type":null,"license_url":null,"external_only":false,"external_url":"https://www.elastic.co/","tier":"community","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/kibana","created_at":"2023-05-17T17:27:01.475Z","updated_at":"2023-07-12T18:05:06.739Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"7b1d506b-b22d-4ca0-bc66-bb40abf6a1b9","integration_id":"835dc4a3-c0f9-480e-85c8-fb5747f59b61","version":"0.0.1","readme":"This pack contains all you need to deploy Kibana (version 2 by default) in Nomad. It uses Docker driver.\n\n## Variables\n\n- `job_name` (string) - The name to use as the job name which overrides using the pack name.\n- `region` (string) - The region where jobs will be deployed.\n- `datacenters` (list of strings) - A list of datacenters in the region which are eligible for task placement.\n- `namespace` (string) - The namespace where the job should be placed.\n- `constraints` (string) - Constraints to apply to the entire job.\n- `image_name` (string) - The docker image name.\n- `image_tag` (string) - The docker image tag.\n- `task_resources` (object, number number) Resources used by Kibana task\n- `register_consul_service` (bool) - If you want to register a consul service for the job\n- `consul_service_name` (string) - The consul service name for the Kibana application\n- `consul_service_tags` (list of string) - The consul service name for the Kibana application\n- `config_volume_name` (string) - The name of the configuration dedicated volume you want Kibana to use\n- `config_volume_type` (string) - The type of the configuration dedicated volume you want Kibana to use\n- `kibana_keystore_name` (string) - The name of the file to persist Kibana secure settings\n- `docker_kibana_env_vars` (map of string) - Environment variables to pass to Docker container\n- `kibana_config_file_path` (string) - Kibana configuration file path\n\n## Automated Setup and Persisted Configuration\n\nYou have two options:\n\n- __Environment variables way__:\n    If you pass the right environment variables to the pack, you can automatically setup Kibana.\n    An example of the `docker_kibana_env_vars` to use is in the `vars.nomad` file.\n\n- __Configration file through volume__:\n    You can also mounth a volume to persist the configuration file that you can pass through the variable `kibana_config_file_path`.\n    You have also to set the `config_volume_name` variable that allows you to mount the volume where you can save the configuration file. Also this in `vars.nomad`.\n\nPay attention that, if you pass environment variables to setup Kibana AND you use the configuration file volume, the docker environment variables have the precedence. \n\n## Persist the Kibana keystore\n\nTo persist your secure settings, use the `kibana-keystore` utility setting `kibana_keystore_name` variable. \n","created_at":"2023-05-17T22:19:26.671Z","updated_at":"2023-05-17T22:19:26.671Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"Kibana","url":"/nomad/integrations/hashicorp/kibana","isCurrentPage":true}],"anchorLinks":[{"id":"variables","level":2,"title":"Variables"},{"id":"automated-setup-and-persisted-configuration","level":2,"title":"Automated Setup and Persisted Configuration"},{"id":"persist-the-kibana-keystore","level":2,"title":"Persist the Kibana keystore"}],"serializedREADME":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",{\"className\":\"g-type-long-body\"},`This pack contains all you need to deploy Kibana (version 2 by default) in Nomad. It uses Docker driver.`),mdx(\"h2\",{\"id\":\"user-content-variables\",\"data-text-content\":\"Variables\",\"className\":\"g-type-display-3\"},`Variables`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`job_name`),` (string) - The name to use as the job name which overrides using the pack name.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`region`),` (string) - The region where jobs will be deployed.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`datacenters`),` (list of strings) - A list of datacenters in the region which are eligible for task placement.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`namespace`),` (string) - The namespace where the job should be placed.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`constraints`),` (string) - Constraints to apply to the entire job.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_name`),` (string) - The docker image name.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`image_tag`),` (string) - The docker image tag.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`task_resources`),` (object, number number) Resources used by Kibana task`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`register_consul_service`),` (bool) - If you want to register a consul service for the job`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`consul_service_name`),` (string) - The consul service name for the Kibana application`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`consul_service_tags`),` (list of string) - The consul service name for the Kibana application`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`config_volume_name`),` (string) - The name of the configuration dedicated volume you want Kibana to use`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`config_volume_type`),` (string) - The type of the configuration dedicated volume you want Kibana to use`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`kibana_keystore_name`),` (string) - The name of the file to persist Kibana secure settings`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`docker_kibana_env_vars`),` (map of string) - Environment variables to pass to Docker container`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`kibana_config_file_path`),` (string) - Kibana configuration file path`)),mdx(\"h2\",{\"id\":\"user-content-automated-setup-and-persisted-configuration\",\"data-text-content\":\"Automated Setup and Persisted Configuration\",\"className\":\"g-type-display-3\"},`Automated Setup and Persisted Configuration`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`You have two options:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Environment variables way`),`:\nIf you pass the right environment variables to the pack, you can automatically setup Kibana.\nAn example of the `,mdx(\"inlineCode\",{parentName:\"p\"},`docker_kibana_env_vars`),` to use is in the `,mdx(\"inlineCode\",{parentName:\"p\"},`vars.nomad`),` file.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",{parentName:\"li\",\"className\":\"g-type-long-body\"},mdx(\"strong\",{parentName:\"p\"},`Configration file through volume`),`:\nYou can also mounth a volume to persist the configuration file that you can pass through the variable `,mdx(\"inlineCode\",{parentName:\"p\"},`kibana_config_file_path`),`.\nYou have also to set the `,mdx(\"inlineCode\",{parentName:\"p\"},`config_volume_name`),` variable that allows you to mount the volume where you can save the configuration file. Also this in `,mdx(\"inlineCode\",{parentName:\"p\"},`vars.nomad`),`.`))),mdx(\"p\",{\"className\":\"g-type-long-body\"},`Pay attention that, if you pass environment variables to setup Kibana AND you use the configuration file volume, the docker environment variables have the precedence. `),mdx(\"h2\",{\"id\":\"user-content-persist-the-kibana-keystore\",\"data-text-content\":\"Persist the Kibana keystore\",\"className\":\"g-type-display-3\"},`Persist the Kibana keystore`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`To persist your secure settings, use the `,mdx(\"inlineCode\",{parentName:\"p\"},`kibana-keystore`),` utility setting `,mdx(\"inlineCode\",{parentName:\"p\"},`kibana_keystore_name`),` variable. `))};MDXContent.isMDXComponent=true;","scope":{}}},"__N_SSG":true}