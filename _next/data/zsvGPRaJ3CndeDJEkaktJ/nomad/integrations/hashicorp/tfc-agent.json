{"pageProps":{"metadata":{"title":"TFC Agent | Integrations","description":"Terraform Cloud Agent"},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"1cbd6ce9-599b-4cdc-9326-b95ac9c81046","slug":"tfc-agent","name":"TFC Agent","description":"Terraform Cloud Agent","license_type":null,"license_url":null,"external_only":false,"external_url":"https://www.terraform.io/docs/cloud/agents/index.html","tier":"official","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/tfc_agent","created_at":"2023-05-17T17:28:18.464Z","updated_at":"2023-07-12T18:05:11.936Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.1.0"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"1aac5d9d-5950-4e83-8b6a-4396e9be1988","integration_id":"1cbd6ce9-599b-4cdc-9326-b95ac9c81046","version":"0.1.0","readme":"Terraform Cloud Agent\n=====================\n\nThis pack deploys the\n[Terraform Cloud Agent](https://www.terraform.io/docs/cloud/agents/index.html)\nusing the [official Docker container](https://hub.docker.com/r/hashicorp/tfc-agent).\n\nVariables\n=========\n\nThe following variables are settable when running this pack.\n\n## Nomad-related variables\n\n### Optional\n\n* `job_name` (`string`, `\"\"`) - The name of the job to register.\n* `datacenters` (`list(string)`, `[\"dc1\"]`) - An array of Nomad datacenter names.\n* `region` (`string`, `\"\"`) - The region where the job should be placed.\n* `namespace` (`string`, `\"\"`) - Optional namespace to run the job in.\n* `count` (`number`, `1`) - Number of agent processes to run.\n* `resources` (`object`) - Resources required to run the task.\n  * `cpu` (`number`, `2048`) - CPU MHz required to run the task.\n  * `memory` (`number`, `2048`) - Memory in MB required to run the task.\n\n## Terraform Cloud Agent variables\n\nThese variables may be set to change the behavior of the tfc-agent. Note that\nempty/zero/false values are used as defaults for all options unless otherwise\nnoted to defer default configuration to the tfc-agent binary itself. See the\noutput of `docker run hashicorp/tfc-agent:<version> -h` for details.\n\n### Required\n\n* `agent_token` (`string`) - The authentication token the agent will\n  use to register with Terraform Cloud. This value is required and has no\n  default.\n\n### Optional\n\n* `tfc_address` (`string`) - The API address of the Terraform Cloud instance to\n  register the agent(s) with. When empty, defaults to the public Terraform\n  Cloud instance.\n* `agent_version` (`string`, `\"latest\"`) - The version of the\n  `hashicorp/tfc-agent` Docker container to run.\n* `agent_name` (`string`) - Friendly name to assign to the registered agent.\n* `agent_log_level` (`string`) - The level of log granularity to configure for\n  the agent. Valid values are `trace`, `debug`, `info`, `warn`, and `error`.\n* `agent_log_json` (`bool`) - When true, the logs emitted by the agent process\n  will be JSON-formatted, and contain rich metadata. The default is\n  text-formatted logs which are more easily consumed directly by humans.\n* `agent_auto_update` (`string`) - The automatic update strategy to configure\n  on the agent. When `disabled` is specified, the agent will not perform online\n  upgrades while it is running. This is useful if you'd like to control the\n  precise version of the agent to run. When `patch` is specified, the agent\n  will automatically apply patches from the same minor version series.  When\n  `minor` is specified, the agent will apply all minor version updates as they\n  become available, within the same major version series.\n* `agent_single` (`bool`) - When true, the agent will wait for and execute at\n  most one job. This provides the highest level of isolation between agent job\n  executions.\n* `agent_otlp_address` (`string`) - OpenTelemetry gRPC endpoint for submitting\n  agent metrics and tracing data.\n* `agent_otlp_cert` (`string`) - Go-getter path to a TLS certificate for\n  encrypting gRPC connections made by the OpenTelemetry client library.\n","created_at":"2023-05-17T22:19:06.540Z","updated_at":"2023-05-17T22:19:06.540Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"TFC Agent","url":"/nomad/integrations/hashicorp/tfc-agent","isCurrentPage":true}],"anchorLinks":[{"id":"terraform-cloud-agent","level":1,"title":"Terraform Cloud Agent"},{"id":"variables","level":1,"title":"Variables"},{"id":"nomad-related-variables","level":2,"title":"Nomad-related variables"},{"id":"optional","level":3,"title":"Optional"},{"id":"terraform-cloud-agent-variables","level":2,"title":"Terraform Cloud Agent variables"},{"id":"required","level":3,"title":"Required"},{"id":"optional","level":3,"title":"Optional"}],"serializedREADME":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"h1\",{\"id\":\"user-content-terraform-cloud-agent\",\"data-text-content\":\"Terraform Cloud Agent\",\"className\":\"g-type-display-2\"},`Terraform Cloud Agent`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`This pack deploys the\n`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://www.terraform.io/docs/cloud/agents/index.html\"},`Terraform Cloud Agent`),`\nusing the `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://hub.docker.com/r/hashicorp/tfc-agent\"},`official Docker container`),`.`),mdx(\"h1\",{\"id\":\"user-content-variables\",\"data-text-content\":\"Variables\",\"className\":\"g-type-display-2\"},`Variables`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`The following variables are settable when running this pack.`),mdx(\"h2\",{\"id\":\"user-content-nomad-related-variables\",\"data-text-content\":\"Nomad-related variables\",\"className\":\"g-type-display-3\"},`Nomad-related variables`),mdx(\"h3\",{\"id\":\"user-content-optional\",\"data-text-content\":\"Optional\",\"className\":\"g-type-display-4\"},`Optional`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`job_name`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`\"\"`),`) - The name of the job to register.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`datacenters`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`list(string)`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`[\"dc1\"]`),`) - An array of Nomad datacenter names.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`region`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`\"\"`),`) - The region where the job should be placed.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`namespace`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`\"\"`),`) - Optional namespace to run the job in.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`count`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`number`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`1`),`) - Number of agent processes to run.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`resources`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`object`),`) - Resources required to run the task.`,mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`cpu`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`number`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`2048`),`) - CPU MHz required to run the task.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`memory`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`number`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`2048`),`) - Memory in MB required to run the task.`)))),mdx(\"h2\",{\"id\":\"user-content-terraform-cloud-agent-variables\",\"data-text-content\":\"Terraform Cloud Agent variables\",\"className\":\"g-type-display-3\"},`Terraform Cloud Agent variables`),mdx(\"p\",{\"className\":\"g-type-long-body\"},`These variables may be set to change the behavior of the tfc-agent. Note that\nempty/zero/false values are used as defaults for all options unless otherwise\nnoted to defer default configuration to the tfc-agent binary itself. See the\noutput of `,mdx(\"inlineCode\",{parentName:\"p\"},`docker run hashicorp/tfc-agent:<version> -h`),` for details.`),mdx(\"h3\",{\"id\":\"user-content-required\",\"data-text-content\":\"Required\",\"className\":\"g-type-display-4\"},`Required`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_token`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`) - The authentication token the agent will\nuse to register with Terraform Cloud. This value is required and has no\ndefault.`)),mdx(\"h3\",{\"id\":\"user-content-optional\",\"data-text-content\":\"Optional\",\"className\":\"g-type-display-4\"},`Optional`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`tfc_address`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`) - The API address of the Terraform Cloud instance to\nregister the agent(s) with. When empty, defaults to the public Terraform\nCloud instance.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_version`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`\"latest\"`),`) - The version of the\n`,mdx(\"inlineCode\",{parentName:\"li\"},`hashicorp/tfc-agent`),` Docker container to run.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_name`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`) - Friendly name to assign to the registered agent.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_log_level`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`) - The level of log granularity to configure for\nthe agent. Valid values are `,mdx(\"inlineCode\",{parentName:\"li\"},`trace`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`debug`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`info`),`, `,mdx(\"inlineCode\",{parentName:\"li\"},`warn`),`, and `,mdx(\"inlineCode\",{parentName:\"li\"},`error`),`.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_log_json`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`bool`),`) - When true, the logs emitted by the agent process\nwill be JSON-formatted, and contain rich metadata. The default is\ntext-formatted logs which are more easily consumed directly by humans.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_auto_update`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`) - The automatic update strategy to configure\non the agent. When `,mdx(\"inlineCode\",{parentName:\"li\"},`disabled`),` is specified, the agent will not perform online\nupgrades while it is running. This is useful if you'd like to control the\nprecise version of the agent to run. When `,mdx(\"inlineCode\",{parentName:\"li\"},`patch`),` is specified, the agent\nwill automatically apply patches from the same minor version series.  When\n`,mdx(\"inlineCode\",{parentName:\"li\"},`minor`),` is specified, the agent will apply all minor version updates as they\nbecome available, within the same major version series.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_single`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`bool`),`) - When true, the agent will wait for and execute at\nmost one job. This provides the highest level of isolation between agent job\nexecutions.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_otlp_address`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`) - OpenTelemetry gRPC endpoint for submitting\nagent metrics and tracing data.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},`agent_otlp_cert`),` (`,mdx(\"inlineCode\",{parentName:\"li\"},`string`),`) - Go-getter path to a TLS certificate for\nencrypting gRPC connections made by the OpenTelemetry client library.`)))};MDXContent.isMDXComponent=true;","scope":{}}},"__N_SSG":true}