{"pageProps":{"metadata":{"title":"Backstage | Integrations","description":"An open platform for building developer portals"},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"1915f438-dc7e-4e5a-ba31-b0a865ba8d4d","slug":"backstage","name":"Backstage","description":"An open platform for building developer portals","license_type":null,"license_url":null,"external_only":false,"external_url":"https://backstage.io","tier":"community","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/backstage","created_at":"2023-06-26T21:37:16.281Z","updated_at":"2023-07-12T18:05:02.543Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"ff8e6a9f-4779-467c-941a-0ef540d1607a","integration_id":"1915f438-dc7e-4e5a-ba31-b0a865ba8d4d","version":"0.0.1","readme":"This pack contains a service job that runs [Backstage](https://backstage.io/) in a single Nomad client. It currently supports\nbeing run by the [Docker](https://www.nomadproject.io/docs/drivers/docker) driver.\n\nIt has 2 tasks:\n- **Backstage:** [*(reference)*](https://backstage.io) the open platform for building developer portals;\n- **PostgreSQL:** [*(reference)*](https://www.postgresql.org/) the persistent database used by Backstage.\n\nSetup:\n- Service-to-service communication is handled by Nomad;\n- PostgreSQL's state is persisted with Nomad Host Volumes.\n\n## Requirements\nClients that expect to run this job require:\n- Nomad >= 1.4.0 (because the pack use [Nomad Variables](https://developer.hashicorp.com/nomad/docs/concepts/variables))\n- [Docker volumes](https://www.nomadproject.io/docs/drivers/docker \"Docker volumes\") to be enabled within their Docker plugin stanza, due to the usage of Nomad's host volume:\n```hcl\nplugin \"docker\" {\n  config {\n    volumes {\n      enabled = true\n    }\n  }\n}\n```\n\n- [Host volume](https://www.nomadproject.io/docs/configuration/client#host_volume-stanza \"Host volume\") to be enabled in the client configuration (the host volume directory - /var/lib/postgres - must be created in advance):\n```hcl\nclient {\n  host_volume \"backstage-postgres\" {\n    path      = \"/var/lib/postgres\"\n    read_only = false\n  }\n}\n```\n\n## Customizing the Docker images\n\nThe 2 docker images can be replaced by using their variable names:\n- postgresql_task_image\n- backstage_task_image\n\nExample:\n```bash\n$ nomad-pack run backstage --var backstage_task_image=\"ghcr.io/backstage/backstage:1.7.1\"\n```\n\n## Pack Usage\n\n<!-- Include information about how to use your pack -->\n\n### Prerequisite\n\nCreate an variable specification file:\n```hcl\n# spec.nv.hcl\npath = \"nomad/jobs/backstage\"\n\nitems {\n  # Mandatory variables\n  postgres_user = \"your_postgres_username\"\n  postgres_password = \"your_postgres_password\"\n\n  #Optional variables\n  github_token = \"your_github_token\"\n}\n```\n\nThe default docker image for Backstage is configured to use GitHub in order to locate entities (see [GitHub integration](https://backstage.io/docs/integrations/github/locations)), so you will need to define a variable to store your GitHub token. \n\nIf you use an other integration in your custom image, Azure DevOps for instance, you will need to define a variable for it (e.g. ```azure_token = \"your_ado_token\"```).\n\nTo set your variables in your Nomad instance, execute the following command:\n\n```bash\n$ nomad var put @spec.nv.hcl\n```\n\n## Variables\n\n<!-- Include information on the variables from your pack -->\n\n- `job_name` (string) - The name to use as the job name which overrides using\n  the pack name\n- `datacenters` (list of strings) - A list of datacenters in the region which\n  are eligible for task placement\n- `region` (string) - The region where jobs will be deployed\n- `postgresql_group_nomad_service_name` (string) - The nomad service name for the PostgreSQL application\n- `postgresql_task_image` (string) - PostgreSQL's Docker image (must include the tag)\n- `postgresql_task_volume_path` (string) - The volume's absolute path in the host to be used by PostgreSQL\n- `postgresql_task_resources` (object, number number) - The resources to assign to the PostgreSQL service\n- `backstage_group_nomad_service_name` (string) - The nomad service name for the Backstage application\n- `backstage_task_image` (string) - Backstage's Docker image (must include the tag)\n- `backstage_task_nomad_vars` (map of string) - Backstage's nomad variables (see below for the details)\n- `backstage_task_resources` (object, number number) - The resources to assign to the Backstage service\n\n### Custom Nomad Variables\nIf you need to use other Nomad variables than `postgres_user` and `postgres_password` with this pack, you will need to pass them to `backstage_task_nomad_vars`.\n\n```hcl\nbackstage_task_nomad_vars = [\n  {\n    key = \"AZURE_TOKEN\"\n    value = \"azure_token\"\n  },\n  {\n    key = \"YOUR_SECRET_ENV_VAR\"\n    value = \"your_nomad_var_key\"\n  }\n]\n```\n","created_at":"2023-06-26T21:46:28.176Z","updated_at":"2023-06-26T21:46:28.176Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"Backstage","url":"/nomad/integrations/hashicorp/backstage","isCurrentPage":true}],"anchorLinks":[{"id":"requirements","level":2,"title":"Requirements"},{"id":"customizing-the-docker-images","level":2,"title":"Customizing the Docker images"},{"id":"pack-usage","level":2,"title":"Pack Usage"},{"id":"prerequisite","level":3,"title":"Prerequisite"},{"id":"variables","level":2,"title":"Variables"},{"id":"custom-nomad-variables","level":3,"title":"Custom Nomad Variables"}],"serializedREADME":{"compiledSource":"var m=Object.defineProperty,d=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var i=(a,n,s)=>n in a?m(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,e=(a,n)=>{for(var s in n||(n={}))p.call(n,s)&&i(a,s,n[s]);if(o)for(var s of o(n))r.call(n,s)&&i(a,s,n[s]);return a},l=(a,n)=>d(a,N(n));var c=(a,n)=>{var s={};for(var t in a)p.call(a,t)&&n.indexOf(t)<0&&(s[t]=a[t]);if(a!=null&&o)for(var t of o(a))n.indexOf(t)<0&&r.call(a,t)&&(s[t]=a[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:a}=t,n=c(t,[\"components\"]);return mdx(MDXLayout,l(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This pack contains a service job that runs \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://backstage.io/\"}),\"Backstage\"),` in a single Nomad client. It currently supports\nbeing run by the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/drivers/docker\"}),\"Docker\"),\" driver.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"It has 2 tasks:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"Backstage:\"),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://backstage.io\"}),mdx(\"em\",{parentName:\"a\"},\"(reference)\")),\" the open platform for building developer portals;\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"strong\",{parentName:\"li\"},\"PostgreSQL:\"),\" \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.postgresql.org/\"}),mdx(\"em\",{parentName:\"a\"},\"(reference)\")),\" the persistent database used by Backstage.\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Setup:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Service-to-service communication is handled by Nomad;\"),mdx(\"li\",{parentName:\"ul\"},\"PostgreSQL's state is persisted with Nomad Host Volumes.\")),mdx(\"h2\",e({},{id:\"user-content-requirements\",\"data-text-content\":\"Requirements\",className:\"g-type-display-3\"}),\"Requirements\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Clients that expect to run this job require:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Nomad >= 1.4.0 (because the pack use \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://developer.hashicorp.com/nomad/docs/concepts/variables\"}),\"Nomad Variables\"),\")\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.nomadproject.io/docs/drivers/docker\",title:\"Docker volumes\"}),\"Docker volumes\"),\" to be enabled within their Docker plugin stanza, due to the usage of Nomad's host volume:\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"plugin \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"docker\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"config\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volumes\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"enabled\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"https://www.nomadproject.io/docs/configuration/client#host_volume-stanza\",title:\"Host volume\"}),\"Host volume\"),\" to be enabled in the client configuration (the host volume directory - /var/lib/postgres - must be created in advance):\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"client\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  host_volume \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"backstage-postgres\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"path\"),\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"/var/lib/postgres\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"read_only\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"false\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h2\",e({},{id:\"user-content-customizing-the-docker-images\",\"data-text-content\":\"Customizing the Docker images\",className:\"g-type-display-3\"}),\"Customizing the Docker images\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The 2 docker images can be replaced by using their variable names:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"postgresql_task_image\"),mdx(\"li\",{parentName:\"ul\"},\"backstage_task_image\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Example:\"),mdx(\"pre\",e({},{className:\"language-bash\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),\"$ nomad-pack run backstage --var \",mdx(\"span\",e({parentName:\"code\"},{className:\"token assign-left variable\"}),\"backstage_task_image\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\"=\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ghcr.io/backstage/backstage:1.7.1\"'),`\n`)),mdx(\"h2\",e({},{id:\"user-content-pack-usage\",\"data-text-content\":\"Pack Usage\",className:\"g-type-display-3\"}),\"Pack Usage\"),mdx(\"h3\",e({},{id:\"user-content-prerequisite\",\"data-text-content\":\"Prerequisite\",className:\"g-type-display-4\"}),\"Prerequisite\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Create an variable specification file:\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# spec.nv.hcl\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"path\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"nomad/jobs/backstage\"'),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"items\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# Mandatory variables\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"postgres_user\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"your_postgres_username\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"postgres_password\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"your_postgres_password\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"#Optional variables\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"github_token\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"your_github_token\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The default docker image for Backstage is configured to use GitHub in order to locate entities (see \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://backstage.io/docs/integrations/github/locations\"}),\"GitHub integration\"),\"), so you will need to define a variable to store your GitHub token. \"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"If you use an other integration in your custom image, Azure DevOps for instance, you will need to define a variable for it (e.g. \",mdx(\"inlineCode\",{parentName:\"p\"},'azure_token = \"your_ado_token\"'),\").\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To set your variables in your Nomad instance, execute the following command:\"),mdx(\"pre\",e({},{className:\"language-bash\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),\"$ nomad var put @spec.nv.hcl\",`\n`)),mdx(\"h2\",e({},{id:\"user-content-variables\",\"data-text-content\":\"Variables\",className:\"g-type-display-3\"}),\"Variables\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"job_name\"),` (string) - The name to use as the job name which overrides using\nthe pack name`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"datacenters\"),` (list of strings) - A list of datacenters in the region which\nare eligible for task placement`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"region\"),\" (string) - The region where jobs will be deployed\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"postgresql_group_nomad_service_name\"),\" (string) - The nomad service name for the PostgreSQL application\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"postgresql_task_image\"),\" (string) - PostgreSQL's Docker image (must include the tag)\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"postgresql_task_volume_path\"),\" (string) - The volume's absolute path in the host to be used by PostgreSQL\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"postgresql_task_resources\"),\" (object, number number) - The resources to assign to the PostgreSQL service\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"backstage_group_nomad_service_name\"),\" (string) - The nomad service name for the Backstage application\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"backstage_task_image\"),\" (string) - Backstage's Docker image (must include the tag)\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"backstage_task_nomad_vars\"),\" (map of string) - Backstage's nomad variables (see below for the details)\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"backstage_task_resources\"),\" (object, number number) - The resources to assign to the Backstage service\")),mdx(\"h3\",e({},{id:\"user-content-custom-nomad-variables\",\"data-text-content\":\"Custom Nomad Variables\",className:\"g-type-display-4\"}),\"Custom Nomad Variables\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"If you need to use other Nomad variables than \",mdx(\"inlineCode\",{parentName:\"p\"},\"postgres_user\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"postgres_password\"),\" with this pack, you will need to pass them to \",mdx(\"inlineCode\",{parentName:\"p\"},\"backstage_task_nomad_vars\"),\".\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"backstage_task_nomad_vars\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"key\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"AZURE_TOKEN\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"value\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"azure_token\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"key\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"YOUR_SECRET_ENV_VAR\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"value\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"your_nomad_var_key\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}