{"pageProps":{"metadata":{"title":"Drone | Integrations","description":"Drone is a self-service Continuous Integration platform for busy development teams."},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"eca54a23-ed64-4226-ac76-939800eb6ee1","slug":"drone","name":"Drone","description":"Drone is a self-service Continuous Integration platform for busy development teams.","license_type":null,"license_url":null,"external_only":false,"external_url":"https://drone.io/","tier":"community","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/drone","created_at":"2023-05-17T17:26:22.081Z","updated_at":"2023-07-12T18:05:04.126Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"71ba437a-e3a9-4e7b-8d0a-b9749aefae48","integration_id":"eca54a23-ed64-4226-ac76-939800eb6ee1","version":"0.0.1","readme":"This pack can be used to run [Drone](https://drone.io) server and Drone agent on your Nomad cluster. It currently supports being run by the [Docker](https://www.nomadproject.io/docs/drivers/docker), and is configured by environment variables.\n\nIn order to launch Drone, you must provide credentials to your Source Control Management provider of choice. Click on the version control\nsystem you want to use, such as GitHub, GitLab, or Bitbucket, in the [Drone Documentation](https://readme.drone.io/server/overview/) for\nmore information on which environment variables to provide. These environment variables should be set in `drone_server_cfg` and `drone_agent_cfg`.\n\n## Variables\n\n| Variable              | Type (default)                      | Explanation                                                                |\n|-----------------------|-------------------------------------|----------------------------------------------------------------------------|\n| job_name              | string (\"\")                         | The name to use as the job name which overrides using the pack name.       |\n| datacenters           | list(string) ([\"dc1\"])              | A list of datacenters in the region which are eligible for task placement. |\n| region                | string (\"global\")                   | The region where the job should be placed.                                 |\n| namespace             | string (\"default\")                  | The namespace where the job should be placed.                              |\n| constraints           | list(object))                       | Constraints to apply to the entire job.                                    |\n| group_network         | object                              | The Drone network configuration options.                                   |\n| drone_server_cfg      | string                              | The Drone server config                                                    |\n| drone_server_image    | string (\"drone/drone\")              | The Drone server image                                                     |\n| drone_server_version  | string (\"2.1.0\")                    | The Drone server version                                                   |\n| drone_agent_cfg       | string                              | The Drone agent config                                                     |\n| drone_agent_image     | string (\"drone/drone-runner-nomad\") | The Drone agent image                                                      |\n| drone_agent_version   | string (\"latest\")                   | The Drone agent version                                                    |\n| server_task_resources | object                              | The resource to assign to the server task.                                 |\n| agent_task_resources  | object                              | The resource to assign to the agent task.                                  |\n| task_services         | object                              | Configuration options of the Prometheus services and checks.               |\n","created_at":"2023-05-17T22:19:21.318Z","updated_at":"2023-06-20T15:42:02.979Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"Drone","url":"/nomad/integrations/hashicorp/drone","isCurrentPage":true}],"anchorLinks":[{"id":"variables","level":2,"title":"Variables"}],"serializedREADME":{"compiledSource":"var N=Object.defineProperty,c=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var d=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var s=(t,e,r)=>e in t?N(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,n=(t,e)=>{for(var r in e||(e={}))d.call(e,r)&&s(t,r,e[r]);if(o)for(var r of o(e))p.call(e,r)&&s(t,r,e[r]);return t},m=(t,e)=>c(t,h(e));var i=(t,e)=>{var r={};for(var a in t)d.call(t,a)&&e.indexOf(a)<0&&(r[a]=t[a]);if(t!=null&&o)for(var a of o(t))e.indexOf(a)<0&&p.call(t,a)&&(r[a]=t[a]);return r};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(r){var a=r,{components:t}=a,e=i(a,[\"components\"]);return mdx(MDXLayout,m(n(n({},layoutProps),e),{components:t,mdxType:\"MDXLayout\"}),mdx(\"p\",n({},{className:\"g-type-long-body\"}),\"This pack can be used to run \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://drone.io\"}),\"Drone\"),\" server and Drone agent on your Nomad cluster. It currently supports being run by the \",mdx(\"a\",n({parentName:\"p\"},{href:\"https://www.nomadproject.io/docs/drivers/docker\"}),\"Docker\"),\", and is configured by environment variables.\"),mdx(\"p\",n({},{className:\"g-type-long-body\"}),`In order to launch Drone, you must provide credentials to your Source Control Management provider of choice. Click on the version control\nsystem you want to use, such as GitHub, GitLab, or Bitbucket, in the `,mdx(\"a\",n({parentName:\"p\"},{href:\"https://readme.drone.io/server/overview/\"}),\"Drone Documentation\"),` for\nmore information on which environment variables to provide. These environment variables should be set in `,mdx(\"inlineCode\",{parentName:\"p\"},\"drone_server_cfg\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"drone_agent_cfg\"),\".\"),mdx(\"h2\",n({},{id:\"user-content-variables\",\"data-text-content\":\"Variables\",className:\"g-type-display-3\"}),\"Variables\"),mdx(\"table\",null,mdx(\"thead\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"thead\"},mdx(\"th\",{parentName:\"tr\"},\"Variable\"),mdx(\"th\",{parentName:\"tr\"},\"Type (default)\"),mdx(\"th\",{parentName:\"tr\"},\"Explanation\"))),mdx(\"tbody\",{parentName:\"table\"},mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"job_name\"),mdx(\"td\",{parentName:\"tr\"},'string (\"\")'),mdx(\"td\",{parentName:\"tr\"},\"The name to use as the job name which overrides using the pack name.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"datacenters\"),mdx(\"td\",{parentName:\"tr\"},\"list(string) (\",'[\"dc1\"]',\")\"),mdx(\"td\",{parentName:\"tr\"},\"A list of datacenters in the region which are eligible for task placement.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"region\"),mdx(\"td\",{parentName:\"tr\"},'string (\"global\")'),mdx(\"td\",{parentName:\"tr\"},\"The region where the job should be placed.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"namespace\"),mdx(\"td\",{parentName:\"tr\"},'string (\"default\")'),mdx(\"td\",{parentName:\"tr\"},\"The namespace where the job should be placed.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"constraints\"),mdx(\"td\",{parentName:\"tr\"},\"list(object))\"),mdx(\"td\",{parentName:\"tr\"},\"Constraints to apply to the entire job.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"group_network\"),mdx(\"td\",{parentName:\"tr\"},\"object\"),mdx(\"td\",{parentName:\"tr\"},\"The Drone network configuration options.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"drone_server_cfg\"),mdx(\"td\",{parentName:\"tr\"},\"string\"),mdx(\"td\",{parentName:\"tr\"},\"The Drone server config\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"drone_server_image\"),mdx(\"td\",{parentName:\"tr\"},'string (\"drone/drone\")'),mdx(\"td\",{parentName:\"tr\"},\"The Drone server image\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"drone_server_version\"),mdx(\"td\",{parentName:\"tr\"},'string (\"2.1.0\")'),mdx(\"td\",{parentName:\"tr\"},\"The Drone server version\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"drone_agent_cfg\"),mdx(\"td\",{parentName:\"tr\"},\"string\"),mdx(\"td\",{parentName:\"tr\"},\"The Drone agent config\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"drone_agent_image\"),mdx(\"td\",{parentName:\"tr\"},'string (\"drone/drone-runner-nomad\")'),mdx(\"td\",{parentName:\"tr\"},\"The Drone agent image\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"drone_agent_version\"),mdx(\"td\",{parentName:\"tr\"},'string (\"latest\")'),mdx(\"td\",{parentName:\"tr\"},\"The Drone agent version\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"server_task_resources\"),mdx(\"td\",{parentName:\"tr\"},\"object\"),mdx(\"td\",{parentName:\"tr\"},\"The resource to assign to the server task.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"agent_task_resources\"),mdx(\"td\",{parentName:\"tr\"},\"object\"),mdx(\"td\",{parentName:\"tr\"},\"The resource to assign to the agent task.\")),mdx(\"tr\",{parentName:\"tbody\"},mdx(\"td\",{parentName:\"tr\"},\"task_services\"),mdx(\"td\",{parentName:\"tr\"},\"object\"),mdx(\"td\",{parentName:\"tr\"},\"Configuration options of the Prometheus services and checks.\")))))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}