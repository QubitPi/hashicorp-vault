{"pageProps":{"metadata":{"title":"InfluxDB | Integrations","description":"InfluxDB is an open source time series database for recording metrics, events, and analytics."},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"31821b61-7247-43c9-8c40-2ac2a6cabb0a","slug":"influxdb","name":"InfluxDB","description":"InfluxDB is an open source time series database for recording metrics, events, and analytics.","license_type":null,"license_url":null,"external_only":false,"external_url":"https://www.influxdata.com/","tier":"community","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/influxdb","created_at":"2023-05-17T17:26:51.080Z","updated_at":"2023-07-12T18:05:06.090Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"3eeb5bb6-1a0b-41e6-a5a8-263a1eab6dba","integration_id":"31821b61-7247-43c9-8c40-2ac2a6cabb0a","version":"0.0.1","readme":"This pack contains all you need to deploy InfluxDB (version 2 by default) in Nomad. It uses Docker driver.\n\n\n## Variables\n\n- `job_name` (string) - The name to use as the job name which overrides using the pack name.\n- `region` (string) - The region where jobs will be deployed.\n- `datacenters` (list of strings) - A list of datacenters in the region which are eligible for task placement.\n- `namespace` (string) - The namespace where the job should be placed.\n- `constraints` (string) - Constraints to apply to the entire job.\n- `image_name` (string) - The docker image name.\n- `image_tag` (string) - The docker image tag.\n- `task_resources` (object, number number) Resources used by InfluxDB task\n- `register_consul_service` (bool) - If you want to register a consul service for the job\n- `consul_service_name` (string) - The consul service name for the hello-world application\n- `consul_service_tags` (list of string) - The consul service name for the hello-world application\n- `config_volume_name` (string) - The name of the configuration dedicated volume you want InfluxDB to use\n- `data_volume_name` (string) - The name of the data dedicated volume you want InfluxDB to use\n- `config_volume_type` (string) - The type of the configuration dedicated volume you want InfluxDB to use\n- `data_volume_type` (string) - The type of the data dedicated volume you want InfluxDB to use\n- `docker_influxdb_env_vars` (map of string) - Environment variables to pass to Docker container\n\n## Automated Setup\n\nIf you pass the right environment variables to the pack, you can automatically setup the init of InfluxDB.\nAn example of the `docker_influxdb_env_vars` to use is in the `vars.nomad` file.\n","created_at":"2023-05-17T22:19:03.292Z","updated_at":"2023-05-17T22:19:03.292Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"InfluxDB","url":"/nomad/integrations/hashicorp/influxdb","isCurrentPage":true}],"anchorLinks":[{"id":"variables","level":2,"title":"Variables"},{"id":"automated-setup","level":2,"title":"Automated Setup"}],"serializedREADME":{"compiledSource":"var m=Object.defineProperty,p=Object.defineProperties;var c=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var s=(e,n,i)=>n in e?m(e,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[n]=i,t=(e,n)=>{for(var i in n||(n={}))o.call(n,i)&&s(e,i,n[i]);if(l)for(var i of l(n))r.call(n,i)&&s(e,i,n[i]);return e},d=(e,n)=>p(e,c(n));var u=(e,n)=>{var i={};for(var a in e)o.call(e,a)&&n.indexOf(a)<0&&(i[a]=e[a]);if(e!=null&&l)for(var a of l(e))n.indexOf(a)<0&&r.call(e,a)&&(i[a]=e[a]);return i};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(i){var a=i,{components:e}=a,n=u(a,[\"components\"]);return mdx(MDXLayout,d(t(t({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",t({},{className:\"g-type-long-body\"}),\"This pack contains all you need to deploy InfluxDB (version 2 by default) in Nomad. It uses Docker driver.\"),mdx(\"h2\",t({},{id:\"user-content-variables\",\"data-text-content\":\"Variables\",className:\"g-type-display-3\"}),\"Variables\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"job_name\"),\" (string) - The name to use as the job name which overrides using the pack name.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"region\"),\" (string) - The region where jobs will be deployed.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"datacenters\"),\" (list of strings) - A list of datacenters in the region which are eligible for task placement.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"namespace\"),\" (string) - The namespace where the job should be placed.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"constraints\"),\" (string) - Constraints to apply to the entire job.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"image_name\"),\" (string) - The docker image name.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"image_tag\"),\" (string) - The docker image tag.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"task_resources\"),\" (object, number number) Resources used by InfluxDB task\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"register_consul_service\"),\" (bool) - If you want to register a consul service for the job\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"consul_service_name\"),\" (string) - The consul service name for the hello-world application\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"consul_service_tags\"),\" (list of string) - The consul service name for the hello-world application\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"config_volume_name\"),\" (string) - The name of the configuration dedicated volume you want InfluxDB to use\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"data_volume_name\"),\" (string) - The name of the data dedicated volume you want InfluxDB to use\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"config_volume_type\"),\" (string) - The type of the configuration dedicated volume you want InfluxDB to use\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"data_volume_type\"),\" (string) - The type of the data dedicated volume you want InfluxDB to use\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"docker_influxdb_env_vars\"),\" (map of string) - Environment variables to pass to Docker container\")),mdx(\"h2\",t({},{id:\"user-content-automated-setup\",\"data-text-content\":\"Automated Setup\",className:\"g-type-display-3\"}),\"Automated Setup\"),mdx(\"p\",t({},{className:\"g-type-long-body\"}),`If you pass the right environment variables to the pack, you can automatically setup the init of InfluxDB.\nAn example of the `,mdx(\"inlineCode\",{parentName:\"p\"},\"docker_influxdb_env_vars\"),\" to use is in the \",mdx(\"inlineCode\",{parentName:\"p\"},\"vars.nomad\"),\" file.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}