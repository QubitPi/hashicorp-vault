{"pageProps":{"metadata":{"title":"Prometheus | Integrations","description":"Prometheus is used to collect telemetry data and make it queryable."},"product":{"name":"Nomad","slug":"nomad","algoliaConfig":{"indexName":"product_NOMAD","searchOnlyApiKey":"9bfec34ea54e56a11bd50d6bfedc5e71"},"analyticsConfig":{"includedDomains":"nomadproject.io www.nomadproject.io","segmentWriteKey":"qW11yxgipKMsKFKQUCpTVgQUYftYsJj0"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Nomad by HashiCorp","description":"Nomad is a highly available, distributed, data-center aware cluster and application scheduler designed to support the modern datacenter with support for long-running services, batch jobs, and much more.","image":"https://www.nomadproject.io/nomad-public/img/og-image.png","icon":[{"href":"/nomad-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.2.5","subnavItems":[{"text":"Overview","url":"/","type":"inbound"},{"text":"Enterprise","url":"https://www.hashicorp.com/products/nomad/","type":"outbound"},"divider",{"text":"Tutorials","url":"https://developer.hashicorp.com/nomad/tutorials","type":"outbound"},{"text":"Docs","url":"/docs","type":"inbound"},{"text":"API","url":"/api-docs","type":"inbound"},{"text":"Plugins","url":"/plugins","type":"inbound"},{"text":"Tools","url":"/tools","type":"inbound"},{"text":"Community","url":"/community","type":"inbound"}],"basePaths":["docs","api-docs","plugins","tools","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"entry-point","name":"Intro","path":"intro"},{"iconName":"api","name":"API","path":"api-docs"},{"iconName":"terminal-screen","name":"Tools","path":"tools"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Nomad Integrations."}},"integration":{"id":"2ea62f5a-cd58-4db2-98d4-7f177a980060","slug":"prometheus-pack","name":"Prometheus","description":"Prometheus is used to collect telemetry data and make it queryable.","license_type":null,"license_url":null,"external_only":false,"external_url":"https://prometheus.io/","tier":"community","repo_url":"https://github.com/hashicorp/nomad-pack-community-registry","subdirectory":"/packs/prometheus","created_at":"2023-05-17T17:27:46.901Z","updated_at":"2023-07-12T18:05:09.874Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"nomad","name":"Nomad","created_at":"2022-11-09T22:56:29.799Z","updated_at":"2022-11-09T22:56:29.799Z"},"versions":["0.0.1"],"components":[],"flags":[],"integration_type":{"id":"e8835871-6a6a-4836-8797-505cbfbe426a","product_id":"40557cca-56ca-4cb2-abc6-9bba2a9ca62d","slug":"pack","name":"Pack","plural_name":"Packs","description":"Packs are templated sets of resources that are meant to be deployed to Nomad together. Each pack defines parameters that can be customized by the end user.","created_at":"2023-05-02T17:31:29.062Z","updated_at":"2023-05-17T22:44:11.429Z"}},"activeRelease":{"id":"6852bb25-a2a0-4977-bc24-f8d9a9960ced","integration_id":"2ea62f5a-cd58-4db2-98d4-7f177a980060","version":"0.0.1","readme":"This pack can be used to run [Prometheus][prometheus] on your Nomad cluster. It currently supports\nbeing run by the [Docker][docker_driver] and allows for Prometheus to be configured in different\nways.\n\n## Variables\n\n- `job_name` (string \"\") - The name to use as the job name which overrides using the pack name.\n- `datacenters` (list(string) [\"dc1\"]) - A list of datacenters in the region which are eligible for\n  task placement.\n- `region` (string \"global\") - The region where the job should be placed.\n- `namespace` (string \"default\") - The namespace where the job should be placed.\n- `constraints` (list(object)) - Constraints to apply to the entire job.\n- `prometheus_group_network` (object) - The Prometheus network configuration options.\n- `prometheus_task` (object) - Details configuration options for the Prometheus task.\n- `prometheus_task_app_prometheus_yaml` (string) - The Prometheus configuration to pass to the\ntask. The default value includes scrape configuration for Nomad servers, Nomad client, and\nPrometheus.\n- `prometheus_task_app_rules_yaml` (string) - Configuration for the alerts to be setup in prometheus.\nAn example config is included in the alers_vars.nomad file.\n- `prometheus_task_resources` (object) - The resource to assign to the Prometheus task.\n- `prometheus_task_services` (object) - Configuration options of the Prometheus services and checks.\n\n### `constraints` List of Objects\n\n[Nomad job specification constraints][job_constraint] allows restricting the set of eligible nodes\non which the Prometheus task will run.\n\n- `attribute` (string) - Specifies the name or reference of the attribute to examine for the\nconstraint.\n- `operator` (string) - Specifies the comparison operator. The ordering is compared lexically.\n- `value` (string) - Specifies the value to compare the attribute against using the specified\noperation.\n\nThe default value constrains the job to run on client whose kernel name is `linux`. The HCL\nvariable list of objects is shown below and uses a double dollar sign for escaping:\n```hcl\n[\n  {\n    attribute = \"$${attr.kernel.name}\",\n    value     = \"linux\",\n    operator  = \"\",\n  }\n]\n```\n\n### `prometheus_group_network` Object\n\n- `mode` (string \"bridge\") - Mode of the network.\n- `ports` (map<string|number> http:9090) - Specifies the port mapping for the Prometheus task. The\nmap key indicates the port label, and the value is the Prometheus port inside the network namespace.\n\n### `prometheus_task` Object\n\n- `driver` (string \"docker\") - The Nomad task driver to use to run the Prometheus task. Currently,\nonly \"docker\" is supported.\n- `version` (string \"2.30.2\") - The Prometheus version to run.\n- `cli_args` (list(string) \"<see_below>\") - A list of CLI arguments to pass to Prometheus.\n\nThe default CLI arguments pass to Prometheus:\n```hcl\n[\n  \"--config.file=/etc/prometheus/config/prometheus.yml\",\n  \"--storage.tsdb.path=/prometheus\",\n  \"--web.listen-address=0.0.0.0:9090\",\n  \"--web.console.libraries=/usr/share/prometheus/console_libraries\",\n  \"--web.console.templates=/usr/share/prometheus/consoles\",\n]\n```\n\n### `prometheus_task_resources` Object\n\n-`cpu` (number 500) - Specifies the CPU required to run this task in MHz.\n-`memory` (number 256) - Specifies the memory required in MB.\n\n### `prometheus_task_services` List of Objects\n\n- `service_port_label` (string) - Specifies the port to advertise for this service.\n- `service_name` (string) - Specifies the name this service will be advertised as in Consul.\n- `service_tags` (list(string)) - Specifies the list of tags to associate with this service.\n- `check_enabled` (bool) - Whether to enable a check for this service.\n- `check_path` (string) - The HTTP path to query Prometheus.\n- `check_interval` (string) - Specifies the frequency of the health checks that Consul will perform.\n- `check_timeout` (string) - Specifies how long Consul will wait for a health check query to succeed.\n\nThe default value for this variable configures a service for the Prometheus API along with a check\nrunning against the Prometheus [management API][prometheus_management_api] health check endpoint.\n```hcl\n[\n  {\n    service_port_label = \"http\",\n    service_name       = \"prometheus\",\n    service_tags       = [],\n    check_enabled      = true,\n    check_path         = \"/-/healthy\",\n    check_interval     = \"3s\",\n    check_timeout      = \"1s\",\n  }\n]\n```\n\n[prometheus]: (https://prometheus.io/)\n[prometheus_management_api]: (https://prometheus.io/docs/prometheus/latest/management_api/)\n[docker_driver]: (https://www.nomadproject.io/docs/drivers/docker)\n[job_constraint]: (https://www.nomadproject.io/docs/job-specification/constraint)\n","created_at":"2023-05-17T22:18:58.824Z","updated_at":"2023-05-17T22:18:58.824Z","components":[]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Nomad","url":"/nomad"},{"title":"Integrations","url":"/nomad/integrations"},{"title":"Prometheus","url":"/nomad/integrations/hashicorp/prometheus-pack","isCurrentPage":true}],"anchorLinks":[{"id":"variables","level":2,"title":"Variables"},{"id":"constraints-list-of-objects","level":3,"title":"constraints List of Objects"},{"id":"prometheus_group_network-object","level":3,"title":"prometheus_group_network Object"},{"id":"prometheus_task-object","level":3,"title":"prometheus_task Object"},{"id":"prometheus_task_resources-object","level":3,"title":"prometheus_task_resources Object"},{"id":"prometheus_task_services-list-of-objects","level":3,"title":"prometheus_task_services List of Objects"}],"serializedREADME":{"compiledSource":"var m=Object.defineProperty,u=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;var p=(a,n,t)=>n in a?m(a,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[n]=t,e=(a,n)=>{for(var t in n||(n={}))i.call(n,t)&&p(a,t,n[t]);if(o)for(var t of o(n))r.call(n,t)&&p(a,t,n[t]);return a},l=(a,n)=>u(a,d(n));var c=(a,n)=>{var t={};for(var s in a)i.call(a,s)&&n.indexOf(s)<0&&(t[s]=a[s]);if(a!=null&&o)for(var s of o(a))n.indexOf(s)<0&&r.call(a,s)&&(t[s]=a[s]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var s=t,{components:a}=s,n=c(s,[\"components\"]);return mdx(MDXLayout,l(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"This pack can be used to run \",mdx(\"a\",{parentName:\"p\"},\"Prometheus\"),` on your Nomad cluster. It currently supports\nbeing run by the `,mdx(\"a\",{parentName:\"p\"},\"Docker\"),` and allows for Prometheus to be configured in different\nways.`),mdx(\"h2\",e({},{id:\"user-content-variables\",\"data-text-content\":\"Variables\",className:\"g-type-display-3\"}),\"Variables\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"job_name\"),' (string \"\") - The name to use as the job name which overrides using the pack name.'),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"datacenters\"),\" (list(string) \",'[\"dc1\"]',`) - A list of datacenters in the region which are eligible for\ntask placement.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"region\"),' (string \"global\") - The region where the job should be placed.'),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"namespace\"),' (string \"default\") - The namespace where the job should be placed.'),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"constraints\"),\" (list(object)) - Constraints to apply to the entire job.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"prometheus_group_network\"),\" (object) - The Prometheus network configuration options.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"prometheus_task\"),\" (object) - Details configuration options for the Prometheus task.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"prometheus_task_app_prometheus_yaml\"),` (string) - The Prometheus configuration to pass to the\ntask. The default value includes scrape configuration for Nomad servers, Nomad client, and\nPrometheus.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"prometheus_task_app_rules_yaml\"),` (string) - Configuration for the alerts to be setup in prometheus.\nAn example config is included in the alers_vars.nomad file.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"prometheus_task_resources\"),\" (object) - The resource to assign to the Prometheus task.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"prometheus_task_services\"),\" (object) - Configuration options of the Prometheus services and checks.\")),mdx(\"h3\",e({},{id:\"user-content-constraints-list-of-objects\",\"data-text-content\":\"constraints List of Objects\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"constraints\"),\" List of Objects\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"a\",{parentName:\"p\"},\"Nomad job specification constraints\"),` allows restricting the set of eligible nodes\non which the Prometheus task will run.`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"attribute\"),` (string) - Specifies the name or reference of the attribute to examine for the\nconstraint.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"operator\"),\" (string) - Specifies the comparison operator. The ordering is compared lexically.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"value\"),` (string) - Specifies the value to compare the attribute against using the specified\noperation.`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The default value constrains the job to run on client whose kernel name is \",mdx(\"inlineCode\",{parentName:\"p\"},\"linux\"),`. The HCL\nvariable list of objects is shown below and uses a double dollar sign for escaping:`),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"attribute\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"$${attr.kernel.name}\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"value\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"linux\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"operator\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`)),mdx(\"h3\",e({},{id:\"user-content-prometheus_group_network-object\",\"data-text-content\":\"prometheus_group_network Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"prometheus_group_network\"),\" Object\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"mode\"),' (string \"bridge\") - Mode of the network.'),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"ports\"),` (map<string|number> http:9090) - Specifies the port mapping for the Prometheus task. The\nmap key indicates the port label, and the value is the Prometheus port inside the network namespace.`)),mdx(\"h3\",e({},{id:\"user-content-prometheus_task-object\",\"data-text-content\":\"prometheus_task Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"prometheus_task\"),\" Object\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"driver\"),` (string \"docker\") - The Nomad task driver to use to run the Prometheus task. Currently,\nonly \"docker\" is supported.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"version\"),' (string \"2.30.2\") - The Prometheus version to run.'),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"cli_args\"),' (list(string) \"<see_below>\") - A list of CLI arguments to pass to Prometheus.')),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The default CLI arguments pass to Prometheus:\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--config.file=/etc/prometheus/config/prometheus.yml\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--storage.tsdb.path=/prometheus\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--web.listen-address=0.0.0.0:9090\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--web.console.libraries=/usr/share/prometheus/console_libraries\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--web.console.templates=/usr/share/prometheus/consoles\"'),\",\",`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`)),mdx(\"h3\",e({},{id:\"user-content-prometheus_task_resources-object\",\"data-text-content\":\"prometheus_task_resources Object\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"prometheus_task_resources\"),\" Object\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"-\",mdx(\"inlineCode\",{parentName:\"p\"},\"cpu\"),` (number 500) - Specifies the CPU required to run this task in MHz.\n-`,mdx(\"inlineCode\",{parentName:\"p\"},\"memory\"),\" (number 256) - Specifies the memory required in MB.\"),mdx(\"h3\",e({},{id:\"user-content-prometheus_task_services-list-of-objects\",\"data-text-content\":\"prometheus_task_services List of Objects\",className:\"g-type-display-4\"}),mdx(\"inlineCode\",{parentName:\"h3\"},\"prometheus_task_services\"),\" List of Objects\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"service_port_label\"),\" (string) - Specifies the port to advertise for this service.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"service_name\"),\" (string) - Specifies the name this service will be advertised as in Consul.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"service_tags\"),\" (list(string)) - Specifies the list of tags to associate with this service.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"check_enabled\"),\" (bool) - Whether to enable a check for this service.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"check_path\"),\" (string) - The HTTP path to query Prometheus.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"check_interval\"),\" (string) - Specifies the frequency of the health checks that Consul will perform.\"),mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"check_timeout\"),\" (string) - Specifies how long Consul will wait for a health check query to succeed.\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The default value for this variable configures a service for the Prometheus API along with a check\nrunning against the Prometheus `,mdx(\"a\",{parentName:\"p\"},\"management API\"),\" health check endpoint.\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"service_port_label\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"http\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"service_name\"),\"       \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"prometheus\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"service_tags\"),\"       \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"check_enabled\"),\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"check_path\"),\"         \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"/-/healthy\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"check_interval\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"3s\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"check_timeout\"),\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"1s\"'),\",\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}