{"pageProps":{"metadata":{"title":"incus | Integrations","description":"The incus plugin can be used with HashiCorp Packer to create OCI images with incus."},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"98682700-47f3-4e53-a10a-e75ae722b607","slug":"incus","name":"incus","description":"The incus plugin can be used with HashiCorp Packer to create OCI images with incus.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"community","repo_url":"https://github.com/bketelsen/packer-plugin-incus","subdirectory":"/.web-docs","created_at":"2024-01-12T21:26:27.884Z","updated_at":"2024-01-16T18:31:32.300Z","hide_versions":false,"organization":{"id":"cf696d65-6803-4909-a401-a43faccc07c7","slug":"bketelsen","created_at":"2024-01-12T21:26:27.752Z","updated_at":"2024-01-12T21:26:27.752Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["1.0.4"],"components":[{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"}],"flags":[],"integration_type":null},"activeRelease":{"id":"ca64e7c9-39b1-4b69-903b-f32aadae0f44","integration_id":"98682700-47f3-4e53-a10a-e75ae722b607","version":"1.0.4","readme":"The incus plugin allows building containers for incus, by starting an incus container,\nrunning provisioners within this container, then saveing the container\nas an incus image.\n\n### Installation\n\nTo install this plugin, copy and paste this code into your Packer configuration, then run [`packer init`](https://www.packer.io/docs/commands/init).\n\n```hcl\npacker {\n  required_plugins {\n    incus = {\n      source  = \"github.com/bketelsen/incus\"\n      version = \"~> 1\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\n$ packer plugins install github.com/bketelsen/incus\n```\n\n### Components\n\n#### Builders\n\n- [incus](/packer/integrations/bketelsen/incus/latest/components/builder/incus) - The incus builder builds containers with incus\n  by starting a container, provisioning it, and exporting it as a tar.gz archive of the root file system.\n","created_at":"2024-01-16T18:31:32.623Z","updated_at":"2024-01-16T18:31:32.623Z","components":[{"id":"cde66756-0cd5-4daf-a5e3-1761f62c14e7","integration_release_id":"ca64e7c9-39b1-4b69-903b-f32aadae0f44","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `incus`\nArtifact BuilderId: `incus`\n\nThe `incus` Packer builder builds containers for incus. The builder starts an incus\ncontainer, runs provisioners within this container, then saves the container as\nan incus image.\n\nThe incus builder requires a modern linux kernel and the `incus` package. This\nbuilder does not work with LXC.\n\n## Basic Example\n\nBelow is a fully functioning example.\n\n**HCL**\n\n```hcl\nsource \"incus\" \"incus-xenial\" {\n  image = \"ubuntu-daily:xenial\"\n  output_image = \"ubuntu-xenial\"\n  publish_properties {\n    description = \"Trivial repackage with Packer\"\n  }\n}\n\nbuild {\n  sources = [\"incus.incus-xenial\"]\n}\n```\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"incus\",\n      \"name\": \"incus-xenial\",\n      \"image\": \"ubuntu-daily:xenial\",\n      \"output_image\": \"ubuntu-xenial\",\n      \"publish_properties\": {\n        \"description\": \"Trivial repackage with Packer\"\n      }\n    }\n  ]\n}\n```\n\n## Configuration Reference\n\n### Required:\n\n<!-- Code generated from the comments of the Config struct in builder/incus/config.go; DO NOT EDIT MANUALLY -->\n\n- `image` (string) - The source image to use when creating the build\n  container. This can be a (local or remote) image (name or fingerprint).\n  E.G. my-base-image, ubuntu-daily:x, 08fababf6f27, ...\n\n<!-- End of code generated from the comments of the Config struct in builder/incus/config.go; -->\n\n\n  ~> Note: The builder may appear to pause if required to download a\n  remote image, as they are usually 100-200MB. `/var/log/incus/incus.log` will\n  mention starting such downloads.\n\n### Optional:\n\n<!-- Code generated from the comments of the Config struct in builder/incus/config.go; DO NOT EDIT MANUALLY -->\n\n- `output_image` (string) - The name of the output artifact. Defaults to\n  name.\n\n- `reuse` (bool) - Reuse image alias if it already exists; defaults to false\n\n- `container_name` (string) - Container Name\n\n- `publish_remote_name` (string) - The (optional) name of the incus remote on which to publish the\n  container image.\n\n- `command_wrapper` (string) - Lets you prefix all builder commands, such as\n  with ssh for a remote build host. Defaults to `{{.Command}}`; i.e. no\n  wrapper.\n\n- `profile` (string) - Profile\n\n- `init_sleep` (string) - The number of seconds to sleep between launching\n  the incus instance and provisioning it; defaults to 3 seconds.\n\n- `publish_properties` (map[string]string) - Pass key values to the publish\n  step to be set as properties on the output image. This is most helpful to\n  set the description, but can be used to set anything needed. See\n  https://stgraber.org/2016/03/30/incus-2-0-image-management-512/\n  for more properties.\n\n- `launch_config` (map[string]string) - List of key/value pairs you wish to\n  pass to lxc launch via --config. Defaults to empty.\n\n- `virtual_machine` (bool) - Create incus virtual-machine image on hosts running incus 4.0 and above; defaults to false for container image\n\n- `skip_publish` (bool) - Skip execute `lxc publish`; defaults to false\n\n<!-- End of code generated from the comments of the Config struct in builder/incus/config.go; -->\n","created_at":"2024-01-16T18:31:32.938Z","updated_at":"2024-01-16T18:31:32.938Z","name":"incus","slug":"incus","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]}]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"incus","url":"/packer/integrations/bketelsen/incus","isCurrentPage":true}],"anchorLinks":[{"id":"installation","level":3,"title":"Installation"},{"id":"components","level":3,"title":"Components"},{"id":"builders","level":4,"title":"Builders"}],"serializedREADME":{"compiledSource":"var u=Object.defineProperty,m=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var c=(e,n,t)=>n in e?u(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,a=(e,n)=>{for(var t in n||(n={}))p.call(n,t)&&c(e,t,n[t]);if(o)for(var t of o(n))i.call(n,t)&&c(e,t,n[t]);return e},r=(e,n)=>m(e,d(n));var l=(e,n)=>{var t={};for(var s in e)p.call(e,s)&&n.indexOf(s)<0&&(t[s]=e[s]);if(e!=null&&o)for(var s of o(e))n.indexOf(s)<0&&i.call(e,s)&&(t[s]=e[s]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var s=t,{components:e}=s,n=l(s,[\"components\"]);return mdx(MDXLayout,r(a(a({},layoutProps),n),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",a({},{className:\"g-type-long-body\"}),`The incus plugin allows building containers for incus, by starting an incus container,\nrunning provisioners within this container, then saveing the container\nas an incus image.`),mdx(\"h3\",a({},{id:\"user-content-installation\",\"data-text-content\":\"Installation\",className:\"g-type-display-4\"}),\"Installation\"),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"To install this plugin, copy and paste this code into your Packer configuration, then run \",mdx(\"a\",a({parentName:\"p\"},{href:\"https://www.packer.io/docs/commands/init\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"packer init\")),\".\"),mdx(\"pre\",a({},{className:\"language-hcl\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"packer\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",a({parentName:\"code\"},{className:\"token keyword\"}),\"required_plugins\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"incus\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"source\"),\"  \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"github.com/bketelsen/incus\"'),`\n`,\"      \",mdx(\"span\",a({parentName:\"code\"},{className:\"token property\"}),\"version\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",a({parentName:\"code\"},{className:\"token string\"}),'\"~> 1\"'),`\n`,\"    \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",a({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",a({},{className:\"g-type-long-body\"}),\"Alternatively, you can use \",mdx(\"inlineCode\",{parentName:\"p\"},\"packer plugins install\"),\" to manage installation of this plugin.\"),mdx(\"pre\",a({},{className:\"language-sh\"}),mdx(\"code\",a({parentName:\"pre\"},{className:\"language-sh\"}),\"$ packer plugins install github.com/bketelsen/incus\",`\n`)),mdx(\"h3\",a({},{id:\"user-content-components\",\"data-text-content\":\"Components\",className:\"g-type-display-4\"}),\"Components\"),mdx(\"h4\",a({},{id:\"user-content-builders\",\"data-text-content\":\"Builders\",className:\"g-type-display-5\"}),\"Builders\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",a({parentName:\"li\"},{href:\"/packer/integrations/bketelsen/incus/latest/components/builder/incus\"}),\"incus\"),` - The incus builder builds containers with incus\nby starting a container, provisioning it, and exporting it as a tar.gz archive of the root file system.`)))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}