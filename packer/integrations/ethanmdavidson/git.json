{"pageProps":{"metadata":{"title":"Git | Integrations","description":"A plugin for Packer which provides access to git."},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"45a958b8-7a61-4789-8edf-be80582c61e4","slug":"git","name":"Git","description":"A plugin for Packer which provides access to git.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"community","repo_url":"https://github.com/ethanmdavidson/packer-plugin-git","subdirectory":"/.web-docs","created_at":"2023-08-14T20:21:40.857Z","updated_at":"2023-12-01T21:52:06.513Z","hide_versions":false,"organization":{"id":"9d76867b-dfe6-4d8c-96d6-b3b8e71a4577","slug":"ethanmdavidson","created_at":"2023-08-14T20:21:40.737Z","updated_at":"2023-08-14T20:21:40.737Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["0.6.2","0.6.1","0.6.0","0.5.0","0.4.3","0.0.0"],"components":[{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources"},{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources"},{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources"}],"flags":[],"integration_type":null},"activeRelease":{"id":"48872a4b-3b82-4d6d-a00d-f18ce015b6ca","integration_id":"45a958b8-7a61-4789-8edf-be80582c61e4","version":"0.6.2","readme":"The Git plugin is able to interact with Git repos through Packer.\n\n### Installation\n\nTo install this plugin, copy and paste this code into your Packer configuration, then run [`packer init`](https://www.packer.io/docs/commands/init).\n\n```hcl\npacker {\n  required_plugins {\n    git = {\n      version = \">= 0.6.2\"\n      source  = \"github.com/ethanmdavidson/git\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\n$ packer plugins install github.com/ethanmdavidson/git\n```\n\n### Manual Installation\n\nYou can find pre-built binary releases of the plugin \n[here](https://github.com/ethanmdavidson/packer-plugin-git/releases).\n\nOr, if you prefer to build the plugin from its source\ncode, clone [the GitHub repository](https://github.com/ethanmdavidson/packer-plugin-git)\nlocally and run the command `make build` from the root\ndirectory. Upon successful compilation, a `packer-plugin-git` plugin\nbinary file can be found in the root directory.\n\nOnce the binary is downloaded or built, please follow the Packer\ndocumentation on\n[installing a plugin](https://www.packer.io/docs/extending/plugins/#installing-plugins).\n\n### Components\n\n### Data Sources\n\n- [git-commit](/packer/integrations/ethanmdavidson/git/latest/components/data-source/commit) - Retrieve information\n    about a specific commit, e.g. the commit hash.\n- [git-repository](/packer/integrations/ethanmdavidson/git/latest/components/data-source/repository) - Retrieve information\n    about a repository, e.g. the value of HEAD.\n- [git-tree](/packer/integrations/ethanmdavidson/git/latest/components/data-source/tree) - Retrieve the list of\n    files present in a specific commit, similar to `git ls-tree -r`.\n\n","created_at":"2024-03-01T03:07:55.018Z","updated_at":"2024-03-01T03:07:55.018Z","components":[{"id":"98e28240-2422-482f-84cf-d6d830d7c6ab","integration_release_id":"48872a4b-3b82-4d6d-a00d-f18ce015b6ca","component_id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","readme":"Type: `git-commit`\n\nThe commit data source is used to fetch information about a specific commit. \nIt needs to be run inside an existing git repo.\n\n\n## Required\n\nThere are no required configuration fields.\n\n\n## Optional\n\n- `path` (string) - The path to a directory inside your git repo. The plugin will\nsearch for a git repo, starting in this directory and walking up through\nparent directories. Defaults to '.' (the directory packer was executed in).\n\n- `commit_ish` (string) - A [Commit-Ish value](https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefcommit-ishacommit-ishalsocommittish)\n(e.g. tag) pointing to the target commit object.\nSee [go-git ResolveRevision](https://pkg.go.dev/github.com/go-git/go-git/v5#Repository.ResolveRevision)\nfor the list of supported values. Defaults to 'HEAD'.\n\n\n## Output\n\n- `hash` (string) - The SHA1 checksum or \"hash\" value of the selected commit.\n- `branches` (string) - The short names of branches at the selected commit.\n- `author` (string) - The author of the commit, in standard `A U Thor <author@example.com>` format.\n- `committer` (string) - The committer of the commit, in same format as author.\n- `timestamp` (string) - The timestamp of the commit, in RFC3339 format (e.g. `2024-01-02T09:38:19Z`).\n- `pgp_signature` (string) - The PGP signature attached to the commit.\n- `message` (string) - The commit message.\n- `tree_hash` (string) - The hash of the root tree of the commit.\n- `parent_hashes` (list[string]) - The hashes of the parent commits.\n\n\n## Example Usage\n\nThis example shows how a truncated commit sha can be appended\nto an image name, with the author in the image description.\n\n```hcl\ndata \"git-commit\" \"cwd-head\" { }\n\nlocals {\n  truncated_sha = substr(data.git-commit.cwd-head.hash, 0, 8)\n  author = data.git-commit.cwd-head.author\n}\n\nsource \"googlecompute\" \"example\" {\n  image_name = \"image-${local.truncated_sha}\"\n  image_description = \"Built from a commit by ${local.author}\"\n}\n\nbuild {\n  sources = [\"source.googlecompute.example\"]\n}\n```\n","created_at":"2024-03-01T03:07:55.520Z","updated_at":"2024-03-01T03:07:55.520Z","name":"Commit","slug":"commit","component":{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.255Z","updated_at":"2022-11-09T22:56:31.255Z"},"variable_groups":[]},{"id":"e7c4e179-f739-46e5-b4d5-ff39e0e52097","integration_release_id":"48872a4b-3b82-4d6d-a00d-f18ce015b6ca","component_id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","readme":"Type: `git-repository`\n\nThe repository data source is used to fetch information about a git repository.\nIt needs to be run inside an existing git repo.\n\n\n## Required\n\nThere are no required configuration fields.\n\n\n## Optional\n\n- `path` (string) - The path to a directory inside your git repo. The plugin will\nsearch for a git repo, starting in this directory and walking up through\nparent directories. Defaults to '.' (the directory packer was executed in).\n\n\n## Output\n\n- `head` (string) - The short name of HEAD's current location.\n- `branches` (list[string]) - The list of branches in the repository.\n- `tags` (list[string]) - The list of tags in the repository.\n- `is_clean` (bool) - `true` if the working tree is clean, `false` otherwise.\n\n\n## Example Usage\n\nThis example shows how a a suffix can be added to the version number\nfor any AMI built outside the main branch.\n\n```hcl\ndata \"git-repository\" \"cwd\" {}\n\nvariable version {\n  type = string\n}\n\nlocals {\n  onMain = data.git-repository.cwd.head == \"main\"\n  version  = onMain ? \"${var.version}\" : \"${var.version}-SNAPSHOT\"\n}\n\nsource \"amazon-ebs\" \"ami1\" {\n  ami_description = \"AMI1\"\n  ami_name        = \"ami1-${local.version}\"\n}\n```\n","created_at":"2024-03-01T03:07:55.636Z","updated_at":"2024-03-01T03:07:55.636Z","name":"Repository","slug":"repository","component":{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.255Z","updated_at":"2022-11-09T22:56:31.255Z"},"variable_groups":[]},{"id":"76e35f2c-2a3c-41b3-b90e-c7fe386c157c","integration_release_id":"48872a4b-3b82-4d6d-a00d-f18ce015b6ca","component_id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","readme":"Type: `git-tree`\n\nThe tree data source is used to fetch the 'tree' or list of files\nfrom a specific commit. It needs to be run inside an existing git\nrepo.\n\n\n## Required\n\nThere are no required configuration fields.\n\n\n## Optional\n\n- `path` (string) - The path to a directory inside your git repo. The\nplugin will search for a git repo, starting in this directory and walking\nup through parent directories. Defaults to '.' (the directory packer\nwas execued in).\n\n- `commit_ish` (string) - A [Commit-Ish value](https://git-scm.com/docs/gitglossary#Documentation/gitglossary.txt-aiddefcommit-ishacommit-ishalsocommittish)\n(e.g. tag) pointing to the target commit object.\nSee [go-git ResolveRevision](https://pkg.go.dev/github.com/go-git/go-git/v5#Repository.ResolveRevision)\nfor the list of supported values. Defaults to 'HEAD'.\n\n\n## Output\n\n- `hash` (string) - The SHA1 checksum or \"hash\" value of the selected commit.\n- `files` (list[string]) - The list of files present at this commit.\n\n## Example Usage\n\nThis example shows how to get the checksum of the files tracked by git. \n\n```hcl\ndata \"git-tree\" \"cwd-head\" { }\n\nlocals {\n  checksum = md5(join(\",\", sort(data.git-tree.cwd-head.files)))\n}\n```\n","created_at":"2024-03-01T03:07:55.719Z","updated_at":"2024-03-01T03:07:55.719Z","name":"Tree","slug":"tree","component":{"id":"4d1ac7a7-f708-453c-9663-16fa8b3e2e11","slug":"data-source","name":"Data Source","plural_name":"Data Sources","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.255Z","updated_at":"2022-11-09T22:56:31.255Z"},"variable_groups":[]}]},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Git","url":"/packer/integrations/ethanmdavidson/git","isCurrentPage":true}],"anchorLinks":[{"id":"installation","level":3,"title":"Installation"},{"id":"manual-installation","level":3,"title":"Manual Installation"},{"id":"components","level":3,"title":"Components"},{"id":"data-sources","level":3,"title":"Data Sources"}],"serializedREADME":{"compiledSource":"var m=Object.defineProperty,u=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var s=Object.getOwnPropertySymbols;var i=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable;var l=(a,n,t)=>n in a?m(a,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[n]=t,e=(a,n)=>{for(var t in n||(n={}))i.call(n,t)&&l(a,t,n[t]);if(s)for(var t of s(n))p.call(n,t)&&l(a,t,n[t]);return a},r=(a,n)=>u(a,d(n));var c=(a,n)=>{var t={};for(var o in a)i.call(a,o)&&n.indexOf(o)<0&&(t[o]=a[o]);if(a!=null&&s)for(var o of s(a))n.indexOf(o)<0&&p.call(a,o)&&(t[o]=a[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:a}=o,n=c(o,[\"components\"]);return mdx(MDXLayout,r(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The Git plugin is able to interact with Git repos through Packer.\"),mdx(\"h3\",e({},{id:\"user-content-installation\",\"data-text-content\":\"Installation\",className:\"g-type-display-4\"}),\"Installation\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To install this plugin, copy and paste this code into your Packer configuration, then run \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.packer.io/docs/commands/init\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"packer init\")),\".\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"packer\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"required_plugins\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"git\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"version\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\">= 0.6.2\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"github.com/ethanmdavidson/git\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Alternatively, you can use \",mdx(\"inlineCode\",{parentName:\"p\"},\"packer plugins install\"),\" to manage installation of this plugin.\"),mdx(\"pre\",e({},{className:\"language-sh\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-sh\"}),\"$ packer plugins install github.com/ethanmdavidson/git\",`\n`)),mdx(\"h3\",e({},{id:\"user-content-manual-installation\",\"data-text-content\":\"Manual Installation\",className:\"g-type-display-4\"}),\"Manual Installation\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`You can find pre-built binary releases of the plugin\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/ethanmdavidson/packer-plugin-git/releases\"}),\"here\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Or, if you prefer to build the plugin from its source\ncode, clone `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/ethanmdavidson/packer-plugin-git\"}),\"the GitHub repository\"),`\nlocally and run the command `,mdx(\"inlineCode\",{parentName:\"p\"},\"make build\"),` from the root\ndirectory. Upon successful compilation, a `,mdx(\"inlineCode\",{parentName:\"p\"},\"packer-plugin-git\"),` plugin\nbinary file can be found in the root directory.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Once the binary is downloaded or built, please follow the Packer\ndocumentation on\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.packer.io/docs/extending/plugins/#installing-plugins\"}),\"installing a plugin\"),\".\"),mdx(\"h3\",e({},{id:\"user-content-components\",\"data-text-content\":\"Components\",className:\"g-type-display-4\"}),\"Components\"),mdx(\"h3\",e({},{id:\"user-content-data-sources\",\"data-text-content\":\"Data Sources\",className:\"g-type-display-4\"}),\"Data Sources\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"/packer/integrations/ethanmdavidson/git/latest/components/data-source/commit\"}),\"git-commit\"),` - Retrieve information\nabout a specific commit, e.g. the commit hash.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"/packer/integrations/ethanmdavidson/git/latest/components/data-source/repository\"}),\"git-repository\"),` - Retrieve information\nabout a repository, e.g. the value of HEAD.`),mdx(\"li\",{parentName:\"ul\"},mdx(\"a\",e({parentName:\"li\"},{href:\"/packer/integrations/ethanmdavidson/git/latest/components/data-source/tree\"}),\"git-tree\"),` - Retrieve the list of\nfiles present in a specific commit, similar to `,mdx(\"inlineCode\",{parentName:\"li\"},\"git ls-tree -r\"),\".\")))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"__N_SSG":true}