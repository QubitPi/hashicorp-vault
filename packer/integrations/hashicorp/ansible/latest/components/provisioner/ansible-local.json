{"pageProps":{"metadata":{"title":"Ansible Provisioner | Integrations"},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"5a550293-a170-4a30-994a-5f8e889fcef0","slug":"ansible","name":"Ansible","description":"The Ansible plugin allows users to execute as a provisioner during a Packer build.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"official","repo_url":"https://github.com/hashicorp/packer-plugin-ansible","subdirectory":"/.web-docs","created_at":"2023-06-15T19:02:40.836Z","updated_at":"2023-08-08T17:01:03.611Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["1.1.1","1.1.0","0.0.1"],"components":[{"id":"418417de-2c71-46a1-8dbc-7e9ae777a22e","slug":"provisioner","name":"Provisioner","plural_name":"Provisioners"},{"id":"418417de-2c71-46a1-8dbc-7e9ae777a22e","slug":"provisioner","name":"Provisioner","plural_name":"Provisioners"}],"flags":[],"integration_type":null},"activeRelease":{"id":"96ffc6eb-eb8e-4901-b710-bf88921b9095","integration_id":"5a550293-a170-4a30-994a-5f8e889fcef0","version":"1.1.1","readme":"The Ansible plugin allows users to execute as a provisioner during a Packer build.\n\n\n### Installation\nTo install this plugin add this code into your Packer configuration and run [packer init](/packer/docs/commands/init)\n\n```hcl\npacker {\n  required_plugins {\n    ansible = {\n      version = \"~> 1\"\n      source = \"github.com/hashicorp/ansible\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\npacker plugins install github.com/hashicorp/ansible\n```\n\n### Components\n\n**Note:** Ansible will _not_ be installed automatically by this provisioner. This provisioner expects that Ansible is already installed on the guest/remote machine.\nIt is common practice to use the [shell provisioner](/packer/docs/provisioners/shell) before the Ansible provisioner to do this.\n\n#### Provisioners:\n\n- [ansible](/packer/integrations/hashicorp/ansible/latest/components/provisioner/ansible) - The Packer provisioner runs Ansible playbooks. It dynamically creates an Ansible inventory file configured to use SSH, runs an SSH server, executes ansible-playbook, and marshals Ansible plays through the SSH server to the machine being provisioned by Packer.\n\n- [ansible-local](/packer/integrations/hashicorp/ansible/latest/components/provisioner/ansible-local) - The Packer provisioner will run ansible in ansible's \"local\" mode on the remote/guest VM using Playbook and Role files that exist on the guest VM. This means ansible must be installed on the remote/guest VM.\n","created_at":"2023-11-27T18:58:18.236Z","updated_at":"2023-11-27T18:58:18.236Z","components":[{"id":"4ed8f0f7-1a71-4775-b940-e68d12ea517e","integration_release_id":"96ffc6eb-eb8e-4901-b710-bf88921b9095","component_id":"418417de-2c71-46a1-8dbc-7e9ae777a22e","readme":"Type: `ansible-local`\n\nThe `ansible-local` Packer provisioner will execute `ansible` in Ansible's \"local\"\nmode on the remote/guest VM using Playbook and Role files that exist on the\nguest VM. This means Ansible must be installed on the remote/guest VM.\nPlaybooks and Roles can be uploaded from your build machine (the one running\nPacker) to the vm. Ansible is then run on the guest machine in [local\nmode](https://docs.ansible.com/ansible/latest/playbooks_delegation.html#local-playbooks)\nvia the `ansible-playbook` command.\n\n-> **Note:** Ansible will _not_ be installed automatically by this\nprovisioner. This provisioner expects that Ansible is already installed on the\nguest/remote machine. It is common practice to use the [shell\nprovisioner](/packer/docs/provisioner/shell) before the Ansible provisioner to\ndo this.\n\n## Basic Example\n\nThe example below is fully functional.\n\n**HCL2**\n\n```hcl\nvariable \"topping\" {\n  type    = string\n  default = \"mushroom\"\n}\n\nsource \"docker\" \"example\" {\n  image       = \"williamyeh/ansible:ubuntu14.04\"\n  export_path = \"packer_example\"\n  run_command = [\"-d\", \"-i\", \"-t\", \"--entrypoint=/bin/bash\", \"{{.Image}}\"]\n}\n\nbuild {\n  sources = [\n    \"source.docker.example\"\n  ]\n\n  provisioner \"ansible-local\" {\n    playbook_file   = \"./playbook.yml\"\n    extra_arguments = [\"--extra-vars\", \"\\\"pizza_toppings=${var.topping}\\\"\"]\n  }\n}\n```\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"docker\",\n      \"image\": \"williamyeh/ansible:ubuntu14.04\",\n      \"export_path\": \"packer_example\",\n      \"run_command\": [\"-d\", \"-i\", \"-t\", \"--entrypoint=/bin/bash\", \"{{.Image}}\"]\n    }\n  ],\n  \"variables\": {\n    \"topping\": \"mushroom\"\n  },\n  \"provisioners\": [\n    {\n      \"type\": \"ansible-local\",\n      \"playbook_file\": \"./playbook.yml\",\n      \"extra_arguments\": [\n        \"--extra-vars\",\n        \"\\\"pizza_toppings={{ user `topping`}}\\\"\"\n      ]\n    }\n  ]\n}\n```\n\n\nwhere ./playbook.yml contains\n\n```\n---\n- name: hello world\n  hosts: 127.0.0.1\n  connection: local\n\n  tasks:\n    - command: echo {{ pizza_toppings }}\n    - debug: msg=\"{{ pizza_toppings }}\"\n\n```\n\n## Configuration Reference\n\nThe reference of available configuration options is listed below.\n\nRequired:\n\n- `playbook_file` (string) - The playbook file to be executed by ansible.\n  This file must exist on your local system and will be uploaded to the\n  remote machine. This option is exclusive with `playbook_files`.\n\n- `playbook_files` (array of strings) - The playbook files to be executed by\n  ansible. These files must exist on your local system. If the files don't\n  exist in the `playbook_dir` or you don't set `playbook_dir` they will be\n  uploaded to the remote machine. This option is exclusive with\n  `playbook_file`.\n\nOptional:\n\n<!-- Code generated from the comments of the Config struct in provisioner/ansible-local/provisioner.go; DO NOT EDIT MANUALLY -->\n\n- `command` (string) - The command to invoke ansible. Defaults to\n   `ansible-playbook`. If you would like to provide a more complex command,\n   for example, something that sets up a virtual environment before calling\n   ansible, take a look at the ansible wrapper guide below for inspiration.\n   Please note that Packer expects Command to be a path to an executable.\n   Arbitrary bash scripting will not work and needs to go inside an\n   executable script.\n\n- `extra_arguments` ([]string) - Extra arguments to pass to Ansible.\n  These arguments _will not_ be passed through a shell and arguments should\n  not be quoted. Usage example:\n  \n  ```json\n     \"extra_arguments\": [ \"--extra-vars\", \"Region={{user `Region`}} Stage={{user `Stage`}}\" ]\n  ```\n  \n  In certain scenarios where you want to pass ansible command line arguments\n  that include parameter and value (for example `--vault-password-file pwfile`),\n  from ansible documentation this is correct format but that is NOT accepted here.\n  Instead you need to do it like `--vault-password-file=pwfile`.\n  \n  If you are running a Windows build on AWS, Azure, Google Compute, or OpenStack\n  and would like to access the auto-generated password that Packer uses to\n  connect to a Windows instance via WinRM, you can use the template variable\n  \n  ```build.Password``` in HCL templates or ```{{ build `Password`}}``` in\n  legacy JSON templates. For example:\n  \n  in JSON templates:\n  \n  ```json\n  \"extra_arguments\": [\n     \"--extra-vars\", \"winrm_password={{ build `Password`}}\"\n  ]\n  ```\n  \n  in HCL templates:\n  ```hcl\n  extra_arguments = [\n     \"--extra-vars\", \"winrm_password=${build.Password}\"\n  ]\n  ```\n\n- `group_vars` (string) - A path to the directory containing ansible group\n  variables on your local system to be copied to the remote machine. By\n  default, this is empty.\n\n- `host_vars` (string) - A path to the directory containing ansible host variables on your local\n  system to be copied to the remote machine. By default, this is empty.\n\n- `playbook_dir` (string) - A path to the complete ansible directory structure on your local system\n  to be copied to the remote machine as the `staging_directory` before all\n  other files and directories.\n\n- `playbook_file` (string) - The playbook file to be executed by ansible. This file must exist on your\n  local system and will be uploaded to the remote machine. This option is\n  exclusive with `playbook_files`.\n\n- `playbook_files` ([]string) - The playbook files to be executed by ansible. These files must exist on\n  your local system. If the files don't exist in the `playbook_dir` or you\n  don't set `playbook_dir` they will be uploaded to the remote machine. This\n  option is exclusive with `playbook_file`.\n\n- `playbook_paths` ([]string) - An array of directories of playbook files on your local system. These\n  will be uploaded to the remote machine under `staging_directory`/playbooks.\n  By default, this is empty.\n\n- `role_paths` ([]string) - An array of paths to role directories on your local system. These will be\n  uploaded to the remote machine under `staging_directory`/roles. By default,\n  this is empty.\n\n- `collection_paths` ([]string) - An array of local paths of collections to upload.\n\n- `staging_directory` (string) - The directory where files will be uploaded. Packer requires write\n  permissions in this directory.\n\n- `clean_staging_directory` (bool) - If set to `true`, the content of the `staging_directory` will be removed after\n  executing ansible. By default this is set to `false`.\n\n- `inventory_file` (string) - The inventory file to be used by ansible. This\n  file must exist on your local system and will be uploaded to the remote\n  machine.\n  \n  When using an inventory file, it's also required to `--limit` the hosts to the\n  specified host you're building. The `--limit` argument can be provided in the\n  `extra_arguments` option.\n  \n  An example inventory file may look like:\n  \n  ```text\n  [chi-dbservers]\n  db-01 ansible_connection=local\n  db-02 ansible_connection=local\n  \n  [chi-appservers]\n  app-01 ansible_connection=local\n  app-02 ansible_connection=local\n  \n  [chi:children]\n  chi-dbservers\n  chi-appservers\n  \n  [dbservers:children]\n  chi-dbservers\n  \n  [appservers:children]\n  chi-appservers\n  ```\n\n- `inventory_groups` ([]string) - `inventory_groups` (string) - A comma-separated list of groups to which\n  packer will assign the host `127.0.0.1`. A value of `my_group_1,my_group_2`\n  will generate an Ansible inventory like:\n  \n  ```text\n  [my_group_1]\n  127.0.0.1\n  [my_group_2]\n  127.0.0.1\n  ```\n\n- `galaxy_file` (string) - A requirements file which provides a way to\n   install roles or collections with the [ansible-galaxy\n   cli](https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#the-ansible-galaxy-command-line-tool)\n   on the local machine before executing `ansible-playbook`. By default, this is empty.\n\n- `galaxy_command` (string) - The command to invoke ansible-galaxy. By default, this is\n  `ansible-galaxy`.\n\n- `galaxy_force_install` (bool) - Force overwriting an existing role.\n   Adds `--force` option to `ansible-galaxy` command. By default, this is\n   `false`.\n\n- `galaxy_roles_path` (string) - The path to the directory on the remote system in which to\n    install the roles. Adds `--roles-path /path/to/your/roles` to\n    `ansible-galaxy` command. By default, this will install to a 'galaxy_roles' subfolder in the\n    staging/roles directory.\n\n- `galaxy_collections_path` (string) - The path to the directory on the remote system in which to\n    install the collections. Adds `--collections-path /path/to/your/collections` to\n    `ansible-galaxy` command. By default, this will install to a 'galaxy_collections' subfolder in the\n    staging/collections directory.\n\n<!-- End of code generated from the comments of the Config struct in provisioner/ansible-local/provisioner.go; -->\n\n\nParameters common to all provisioners:\n\n- `pause_before` (duration) - Sleep for duration before execution.\n\n- `max_retries` (int) - Max times the provisioner will retry in case of failure. Defaults to zero (0). Zero means an error will not be retried.\n\n- `only` (array of string) - Only run the provisioner for listed builder(s)\n  by name.\n\n- `override` (object) - Override the builder with different settings for a\n  specific builder, eg :\n\n  In HCL2:\n\n  ```hcl\n  source \"null\" \"example1\" {\n    communicator = \"none\"\n  }\n\n  source \"null\" \"example2\" {\n    communicator = \"none\"\n  }\n\n  build {\n    sources = [\"source.null.example1\", \"source.null.example2\"]\n    provisioner \"shell-local\" {\n      inline = [\"echo not overridden\"]\n      override = {\n        example1 = {\n          inline = [\"echo yes overridden\"]\n        }\n      }\n    }\n  }\n  ```\n\n  In JSON:\n\n  ```json\n  {\n    \"builders\": [\n      {\n        \"type\": \"null\",\n        \"name\": \"example1\",\n        \"communicator\": \"none\"\n      },\n      {\n        \"type\": \"null\",\n        \"name\": \"example2\",\n        \"communicator\": \"none\"\n      }\n    ],\n    \"provisioners\": [\n      {\n        \"type\": \"shell-local\",\n        \"inline\": [\"echo not overridden\"],\n        \"override\": {\n          \"example1\": {\n            \"inline\": [\"echo yes overridden\"]\n          }\n        }\n      }\n    ]\n  }\n  ```\n\n- `timeout` (duration) - If the provisioner takes more than for example\n  `1h10m1s` or `10m` to finish, the provisioner will timeout and fail.\n\n\n## Default Extra Variables\n\nIn addition to being able to specify extra arguments using the\n`extra_arguments` configuration, the provisioner automatically defines certain\ncommonly useful Ansible variables:\n\n- `packer_build_name` is set to the name of the build that Packer is running.\n  This is most useful when Packer is making multiple builds and you want to\n  distinguish them slightly when using a common playbook.\n\n- `packer_builder_type` is the type of the builder that was used to create\n  the machine that the script is running on. This is useful if you want to\n  run only certain parts of the playbook on systems built with certain\n  builders.\n\n- `packer_http_addr` If using a builder that provides an HTTP server for file\n  transfer (such as `hyperv`, `parallels`, `qemu`, `virtualbox`, and `vmware`), this\n  will be set to the address. You can use this address in your provisioner to\n  download large files over HTTP. This may be useful if you're experiencing\n  slower speeds using the default file provisioner. A file provisioner using\n  the `winrm` communicator may experience these types of difficulties.\n","created_at":"2023-11-27T18:58:19.334Z","updated_at":"2023-11-27T18:58:19.334Z","name":"Ansible Local","slug":"ansible-local","component":{"id":"418417de-2c71-46a1-8dbc-7e9ae777a22e","slug":"provisioner","name":"Provisioner","plural_name":"Provisioners","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.054Z","updated_at":"2022-11-09T22:56:31.054Z"},"variable_groups":[]},{"id":"9a62b63e-3c08-4b3f-adb8-3616fa851e09","integration_release_id":"96ffc6eb-eb8e-4901-b710-bf88921b9095","component_id":"418417de-2c71-46a1-8dbc-7e9ae777a22e","readme":"Type: `ansible`\n\nThe `ansible` Packer provisioner runs Ansible playbooks. It dynamically creates\nan Ansible inventory file configured to use SSH, runs an SSH server, executes\n`ansible-playbook`, and marshals Ansible plays through the SSH server to the\nmachine being provisioned by Packer.\n\n-> **Note:** Any `remote_user` defined in tasks will be ignored. Packer\nwill always connect with the user given in the json config for this\nprovisioner.\n\n-> **Note:** Options below that use the Packer template engine won't be able to\naccept jinja2 `{{ function }}` macro syntax in a way that can be preserved to\nthe Ansible run. If you need to set variables using Ansible macros, you need to\ndo so inside your playbooks or inventory files.\n\nPlease see the [Debugging](#debugging), [Limitations](#limitations), or [Troubleshooting](#troubleshooting) if you are having trouble\ngetting started.\n\n## Basic Example\n\nThis is a fully functional template that will provision an image on\nDigitalOcean. Replace the mock `api_token` value with your own.\n\nExample Packer template:\n\n**HCL2**\n\n```hcl\nsource \"digitalocean\" \"example\"{\n    api_token = \"6a561151587389c7cf8faa2d83e94150a4202da0e2bad34dd2bf236018ffaeeb\"\n    image     = \"ubuntu-20-04-x64\"\n    region    = \"sfo1\"\n}\n\nbuild {\n    sources = [\n        \"source.digitalocean.example\"\n    ]\n\n    provisioner \"ansible\" {\n      playbook_file = \"./playbook.yml\"\n    }\n}\n```\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"digitalocean\",\n      \"api_token\": \"6a561151587389c7cf8faa2d83e94150a4202da0e2bad34dd2bf236018ffaeeb\",\n      \"image\": \"ubuntu-20-04-x64\",\n      \"region\": \"sfo1\"\n    }\n  ],\n  \"provisioners\": [\n    {\n      \"type\": \"ansible\",\n      \"playbook_file\": \"./playbook.yml\"\n    }\n  ]\n}\n```\n\n\nExample playbook:\n\n```yaml\n---\n# playbook.yml\n- name: 'Provision Image'\n  hosts: default\n  become: true\n\n  tasks:\n    - name: install Apache\n      package:\n        name: 'httpd'\n        state: present\n```\n\n## Configuration Reference\n\nRequired Parameters:\n\n<!-- Code generated from the comments of the Config struct in provisioner/ansible/provisioner.go; DO NOT EDIT MANUALLY -->\n\n- `playbook_file` (string) - The playbook to be run by Ansible.\n\n<!-- End of code generated from the comments of the Config struct in provisioner/ansible/provisioner.go; -->\n\n\nOptional Parameters:\n\n<!-- Code generated from the comments of the Config struct in provisioner/ansible/provisioner.go; DO NOT EDIT MANUALLY -->\n\n- `command` (string) - The command to invoke ansible. Defaults to\n   `ansible-playbook`. If you would like to provide a more complex command,\n   for example, something that sets up a virtual environment before calling\n   ansible, take a look at the ansible wrapper guide below for inspiration.\n   Please note that Packer expects Command to be a path to an executable.\n   Arbitrary bash scripting will not work and needs to go inside an\n   executable script.\n\n- `extra_arguments` ([]string) - Extra arguments to pass to Ansible. These arguments _will not_ be passed\n  through a shell and arguments should not be quoted. Usage example:\n  \n  ```json\n     \"extra_arguments\": [ \"--extra-vars\", \"Region={{user `Region`}} Stage={{user `Stage`}}\" ]\n  ```\n  \n  In certain scenarios where you want to pass ansible command line\n  arguments that include parameter and value (for example\n  `--vault-password-file pwfile`), from ansible documentation this is\n  correct format but that is NOT accepted here. Instead you need to do it\n  like `--vault-password-file=pwfile`.\n  \n  If you are running a Windows build on AWS, Azure, Google Compute, or\n  OpenStack and would like to access the auto-generated password that\n  Packer uses to connect to a Windows instance via WinRM, you can use the\n  template variable\n  \n  ```build.Password``` in HCL templates or ```{{ build `Password`}}``` in\n  legacy JSON templates. For example:\n  \n  in JSON templates:\n  \n  ```json\n  \"extra_arguments\": [\n     \"--extra-vars\", \"winrm_password={{ build `Password`}}\"\n  ]\n  ```\n  \n  in HCL templates:\n  \n  ```hcl\n  extra_arguments = [\n     \"--extra-vars\", \"winrm_password=${build.Password}\"\n  ]\n  ```\n  \n  If the lefthand side of a value contains 'secret' or 'password' (case\n  insensitive) it will be hidden from output. For example, passing\n  \"my_password=secr3t\" will hide \"secr3t\" from output.\n\n- `ansible_env_vars` ([]string) - Environment variables to set before\n    running Ansible. Usage example:\n  \n    ```json\n      \"ansible_env_vars\": [ \"ANSIBLE_HOST_KEY_CHECKING=False\", \"ANSIBLE_SSH_ARGS='-o ForwardAgent=yes -o ControlMaster=auto -o ControlPersist=60s'\", \"ANSIBLE_NOCOLOR=True\" ]\n    ```\n  \n    This is a [template engine](/packer/docs/templates/legacy_json_templates/engine). Therefore, you\n    may use user variables and template functions in this field.\n  \n    For example, if you are running a Windows build on AWS, Azure,\n    Google Compute, or OpenStack and would like to access the auto-generated\n    password that Packer uses to connect to a Windows instance via WinRM, you\n    can use the template variable `{{.WinRMPassword}}` in this option. Example:\n  \n    ```json\n    \"ansible_env_vars\": [ \"WINRM_PASSWORD={{.WinRMPassword}}\" ],\n    ```\n\n- `ansible_ssh_extra_args` ([]string) - Specifies --ssh-extra-args on command line defaults to -o IdentitiesOnly=yes\n\n- `groups` ([]string) - The groups into which the Ansible host should\n   be placed. When unspecified, the host is not associated with any groups.\n\n- `empty_groups` ([]string) - The groups which should be present in\n   inventory file but remain empty.\n\n- `host_alias` (string) - The alias by which the Ansible host should be\n  known. Defaults to `default`. This setting is ignored when using a custom\n  inventory file.\n\n- `user` (string) - The `ansible_user` to use. Defaults to the user running\n   packer, NOT the user set for your communicator. If you want to use the same\n   user as the communicator, you will need to manually set it again in this\n   field.\n\n- `local_port` (int) - The port on which to attempt to listen for SSH\n   connections. This value is a starting point. The provisioner will attempt\n   listen for SSH connections on the first available of ten ports, starting at\n   `local_port`. A system-chosen port is used when `local_port` is missing or\n   empty.\n\n- `ssh_host_key_file` (string) - The SSH key that will be used to run the SSH\n   server on the host machine to forward commands to the target machine.\n   Ansible connects to this server and will validate the identity of the\n   server using the system known_hosts. The default behavior is to generate\n   and use a onetime key. Host key checking is disabled via the\n   `ANSIBLE_HOST_KEY_CHECKING` environment variable if the key is generated.\n\n- `ssh_authorized_key_file` (string) - The SSH public key of the Ansible\n   `ssh_user`. The default behavior is to generate and use a onetime key. If\n   this key is generated, the corresponding private key is passed to\n   `ansible-playbook` with the `-e ansible_ssh_private_key_file` option.\n\n- `ansible_proxy_key_type` (string) - Change the key type used for the adapter.\n  \n  Supported values:\n  \n  * ECDSA (default)\n  * RSA\n  \n  NOTE: using RSA may cause problems if the key is used to authenticate with rsa-sha1\n  as modern OpenSSH versions reject this by default as it is unsafe.\n\n- `sftp_command` (string) - The command to run on the machine being\n   provisioned by Packer to handle the SFTP protocol that Ansible will use to\n   transfer files. The command should read and write on stdin and stdout,\n   respectively. Defaults to `/usr/lib/sftp-server -e`.\n\n- `skip_version_check` (bool) - Check if ansible is installed prior to\n   running. Set this to `true`, for example, if you're going to install\n   ansible during the packer run.\n\n- `use_sftp` (bool) - Use SFTP\n\n- `inventory_directory` (string) - The directory in which to place the\n   temporary generated Ansible inventory file. By default, this is the\n   system-specific temporary file location. The fully-qualified name of this\n   temporary file will be passed to the `-i` argument of the `ansible` command\n   when this provisioner runs ansible. Specify this if you have an existing\n   inventory directory with `host_vars` `group_vars` that you would like to\n   use in the playbook that this provisioner will run.\n\n- `inventory_file_template` (string) - This template represents the format for the lines added to the temporary\n  inventory file that Packer will create to run Ansible against your image.\n  The default for recent versions of Ansible is:\n  \"{{ .HostAlias }} ansible_host={{ .Host }} ansible_user={{ .User }} ansible_port={{ .Port }}\\n\"\n  Available template engines are: This option is a template engine;\n  variables available to you include the examples in the default (Host,\n  HostAlias, User, Port) as well as any variables available to you via the\n  \"build\" template engine.\n\n- `inventory_file` (string) - The inventory file to use during provisioning.\n   When unspecified, Packer will create a temporary inventory file and will\n   use the `host_alias`.\n\n- `keep_inventory_file` (bool) - If `true`, the Ansible provisioner will\n   not delete the temporary inventory file it creates in order to connect to\n   the instance. This is useful if you are trying to debug your ansible run\n   and using \"--on-error=ask\" in order to leave your instance running while you\n   test your playbook. this option is not used if you set an `inventory_file`.\n\n- `galaxy_file` (string) - A requirements file which provides a way to\n   install roles or collections with the [ansible-galaxy\n   cli](https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#the-ansible-galaxy-command-line-tool)\n   on the local machine before executing `ansible-playbook`. By default, this is empty.\n\n- `galaxy_command` (string) - The command to invoke ansible-galaxy. By default, this is\n  `ansible-galaxy`.\n\n- `galaxy_force_install` (bool) - Force overwriting an existing role.\n   Adds `--force` option to `ansible-galaxy` command. By default, this is\n   `false`.\n\n- `galaxy_force_with_deps` (bool) - Force overwriting an existing role and its dependencies.\n   Adds `--force-with-deps` option to `ansible-galaxy` command. By default,\n   this is `false`.\n\n- `roles_path` (string) - The path to the directory on your local system in which to\n    install the roles. Adds `--roles-path /path/to/your/roles` to\n    `ansible-galaxy` command. By default, this is empty, and thus `--roles-path`\n    option is not added to the command.\n\n- `collections_path` (string) - The path to the directory on your local system in which to\n    install the collections. Adds `--collections-path /path/to/your/collections` to\n    `ansible-galaxy` command. By default, this is empty, and thus `--collections-path`\n    option is not added to the command.\n\n- `use_proxy` (boolean) - When `true`, set up a localhost proxy adapter\n  so that Ansible has an IP address to connect to, even if your guest does not\n  have an IP address. For example, the adapter is necessary for Docker builds\n  to use the Ansible provisioner. If you set this option to `false`, but\n  Packer cannot find an IP address to connect Ansible to, it will\n  automatically set up the adapter anyway.\n  \n   In order for Ansible to connect properly even when use_proxy is false, you\n  need to make sure that you are either providing a valid username and ssh key\n  to the ansible provisioner directly, or that the username and ssh key\n  being used by the ssh communicator will work for your needs. If you do not\n  provide a user to ansible, it will use the user associated with your\n  builder, not the user running Packer.\n   use_proxy=false is currently only supported for SSH and WinRM.\n  \n  Currently, this defaults to `true` for all connection types. In the future,\n  this option will be changed to default to `false` for SSH and WinRM\n  connections where the provisioner has access to a host IP.\n\n- `ansible_winrm_use_http` (bool) - Force WinRM to use HTTP instead of HTTPS.\n  \n  Set this to true to force Ansible to use HTTP instead of HTTPS to communicate\n  over WinRM to the destination host.\n  \n  Ansible uses the port as a heuristic to determine whether to use HTTP\n  or not. In the current state, Packer assigns a random port for connecting\n  to WinRM and Ansible's heuristic fails to determine that it should be\n  using HTTP, even when the communicator is setup to use it.\n  \n  Alternatively, you may also directly add the following arguments to the\n  `extra_arguments` section for ansible: `\"-e\", \"ansible_winrm_scheme=http\"`.\n  \n  Default: `false`\n\n<!-- End of code generated from the comments of the Config struct in provisioner/ansible/provisioner.go; -->\n\n\nParameters common to all provisioners:\n\n- `pause_before` (duration) - Sleep for duration before execution.\n\n- `max_retries` (int) - Max times the provisioner will retry in case of failure. Defaults to zero (0). Zero means an error will not be retried.\n\n- `only` (array of string) - Only run the provisioner for listed builder(s)\n  by name.\n\n- `override` (object) - Override the builder with different settings for a\n  specific builder, eg :\n\n  In HCL2:\n\n  ```hcl\n  source \"null\" \"example1\" {\n    communicator = \"none\"\n  }\n\n  source \"null\" \"example2\" {\n    communicator = \"none\"\n  }\n\n  build {\n    sources = [\"source.null.example1\", \"source.null.example2\"]\n    provisioner \"shell-local\" {\n      inline = [\"echo not overridden\"]\n      override = {\n        example1 = {\n          inline = [\"echo yes overridden\"]\n        }\n      }\n    }\n  }\n  ```\n\n  In JSON:\n\n  ```json\n  {\n    \"builders\": [\n      {\n        \"type\": \"null\",\n        \"name\": \"example1\",\n        \"communicator\": \"none\"\n      },\n      {\n        \"type\": \"null\",\n        \"name\": \"example2\",\n        \"communicator\": \"none\"\n      }\n    ],\n    \"provisioners\": [\n      {\n        \"type\": \"shell-local\",\n        \"inline\": [\"echo not overridden\"],\n        \"override\": {\n          \"example1\": {\n            \"inline\": [\"echo yes overridden\"]\n          }\n        }\n      }\n    ]\n  }\n  ```\n\n- `timeout` (duration) - If the provisioner takes more than for example\n  `1h10m1s` or `10m` to finish, the provisioner will timeout and fail.\n\n\n## Default Extra Variables\n\nIn addition to being able to specify extra arguments using the\n`extra_arguments` configuration, the provisioner automatically defines certain\ncommonly useful Ansible variables:\n\n- `packer_build_name` is set to the name of the build that Packer is running.\n  This is most useful when Packer is making multiple builds and you want to\n  distinguish them slightly when using a common playbook.\n\n- `packer_builder_type` is the type of the builder that was used to create\n  the machine that the script is running on. This is useful if you want to\n  run only certain parts of the playbook on systems built with certain\n  builders.\n\n- `packer_http_addr` If using a builder that provides an HTTP server for file\n  transfer (such as `hyperv`, `parallels`, `qemu`, `virtualbox`, and `vmware`), this\n  will be set to the address. You can use this address in your provisioner to\n  download large files over HTTP. This may be useful if you're experiencing\n  slower speeds using the default file provisioner. A file provisioner using\n  the `winrm` communicator may experience these types of difficulties.\n\n## Debugging\n\nTo debug underlying issues with Ansible, add `\"-vvvv\"` to `\"extra_arguments\"`\nto enable verbose logging.\n\n**HCL2**\n\n```hcl\n  extra_arguments = [ \"-vvvv\" ]\n```\n\n**JSON**\n\n```json\n  \"extra_arguments\": [ \"-vvvv\" ]\n```\n\n\n## Limitations\n\n### Redhat / CentOS\n\nRedhat / CentOS builds have been known to fail with the following error due to\n`sftp_command`, which should be set to `/usr/libexec/openssh/sftp-server -e`:\n\n```text\n==> virtualbox-ovf: starting sftp subsystem\n    virtualbox-ovf: fatal: [default]: UNREACHABLE! => {\"changed\": false, \"msg\": \"SSH Error: data could not be sent to the remote host. Make sure this host can be reached over ssh\", \"unreachable\": true}\n```\n\n### chroot communicator\n\nBuilding within a chroot (e.g. `amazon-chroot`) requires changing the Ansible\nconnection to chroot and running Ansible as root/sudo.\n\n**HCL2**\n\n```hcl\nsource \"amazon-chroot\" \"example\" {\n  mount_path = \"/mnt/packer-amazon-chroot\"\n  region     = \"us-east-1\"\n  source_ami = \"ami-123456\"\n}\n\nbuild {\n  sources = [\n    \"source.amazon-chroot.example\"\n  ]\n\n  provisioner \"ansible\" {\n    extra_arguments = [\n        \"--connection=chroot\",\n        \"--inventory-file=/mnt/packer-amazon-chroot\"\n      ]\n\n    playbook_file = \"main.yml\"\n  }\n}\n```\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"amazon-chroot\",\n      \"mount_path\": \"/mnt/packer-amazon-chroot\",\n      \"region\": \"us-east-1\",\n      \"source_ami\": \"ami-123456\"\n    }\n  ],\n  \"provisioners\": [\n    {\n      \"type\": \"ansible\",\n      \"extra_arguments\": [\n        \"--connection=chroot\",\n        \"--inventory-file=/mnt/packer-amazon-chroot\"\n      ],\n      \"playbook_file\": \"main.yml\"\n    }\n  ]\n}\n```\n\n\n### WinRM Communicator\n\nThere are two possible methods for using Ansible with the WinRM communicator.\n\nPlease note that if you're having trouble getting Ansible to connect, you may\nwant to take a look at the script that the Ansible project provides to help\nconfigure remoting for Ansible:\nhttps://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1\n\n#### Method 1 (recommended)\n\nThe recommended way to use the WinRM communicator is to set `\"use_proxy\": false`\nand let the Ansible provisioner handle the rest for you. If you\nare using WinRM with HTTPS, and you are using a self-signed certificate you\nwill also have to set `ansible_winrm_server_cert_validation=ignore` in your\nextra_arguments.\n\nBelow is a fully functioning Ansible example for amazon-ebs using WinRM:\n\n```hcl\n\nvariable \"aws_region\"{\n  type    = string\n  default = \"us-east-1\"\n}\n\nvariable \"aws_access_key\"{\n  type = string\n}\n\nvariable \"aws_secret_key\"{\n  type = string\n}\n\ndata \"amazon-ami\" \"windows\" {\n\n  filters = {\n    name                = \"*Windows_Server-2012*English-64Bit-Base*\"\n    root-device-type    = \"ebs\"\n    virtualization-type = \"hvm\"\n  }\n\n  most_recent = true\n  owners      = [\"099720109477\"]\n\n  region      = var.aws_region\n  access_key  = var.aws_access_key\n  secret_key  = var.aws_secret_key\n}\n\nsource \"amazon-ebs\" \"example\" {\n    region      = var.aws_region\n    instance_type = \"t2.micro\"\n\n    source_ami       = data.amazon-ami.windows.id\n\n    ami_name         = \"test-ansible-packer\"\n    user_data_file   = \"windows_bootstrap.txt\"\n    communicator     = \"winrm\"\n    force_deregister = true\n    winrm_username   = \"Administrator\"\n    winrm_insecure   = true\n    winrm_use_ssl    = true\n}\n\nbuild {\n    sources = [\n        \"source.amazon-ebs.example\",\n    ]\n\n    provisioner \"ansible\" {\n      playbook_file   = \"./playbooks/playbook-windows.yml\"\n      user            = \"Administrator\"\n      use_proxy       = false\n      extra_arguments = [\n        \"-e\",\n        \"ansible_winrm_server_cert_validation=ignore\"\n      ]\n    }\n}\n```\n\nBelow is a fully functioning Ansible example for azure-arm using WinRM.\nNote: pywinrm needs to be installed into the python environment on your local build machine if it's not already installed.\nNote: The ConfigureRemotingForAnsible.ps1 script can be found here https://github.com/ansible/ansible/blob/devel/examples/scripts/ConfigureRemotingForAnsible.ps1.\n\n**HCL2**\n\n```hcl\nsource \"azure-arm\" \"server_2019\" {\n  use_azure_cli_auth                               = true\n  build_resource_group_name                        = \"ManagedImages-RGP\"\n  build_key_vault_name                             = \"Example-Packer-Keyvault\"\n  os_type                                          = \"Windows\"\n  image_publisher                                  = \"MicrosoftWindowsServer\"\n  image_offer                                      = \"WindowsServer\"\n  image_sku                                        = \"2019-Datacenter\"\n  vm_size                                          = \"Standard_D2as_v5\"\n  os_disk_size_gb                                  = 130\n  shared_gallery_image_version_exclude_from_latest = false\n  virtual_network_resource_group_name              = \"VNET-Resource-Group\"\n  virtual_network_name                             = \"My-VNET\"\n  virtual_network_subnet_name                      = \"My-Subnet\"\n  private_virtual_network_with_public_ip           = false\n  communicator                                     = \"winrm\"\n  winrm_use_ssl                                    = true\n  winrm_insecure                                   = true\n  winrm_timeout                                    = \"3m\"\n  winrm_username                                   = \"Packer\"\n  managed_image_name                               = \"Managed-Image-Name\"\n  managed_image_resource_group_name                = \"ManagedImages-RGP\"\n  managed_image_storage_account_type               = \"Standard_LRS\"\n\n  shared_image_gallery_destination {\n    resource_group       = \"ManagedImages-RGP\"\n    gallery_name         = \"MyGallery\"\n    image_name           = \"Server2019\"\n    storage_account_type = \"Standard_LRS\"\n  }\n}\n\nbuild {\n  sources = [\n    \"sources.azure-arm.server_2019\",\n  ]\n\n  provisioner \"shell-local\" {\n    inline_shebang = \"/bin/bash -e\"\n    inline = [\n      \"pipx inject python-env-name \\\"pywinrm\\\"\",\n    ]\n  }\n\n  provisioner \"powershell\" {\n    script = \"../../scripts/ConfigureRemotingForAnsible.ps1\"\n  }\n\n  provisioner \"ansible\" {\n    skip_version_check  = false\n    user                = \"Packer\"\n    use_proxy           = false\n    playbook_file       = \"windows2019.yml\"\n    extra_arguments = [\n      \"-e\",\n      \"ansible_winrm_server_cert_validation=ignore\",\n      \"-e\",\n      \"ansible_winrm_transport=ntlm\",\n    ]\n  }\n```\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"amazon-ebs\",\n      \"region\": \"us-east-1\",\n      \"instance_type\": \"t2.micro\",\n      \"source_ami_filter\": {\n        \"filters\": {\n          \"virtualization-type\": \"hvm\",\n          \"name\": \"*Windows_Server-2012*English-64Bit-Base*\",\n          \"root-device-type\": \"ebs\"\n        },\n        \"most_recent\": true,\n        \"owners\": \"amazon\"\n      },\n      \"ami_name\": \"test-ansible-packer\",\n      \"user_data_file\": \"windows_bootstrap.txt\",\n      \"communicator\": \"winrm\",\n      \"force_deregister\": true,\n      \"winrm_insecure\": true,\n      \"winrm_username\": \"Administrator\",\n      \"winrm_use_ssl\": true\n    }\n  ],\n  \"provisioners\": [\n    {\n      \"type\": \"ansible\",\n      \"playbook_file\": \"./playbook.yml\",\n      \"user\": \"Administrator\",\n      \"use_proxy\": false,\n      \"extra_arguments\": [\"-e\", \"ansible_winrm_server_cert_validation=ignore\"]\n    }\n  ]\n}\n```\n\n\nNote that you do have to set the \"Administrator\" user, because otherwise Ansible\nwill default to using the user that is calling Packer, rather than the user\nconfigured inside of the Packer communicator. For the contents of\nwindows_bootstrap.txt, see the WinRM docs for the amazon-ebs communicator.\n\nWhen running from OSX, you may see an error like:\n\n```text\n    amazon-ebs: objc[9752]: +[__NSCFConstantString initialize] may have been in progress in another thread when fork() was called.\n    amazon-ebs: objc[9752]: +[__NSCFConstantString initialize] may have been in progress in another thread when fork() was called. We cannot safely call it or ignore it in the fork() child process. Crashing instead. Set a breakpoint on objc_initializeAfterForkError to debug.\n    amazon-ebs: ERROR! A worker was found in a dead state\n```\n\nIf you see this, you may be able to work around the issue by telling Ansible to\nexplicitly not use any proxying; you can do this by setting the template option\n\n**HCL2**\n\n```hcl\nansible_env_vars = [\"no_proxy=\\\"*\\\"\"]\n```\n\n**JSON**\n\n```json\n\"ansible_env_vars\": [\"no_proxy=\\\"*\\\"\"],\n```\n\n\nin the above Ansible template.\n\n#### Method 2 (Not recommended)\n\nIf you want to use the Packer SSH proxy, then you need a custom Ansible\nconnection plugin and a particular configuration. You need a directory named\n`connection_plugins` next to the playbook which contains a file named\npacker.py` which implements the connection plugin. On versions of Ansible\nbefore 2.4.x, the following works as the connection plugin:\n\n```python\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.plugins.connection.ssh import Connection as SSHConnection\n\nclass Connection(SSHConnection):\n    ''' ssh based connections for powershell via packer'''\n\n    transport = 'packer'\n    has_pipelining = True\n    become_methods = []\n    allow_executable = False\n    module_implementation_preferences = ('.ps1', '')\n\n    def __init__(self, *args, **kwargs):\n        super(Connection, self).__init__(*args, **kwargs)\n```\n\nNewer versions of Ansible require all plugins to have a documentation string.\nYou can see if there is a plugin available for the version of Ansible you are\nusing\n[here](https://github.com/hashicorp/packer/tree/master/provisioner/ansible/examples/connection-plugin).\n\nTo create the plugin yourself, you will need to copy all of the `options` from\nthe `DOCUMENTATION` string from the [ssh.py Ansible connection\nplugin](https://github.com/ansible/ansible/blob/devel/lib/ansible/plugins/connection/ssh.py)\nof the Ansible version you are using and add it to a packer.py file similar to\nas follows\n\n```python\nfrom __future__ import (absolute_import, division, print_function)\n__metaclass__ = type\n\nfrom ansible.plugins.connection.ssh import Connection as SSHConnection\n\nDOCUMENTATION = '''\n    connection: packer\n    short_description: ssh based connections for powershell via packer\n    description:\n        - This connection plugin allows ansible to communicate to the target packer machines via ssh based connections for powershell.\n    author: Packer\n    version_added: na\n    options:\n      **** Copy ALL the options from\n      https://github.com/ansible/ansible/blob/devel/lib/ansible/plugins/connection/ssh.py\n      for the version of Ansible you are using ****\n'''\n\nclass Connection(SSHConnection):\n    ''' ssh based connections for powershell via packer'''\n\n    transport = 'packer'\n    has_pipelining = True\n    become_methods = []\n    allow_executable = False\n    module_implementation_preferences = ('.ps1', '')\n\n    def __init__(self, *args, **kwargs):\n        super(Connection, self).__init__(*args, **kwargs)\n```\n\nThis template should build a Windows Server 2012 image on Google Cloud\nPlatform:\n\n```json\n{\n  \"variables\": {},\n  \"provisioners\": [\n    {\n      \"type\": \"ansible\",\n      \"playbook_file\": \"./win-playbook.yml\",\n      \"extra_arguments\": [\n        \"--connection\",\n        \"packer\",\n        \"--extra-vars\",\n        \"\\\"ansible_shell_type=powershell ansible_shell_executable=None\\\"\"\n      ]\n    }\n  ],\n  \"builders\": [\n    {\n      \"type\": \"googlecompute\",\n      \"account_file\": \"{{ user `account_file`}}\",\n      \"project_id\": \"{{user `project_id`}}\",\n      \"source_image\": \"windows-server-2012-r2-dc-v20160916\",\n      \"communicator\": \"winrm\",\n      \"zone\": \"us-central1-a\",\n      \"disk_size\": 50,\n      \"winrm_username\": \"packer\",\n      \"winrm_use_ssl\": true,\n      \"winrm_insecure\": true,\n      \"metadata\": {\n        \"sysprep-specialize-script-cmd\": \"winrm set winrm/config/service/auth @{Basic=\\\"true\\\"}\"\n      }\n    }\n  ]\n}\n```\n\n-> **Warning:** Please note that if you're setting up WinRM for provisioning, you'll probably want to turn it off or restrict its permissions as part of a shutdown script at the end of Packer's provisioning process. For more details on the why/how, check out this useful blog post and the associated code:\nhttps://cloudywindows.io/post/winrm-for-provisioning-close-the-door-on-the-way-out-eh/\n\n### Post i/o timeout errors\n\nIf you see\n`unknown error: Post http://<ip>:<port>/wsman:dial tcp <ip>:<port>: i/o timeout`\nerrors while provisioning a Windows machine, try setting Ansible to copy files\nover [ssh instead of\nsftp](https://docs.ansible.com/ansible/latest/reference_appendices/config.html#envvar-ANSIBLE_SCP_IF_SSH).\n\n### Too many SSH keys\n\nSSH servers only allow you to attempt to authenticate a certain number of\ntimes. All of your loaded keys will be tried before the dynamically generated\nkey. If you have too many SSH keys loaded in your `ssh-agent`, the Ansible\nprovisioner may fail authentication with a message similar to this:\n\n```text\n    googlecompute: fatal: [default]: UNREACHABLE! => {\"changed\": false, \"msg\": \"Failed to connect to the host via ssh: Warning: Permanently added '[127.0.0.1]:62684' (RSA) to the list of known hosts.\\r\\nReceived disconnect from 127.0.0.1 port 62684:2: too many authentication failures\\r\\nAuthentication failed.\\r\\n\", \"unreachable\": true}\n```\n\nTo unload all keys from your `ssh-agent`, run:\n\n```shell-session\n$ ssh-add -D\n```\n\n### Become: yes\n\nWe recommend against running Packer as root; if you do then you won't be able\nto successfully run your Ansible playbook as root; `become: yes` will fail.\n\n### Using a wrapping script for your Ansible call\n\nSometimes, you may have extra setup that needs to be called as part of your\nansible run. The easiest way to do this is by writing a small bash script and\nusing that bash script in your `command` in place of the default\n`ansible-playbook`. For example, you may need to launch a Python `virtualenv`\nbefore calling Ansible. To do this, you'd want to create a bash script like\n\n```shell\n#!/bin/bash\nsource /tmp/venv/bin/activate && ANSIBLE_FORCE_COLOR=1 PYTHONUNBUFFERED=1 /tmp/venv/bin/ansible-playbook \"$@\"\n```\n\nThe Ansible provisioner template remains very simple. For example:\n\n**HCL2**\n\n```hcl\nprovisioner \"ansible\" {\n  command       = \"/Path/To/call_ansible.sh\"\n  playbook_file = \"./playbook.yml\"\n}\n```\n\n**JSON**\n\n```json\n{\n  \"type\": \"ansible\",\n  \"command\": \"/Path/To/call_ansible.sh\",\n  \"playbook_file\": \"./playbook.yml\"\n}\n```\n\n\nNote that we're calling ansible-playbook at the end of this command and passing\nall command line arguments through into this call; this is necessary for\nmaking sure that --extra-vars and other important Ansible arguments get set.\nNote the quoting around the bash array, too; if you don't use quotes, any\narguments with spaces will not be read properly.\n\n## Docker\n\nWhen trying to use Ansible with Docker, it should \"just work\" but if it doesn't\nyou may need to tweak a few options.\n\n- Change the ansible_connection from \"ssh\" to \"docker\"\n- Set a Docker container name via the --name option.\n\nOn a CI server you probably want to overwrite ansible_host with a random name.\n\nExample Packer template:\n\n**HCL2**\n\n```hcl\nvariable \"ansible_host\" {\n  default = \"default\"\n}\n\nvariable \"ansible_connection\" {\n  default = \"docker\"\n}\n\nsource \"docker\" \"example\" {\n      image       = \"centos:7\"\n      commit      = true\n      run_command = [ \"-d\", \"-i\", \"-t\", \"--name\", var.ansible_host, \"{{.Image}}\", \"/bin/bash\" ]\n}\n\nbuild {\n  sources = [\n    \"source.docker.example\"\n  ]\n\n  provisioner \"ansible\" {\n      groups          = [ \"webserver\" ]\n      playbook_file   = \"./webserver.yml\"\n      extra_arguments = [\n          \"--extra-vars\",\n          \"ansible_host=${var.ansible_host} ansible_connection=${var.ansible_connection}\"\n      ]\n  }\n}\n```\n\n**JSON**\n\n```json\n{\n  \"variables\": {\n    \"ansible_host\": \"default\",\n    \"ansible_connection\": \"docker\"\n  },\n  \"builders\": [\n    {\n      \"type\": \"docker\",\n      \"image\": \"centos:7\",\n      \"commit\": true,\n      \"run_command\": [\n        \"-d\",\n        \"-i\",\n        \"-t\",\n        \"--name\",\n        \"{{user `ansible_host`}}\",\n        \"{{.Image}}\",\n        \"/bin/bash\"\n      ]\n    }\n  ],\n  \"provisioners\": [\n    {\n      \"type\": \"ansible\",\n      \"groups\": [\"webserver\"],\n      \"playbook_file\": \"./webserver.yml\",\n      \"extra_arguments\": [\n        \"--extra-vars\",\n        \"ansible_host={{user `ansible_host`}} ansible_connection={{user `ansible_connection`}}\"\n      ]\n    }\n  ]\n}\n```\n\n\nExample playbook:\n\n```yaml\n- name: configure webserver\n  hosts: webserver\n  tasks:\n    - name: install Apache\n      yum:\n        name: httpd\n```\n\n## Amazon Session Manager\n\nWhen trying to use Ansible with Amazon's Session Manager, you may run into an error where Ansible\nis unable to connect to the remote Amazon instance if the local proxy adapter for Ansible [use_proxy](#use_proxy) is false.\n\nThe error may look something like the following:\n\n```\namazon-ebs: fatal: [default]: UNREACHABLE! => {\"changed\": false, \"msg\": \"Failed to connect to the host via ssh: ssh: connect to host 127.0.0.1 port 8362: Connection timed out\", \"unreachable\": true}\n```\n\nThe error is caused by a limitation on using Amazon's SSM default Port Forwarding session which only allows for one\nremote connection on the forwarded port. Since Ansible's SSH communication is not using the local proxy adapter\nit will try to make a new SSH connection to the same forwarded localhost port and fail.\n\nIn order to workaround this issue Ansible can be configured via a custom inventory file to use the AWS session-manager-plugin\ndirectly to create a new session, separate from the one created by Packer, at runtime to connect and remotely provision the instance.\n\n-> **Warning:** Please note that the default region configured for the `aws` cli must match the build region where the instance is being\nprovisioned otherwise you may run into a TargetNotConnected error. Users can use `AWS_DEFAULT_REGION` to temporarily override\ntheir configured region.\n\n**HCL2**\n\n```hcl\n  provisioner \"ansible\" {\n      use_proxy               =  false\n      playbook_file           =  \"./playbooks/playbook_remote.yml\"\n      ansible_env_vars        =  [\"PACKER_BUILD_NAME={{ build_name }}\"]\n      inventory_file_template =  \"{{ .HostAlias }} ansible_host={{ .ID }} ansible_user={{ .User }} ansible_ssh_common_args='-o StrictHostKeyChecking=no -o ProxyCommand=\\\"sh -c \\\\\\\"aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters portNumber=%p\\\\\\\"\\\"'\\n\"\n  }\n```\n\n**JSON**\n\n```json\n  \"provisioners\": [\n    {\n      \"type\": \"ansible\",\n      \"use_proxy\": false,\n      \"ansible_env_vars\": [\"PACKER_BUILD_NAME={{ build_name }}\"],\n      \"playbook_file\":   \"./playbooks/playbook_remote.yml\",\n      \"inventory_file_template\": \"{{ .HostAlias }} ansible_host={{ .ID }} ansible_user={{ .User }} ansible_ssh_common_args='-o StrictHostKeyChecking=no -o ProxyCommand=\\\"sh -c \\\\\\\"aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters portNumber=%p\\\\\\\"\\\"'\\n\"\n    }\n  ]\n```\n\n\nFull Packer template example:\n\n**HCL2**\n\n```hcl\n\nvariables {\n  instance_role = \"SSMInstanceProfile\"\n}\n\nsource \"amazon-ebs\" \"ansible-example\" {\n  region        = \"us-east-1\"\n  ami_name      = \"packer-ami-ansible\"\n  instance_type = \"t2.micro\"\n\n  source_ami_filter {\n      filters = {\n          name                = \"ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*\"\n          virtualization-type = \"hvm\"\n          root-device-type    = \"ebs\"\n      }\n      owners      = [ \"099720109477\" ]\n      most_recent =  true\n  }\n  communicator         = \"ssh\"\n  ssh_username         = \"ubuntu\"\n  ssh_interface        = \"session_manager\"\n  iam_instance_profile = var.instance_role\n}\n\nbuild {\n  sources = [\"source.amazon-ebs.ansible-example\"]\n\n  provisioner \"ansible\" {\n      use_proxy               =  false\n      playbook_file           =    \"./playbooks/playbook_remote.yml\"\n      ansible_env_vars        =  [\"PACKER_BUILD_NAME={{ build_name }}\"]\n      inventory_file_template =  \"{{ .HostAlias }} ansible_host={{ .ID }} ansible_user={{ .User }} ansible_ssh_common_args='-o StrictHostKeyChecking=no -o ProxyCommand=\\\"sh -c \\\\\\\"aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters portNumber=%p\\\\\\\"\\\"'\\n\"\n    }\n}\n```\n\n**JSON**\n\n```json\n{\n  \"variables\": {\n    \"instance_role\": \"SSMInstanceProfile\"\n  },\n\n  \"builders\": [\n    {\n      \"type\": \"amazon-ebs\",\n      \"region\": \"us-east-1\",\n      \"ami_name\": \"packer-ami-ansible\",\n      \"instance_type\": \"t2.micro\",\n      \"source_ami_filter\": {\n        \"filters\": {\n          \"virtualization-type\": \"hvm\",\n          \"name\": \"ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*\",\n          \"root-device-type\": \"ebs\"\n        },\n        \"owners\": [\"099720109477\"],\n        \"most_recent\": true\n      },\n      \"communicator\": \"ssh\",\n      \"ssh_username\": \"ubuntu\",\n      \"ssh_interface\": \"session_manager\",\n      \"iam_instance_profile\": \"{{user `instance_role`}}\"\n    }\n  ],\n  \"provisioners\": [\n    {\n      \"type\": \"ansible\",\n      \"use_proxy\": false,\n      \"ansible_env_vars\": [\"PACKER_BUILD_NAME={{ build_name }}\"],\n      \"playbook_file\": \"./playbooks/playbook_remote.yml\",\n      \"inventory_file_template\": \"{{ .HostAlias }} ansible_host={{ .ID }} ansible_user={{ .User }} ansible_ssh_common_args='-o StrictHostKeyChecking=no -o ProxyCommand=\\\"sh -c \\\\\\\"aws ssm start-session --target %h --document-name AWS-StartSSHSession --parameters portNumber=%p\\\\\\\"\\\"'\\n\"\n    }\n  ]\n}\n```\n\n\n## Troubleshooting\n\nIf you are using an Ansible version >= 2.8 and Packer hangs in the\n\"Gathering Facts\" stage, this could be the result of a pipelineing issue with\nthe proxy adapter that Packer uses. Setting `use_proxy` to `false` in the ansible\nprovisioner block of your Packer config should resolve the issue. In the future\nwe will default to setting this, so you won't have to but for now it is a manual\nchange you must make.\n","created_at":"2023-11-27T18:58:19.695Z","updated_at":"2023-11-27T18:58:19.695Z","name":"Ansible","slug":"ansible","component":{"id":"418417de-2c71-46a1-8dbc-7e9ae777a22e","slug":"provisioner","name":"Provisioner","plural_name":"Provisioners","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.054Z","updated_at":"2022-11-09T22:56:31.054Z"},"variable_groups":[]}]},"component":{"id":"4ed8f0f7-1a71-4775-b940-e68d12ea517e","integration_release_id":"96ffc6eb-eb8e-4901-b710-bf88921b9095","component_id":"418417de-2c71-46a1-8dbc-7e9ae777a22e","readme":"Type: `ansible-local`\n\nThe `ansible-local` Packer provisioner will execute `ansible` in Ansible's \"local\"\nmode on the remote/guest VM using Playbook and Role files that exist on the\nguest VM. This means Ansible must be installed on the remote/guest VM.\nPlaybooks and Roles can be uploaded from your build machine (the one running\nPacker) to the vm. Ansible is then run on the guest machine in [local\nmode](https://docs.ansible.com/ansible/latest/playbooks_delegation.html#local-playbooks)\nvia the `ansible-playbook` command.\n\n-> **Note:** Ansible will _not_ be installed automatically by this\nprovisioner. This provisioner expects that Ansible is already installed on the\nguest/remote machine. It is common practice to use the [shell\nprovisioner](/packer/docs/provisioner/shell) before the Ansible provisioner to\ndo this.\n\n## Basic Example\n\nThe example below is fully functional.\n\n**HCL2**\n\n```hcl\nvariable \"topping\" {\n  type    = string\n  default = \"mushroom\"\n}\n\nsource \"docker\" \"example\" {\n  image       = \"williamyeh/ansible:ubuntu14.04\"\n  export_path = \"packer_example\"\n  run_command = [\"-d\", \"-i\", \"-t\", \"--entrypoint=/bin/bash\", \"{{.Image}}\"]\n}\n\nbuild {\n  sources = [\n    \"source.docker.example\"\n  ]\n\n  provisioner \"ansible-local\" {\n    playbook_file   = \"./playbook.yml\"\n    extra_arguments = [\"--extra-vars\", \"\\\"pizza_toppings=${var.topping}\\\"\"]\n  }\n}\n```\n\n**JSON**\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"docker\",\n      \"image\": \"williamyeh/ansible:ubuntu14.04\",\n      \"export_path\": \"packer_example\",\n      \"run_command\": [\"-d\", \"-i\", \"-t\", \"--entrypoint=/bin/bash\", \"{{.Image}}\"]\n    }\n  ],\n  \"variables\": {\n    \"topping\": \"mushroom\"\n  },\n  \"provisioners\": [\n    {\n      \"type\": \"ansible-local\",\n      \"playbook_file\": \"./playbook.yml\",\n      \"extra_arguments\": [\n        \"--extra-vars\",\n        \"\\\"pizza_toppings={{ user `topping`}}\\\"\"\n      ]\n    }\n  ]\n}\n```\n\n\nwhere ./playbook.yml contains\n\n```\n---\n- name: hello world\n  hosts: 127.0.0.1\n  connection: local\n\n  tasks:\n    - command: echo {{ pizza_toppings }}\n    - debug: msg=\"{{ pizza_toppings }}\"\n\n```\n\n## Configuration Reference\n\nThe reference of available configuration options is listed below.\n\nRequired:\n\n- `playbook_file` (string) - The playbook file to be executed by ansible.\n  This file must exist on your local system and will be uploaded to the\n  remote machine. This option is exclusive with `playbook_files`.\n\n- `playbook_files` (array of strings) - The playbook files to be executed by\n  ansible. These files must exist on your local system. If the files don't\n  exist in the `playbook_dir` or you don't set `playbook_dir` they will be\n  uploaded to the remote machine. This option is exclusive with\n  `playbook_file`.\n\nOptional:\n\n<!-- Code generated from the comments of the Config struct in provisioner/ansible-local/provisioner.go; DO NOT EDIT MANUALLY -->\n\n- `command` (string) - The command to invoke ansible. Defaults to\n   `ansible-playbook`. If you would like to provide a more complex command,\n   for example, something that sets up a virtual environment before calling\n   ansible, take a look at the ansible wrapper guide below for inspiration.\n   Please note that Packer expects Command to be a path to an executable.\n   Arbitrary bash scripting will not work and needs to go inside an\n   executable script.\n\n- `extra_arguments` ([]string) - Extra arguments to pass to Ansible.\n  These arguments _will not_ be passed through a shell and arguments should\n  not be quoted. Usage example:\n  \n  ```json\n     \"extra_arguments\": [ \"--extra-vars\", \"Region={{user `Region`}} Stage={{user `Stage`}}\" ]\n  ```\n  \n  In certain scenarios where you want to pass ansible command line arguments\n  that include parameter and value (for example `--vault-password-file pwfile`),\n  from ansible documentation this is correct format but that is NOT accepted here.\n  Instead you need to do it like `--vault-password-file=pwfile`.\n  \n  If you are running a Windows build on AWS, Azure, Google Compute, or OpenStack\n  and would like to access the auto-generated password that Packer uses to\n  connect to a Windows instance via WinRM, you can use the template variable\n  \n  ```build.Password``` in HCL templates or ```{{ build `Password`}}``` in\n  legacy JSON templates. For example:\n  \n  in JSON templates:\n  \n  ```json\n  \"extra_arguments\": [\n     \"--extra-vars\", \"winrm_password={{ build `Password`}}\"\n  ]\n  ```\n  \n  in HCL templates:\n  ```hcl\n  extra_arguments = [\n     \"--extra-vars\", \"winrm_password=${build.Password}\"\n  ]\n  ```\n\n- `group_vars` (string) - A path to the directory containing ansible group\n  variables on your local system to be copied to the remote machine. By\n  default, this is empty.\n\n- `host_vars` (string) - A path to the directory containing ansible host variables on your local\n  system to be copied to the remote machine. By default, this is empty.\n\n- `playbook_dir` (string) - A path to the complete ansible directory structure on your local system\n  to be copied to the remote machine as the `staging_directory` before all\n  other files and directories.\n\n- `playbook_file` (string) - The playbook file to be executed by ansible. This file must exist on your\n  local system and will be uploaded to the remote machine. This option is\n  exclusive with `playbook_files`.\n\n- `playbook_files` ([]string) - The playbook files to be executed by ansible. These files must exist on\n  your local system. If the files don't exist in the `playbook_dir` or you\n  don't set `playbook_dir` they will be uploaded to the remote machine. This\n  option is exclusive with `playbook_file`.\n\n- `playbook_paths` ([]string) - An array of directories of playbook files on your local system. These\n  will be uploaded to the remote machine under `staging_directory`/playbooks.\n  By default, this is empty.\n\n- `role_paths` ([]string) - An array of paths to role directories on your local system. These will be\n  uploaded to the remote machine under `staging_directory`/roles. By default,\n  this is empty.\n\n- `collection_paths` ([]string) - An array of local paths of collections to upload.\n\n- `staging_directory` (string) - The directory where files will be uploaded. Packer requires write\n  permissions in this directory.\n\n- `clean_staging_directory` (bool) - If set to `true`, the content of the `staging_directory` will be removed after\n  executing ansible. By default this is set to `false`.\n\n- `inventory_file` (string) - The inventory file to be used by ansible. This\n  file must exist on your local system and will be uploaded to the remote\n  machine.\n  \n  When using an inventory file, it's also required to `--limit` the hosts to the\n  specified host you're building. The `--limit` argument can be provided in the\n  `extra_arguments` option.\n  \n  An example inventory file may look like:\n  \n  ```text\n  [chi-dbservers]\n  db-01 ansible_connection=local\n  db-02 ansible_connection=local\n  \n  [chi-appservers]\n  app-01 ansible_connection=local\n  app-02 ansible_connection=local\n  \n  [chi:children]\n  chi-dbservers\n  chi-appservers\n  \n  [dbservers:children]\n  chi-dbservers\n  \n  [appservers:children]\n  chi-appservers\n  ```\n\n- `inventory_groups` ([]string) - `inventory_groups` (string) - A comma-separated list of groups to which\n  packer will assign the host `127.0.0.1`. A value of `my_group_1,my_group_2`\n  will generate an Ansible inventory like:\n  \n  ```text\n  [my_group_1]\n  127.0.0.1\n  [my_group_2]\n  127.0.0.1\n  ```\n\n- `galaxy_file` (string) - A requirements file which provides a way to\n   install roles or collections with the [ansible-galaxy\n   cli](https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#the-ansible-galaxy-command-line-tool)\n   on the local machine before executing `ansible-playbook`. By default, this is empty.\n\n- `galaxy_command` (string) - The command to invoke ansible-galaxy. By default, this is\n  `ansible-galaxy`.\n\n- `galaxy_force_install` (bool) - Force overwriting an existing role.\n   Adds `--force` option to `ansible-galaxy` command. By default, this is\n   `false`.\n\n- `galaxy_roles_path` (string) - The path to the directory on the remote system in which to\n    install the roles. Adds `--roles-path /path/to/your/roles` to\n    `ansible-galaxy` command. By default, this will install to a 'galaxy_roles' subfolder in the\n    staging/roles directory.\n\n- `galaxy_collections_path` (string) - The path to the directory on the remote system in which to\n    install the collections. Adds `--collections-path /path/to/your/collections` to\n    `ansible-galaxy` command. By default, this will install to a 'galaxy_collections' subfolder in the\n    staging/collections directory.\n\n<!-- End of code generated from the comments of the Config struct in provisioner/ansible-local/provisioner.go; -->\n\n\nParameters common to all provisioners:\n\n- `pause_before` (duration) - Sleep for duration before execution.\n\n- `max_retries` (int) - Max times the provisioner will retry in case of failure. Defaults to zero (0). Zero means an error will not be retried.\n\n- `only` (array of string) - Only run the provisioner for listed builder(s)\n  by name.\n\n- `override` (object) - Override the builder with different settings for a\n  specific builder, eg :\n\n  In HCL2:\n\n  ```hcl\n  source \"null\" \"example1\" {\n    communicator = \"none\"\n  }\n\n  source \"null\" \"example2\" {\n    communicator = \"none\"\n  }\n\n  build {\n    sources = [\"source.null.example1\", \"source.null.example2\"]\n    provisioner \"shell-local\" {\n      inline = [\"echo not overridden\"]\n      override = {\n        example1 = {\n          inline = [\"echo yes overridden\"]\n        }\n      }\n    }\n  }\n  ```\n\n  In JSON:\n\n  ```json\n  {\n    \"builders\": [\n      {\n        \"type\": \"null\",\n        \"name\": \"example1\",\n        \"communicator\": \"none\"\n      },\n      {\n        \"type\": \"null\",\n        \"name\": \"example2\",\n        \"communicator\": \"none\"\n      }\n    ],\n    \"provisioners\": [\n      {\n        \"type\": \"shell-local\",\n        \"inline\": [\"echo not overridden\"],\n        \"override\": {\n          \"example1\": {\n            \"inline\": [\"echo yes overridden\"]\n          }\n        }\n      }\n    ]\n  }\n  ```\n\n- `timeout` (duration) - If the provisioner takes more than for example\n  `1h10m1s` or `10m` to finish, the provisioner will timeout and fail.\n\n\n## Default Extra Variables\n\nIn addition to being able to specify extra arguments using the\n`extra_arguments` configuration, the provisioner automatically defines certain\ncommonly useful Ansible variables:\n\n- `packer_build_name` is set to the name of the build that Packer is running.\n  This is most useful when Packer is making multiple builds and you want to\n  distinguish them slightly when using a common playbook.\n\n- `packer_builder_type` is the type of the builder that was used to create\n  the machine that the script is running on. This is useful if you want to\n  run only certain parts of the playbook on systems built with certain\n  builders.\n\n- `packer_http_addr` If using a builder that provides an HTTP server for file\n  transfer (such as `hyperv`, `parallels`, `qemu`, `virtualbox`, and `vmware`), this\n  will be set to the address. You can use this address in your provisioner to\n  download large files over HTTP. This may be useful if you're experiencing\n  slower speeds using the default file provisioner. A file provisioner using\n  the `winrm` communicator may experience these types of difficulties.\n","created_at":"2023-11-27T18:58:19.334Z","updated_at":"2023-11-27T18:58:19.334Z","name":"Ansible Local","slug":"ansible-local","component":{"id":"418417de-2c71-46a1-8dbc-7e9ae777a22e","slug":"provisioner","name":"Provisioner","plural_name":"Provisioners","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.054Z","updated_at":"2022-11-09T22:56:31.054Z"},"variable_groups":[]},"processedVariablesMarkdown":{},"anchorLinks":[{"id":"basic-example","level":2,"title":"Basic Example"},{"id":"configuration-reference","level":2,"title":"Configuration Reference"},{"id":"default-extra-variables","level":2,"title":"Default Extra Variables"}],"serializedREADME":{"compiledSource":"var c=Object.defineProperty,N=Object.defineProperties;var d=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var i=(a,n,s)=>n in a?c(a,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[n]=s,e=(a,n)=>{for(var s in n||(n={}))o.call(n,s)&&i(a,s,n[s]);if(p)for(var s of p(n))l.call(n,s)&&i(a,s,n[s]);return a},r=(a,n)=>N(a,d(n));var m=(a,n)=>{var s={};for(var t in a)o.call(a,t)&&n.indexOf(t)<0&&(s[t]=a[t]);if(a!=null&&p)for(var t of p(a))n.indexOf(t)<0&&l.call(a,t)&&(s[t]=a[t]);return s};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(s){var t=s,{components:a}=t,n=m(t,[\"components\"]);return mdx(MDXLayout,r(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Type: \",mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-local\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-local\"),\" Packer provisioner will execute \",mdx(\"inlineCode\",{parentName:\"p\"},\"ansible\"),` in Ansible's \"local\"\nmode on the remote/guest VM using Playbook and Role files that exist on the\nguest VM. This means Ansible must be installed on the remote/guest VM.\nPlaybooks and Roles can be uploaded from your build machine (the one running\nPacker) to the vm. Ansible is then run on the guest machine in `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.ansible.com/ansible/latest/playbooks_delegation.html#local-playbooks\"}),`local\nmode`),`\nvia the `,mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-playbook\"),\" command.\"),mdx(\"div\",e({},{className:\"alert alert-info g-type-body\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),\"\",mdx(\"strong\",{parentName:\"p\"},\"Note:\"),\" Ansible will \",mdx(\"em\",{parentName:\"p\"},\"not\"),` be installed automatically by this\nprovisioner. This provisioner expects that Ansible is already installed on the\nguest/remote machine. It is common practice to use the `,mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/provisioner/shell\"}),`shell\nprovisioner`),` before the Ansible provisioner to\ndo this.`)),mdx(\"h2\",e({},{id:\"user-content-basic-example\",\"data-text-content\":\"Basic Example\",className:\"g-type-display-3\"}),\"Basic Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The example below is fully functional.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"HCL2\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"variable\",mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),' \"topping\" ')),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" string\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"default\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"mushroom\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"docker\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"image\"),\"       \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"williamyeh/ansible:ubuntu14.04\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"export_path\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer_example\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"run_command\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"-d\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"-i\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"-t\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--entrypoint=/bin/bash\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"{{.Image}}\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"source.docker.example\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"provisioner\",mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),' \"ansible-local\" ')),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"playbook_file\"),\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"./playbook.yml\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"extra_arguments\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--extra-vars\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"\\\\\"pizza_toppings=',mdx(\"span\",e({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"$\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token keyword\"}),\"var\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),\"topping\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),'\\\\\"\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"JSON\")),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"builders\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"docker\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"image\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"williamyeh/ansible:ubuntu14.04\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"export_path\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer_example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"run_command\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"-d\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"-i\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"-t\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--entrypoint=/bin/bash\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"{{.Image}}\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"variables\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"topping\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"mushroom\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"provisioners\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ansible-local\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"playbook_file\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"./playbook.yml\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"extra_arguments\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--extra-vars\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"\\\\\"pizza_toppings={{ user `topping`}}\\\\\"\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"where ./playbook.yml contains\"),mdx(\"pre\",null,mdx(\"code\",{parentName:\"pre\"},\"---\",`\n`,\"- name: hello world\",`\n`,\"  hosts: 127.0.0.1\",`\n`,\"  connection: local\",`\n`,`\n`,\"  tasks:\",`\n`,\"    - command: echo {{ pizza_toppings }}\",`\n`,'    - debug: msg=\"{{ pizza_toppings }}\"',`\n`,`\n`)),mdx(\"h2\",e({},{id:\"user-content-configuration-reference\",\"data-text-content\":\"Configuration Reference\",className:\"g-type-display-3\"}),\"Configuration Reference\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The reference of available configuration options is listed below.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Required:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_file\"),` (string) - The playbook file to be executed by ansible.\nThis file must exist on your local system and will be uploaded to the\nremote machine. This option is exclusive with `,mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_files\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_files\"),` (array of strings) - The playbook files to be executed by\nansible. These files must exist on your local system. If the files don't\nexist in the `,mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_dir\"),\" or you don't set \",mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_dir\"),` they will be\nuploaded to the remote machine. This option is exclusive with\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_file\"),\".\"))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Optional:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"command\"),` (string) - The command to invoke ansible. Defaults to\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-playbook\"),`. If you would like to provide a more complex command,\nfor example, something that sets up a virtual environment before calling\nansible, take a look at the ansible wrapper guide below for inspiration.\nPlease note that Packer expects Command to be a path to an executable.\nArbitrary bash scripting will not work and needs to go inside an\nexecutable script.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"extra_arguments\"),` ([]string) - Extra arguments to pass to Ansible.\nThese arguments `,mdx(\"em\",{parentName:\"p\"},\"will not\"),` be passed through a shell and arguments should\nnot be quoted. Usage example:`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"extra_arguments\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--extra-vars\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"Region={{user `Region`}} Stage={{user `Stage`}}\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`In certain scenarios where you want to pass ansible command line arguments\nthat include parameter and value (for example `,mdx(\"inlineCode\",{parentName:\"p\"},\"--vault-password-file pwfile\"),`),\nfrom ansible documentation this is correct format but that is NOT accepted here.\nInstead you need to do it like `,mdx(\"inlineCode\",{parentName:\"p\"},\"--vault-password-file=pwfile\"),\".\"),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`If you are running a Windows build on AWS, Azure, Google Compute, or OpenStack\nand would like to access the auto-generated password that Packer uses to\nconnect to a Windows instance via WinRM, you can use the template variable`),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"build.Password\"),\" in HCL templates or \",mdx(\"inlineCode\",{parentName:\"p\"},\"{{ build `Password`}}\"),` in\nlegacy JSON templates. For example:`),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"in JSON templates:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"extra_arguments\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--extra-vars\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"winrm_password={{ build `Password`}}\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"in HCL templates:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"extra_arguments\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--extra-vars\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"winrm_password=',mdx(\"span\",e({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"$\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),\"build\",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),\"Password\",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),'\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"group_vars\"),` (string) - A path to the directory containing ansible group\nvariables on your local system to be copied to the remote machine. By\ndefault, this is empty.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"host_vars\"),` (string) - A path to the directory containing ansible host variables on your local\nsystem to be copied to the remote machine. By default, this is empty.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_dir\"),` (string) - A path to the complete ansible directory structure on your local system\nto be copied to the remote machine as the `,mdx(\"inlineCode\",{parentName:\"p\"},\"staging_directory\"),` before all\nother files and directories.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_file\"),` (string) - The playbook file to be executed by ansible. This file must exist on your\nlocal system and will be uploaded to the remote machine. This option is\nexclusive with `,mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_files\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_files\"),` ([]string) - The playbook files to be executed by ansible. These files must exist on\nyour local system. If the files don't exist in the `,mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_dir\"),` or you\ndon't set `,mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_dir\"),` they will be uploaded to the remote machine. This\noption is exclusive with `,mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_file\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"playbook_paths\"),` ([]string) - An array of directories of playbook files on your local system. These\nwill be uploaded to the remote machine under `,mdx(\"inlineCode\",{parentName:\"p\"},\"staging_directory\"),`/playbooks.\nBy default, this is empty.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"role_paths\"),` ([]string) - An array of paths to role directories on your local system. These will be\nuploaded to the remote machine under `,mdx(\"inlineCode\",{parentName:\"p\"},\"staging_directory\"),`/roles. By default,\nthis is empty.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"collection_paths\"),\" ([]string) - An array of local paths of collections to upload.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"staging_directory\"),` (string) - The directory where files will be uploaded. Packer requires write\npermissions in this directory.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"clean_staging_directory\"),\" (bool) - If set to \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),\", the content of the \",mdx(\"inlineCode\",{parentName:\"p\"},\"staging_directory\"),` will be removed after\nexecuting ansible. By default this is set to `,mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"inventory_file\"),` (string) - The inventory file to be used by ansible. This\nfile must exist on your local system and will be uploaded to the remote\nmachine.`),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"When using an inventory file, it's also required to \",mdx(\"inlineCode\",{parentName:\"p\"},\"--limit\"),` the hosts to the\nspecified host you're building. The `,mdx(\"inlineCode\",{parentName:\"p\"},\"--limit\"),` argument can be provided in the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"extra_arguments\"),\" option.\"),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"An example inventory file may look like:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"[chi-dbservers]\",`\n`,\"db-01 ansible_connection=local\",`\n`,\"db-02 ansible_connection=local\",`\n`,`\n`,\"[chi-appservers]\",`\n`,\"app-01 ansible_connection=local\",`\n`,\"app-02 ansible_connection=local\",`\n`,`\n`,\"[chi:children]\",`\n`,\"chi-dbservers\",`\n`,\"chi-appservers\",`\n`,`\n`,\"[dbservers:children]\",`\n`,\"chi-dbservers\",`\n`,`\n`,\"[appservers:children]\",`\n`,\"chi-appservers\",`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"inventory_groups\"),\" ([]string) - \",mdx(\"inlineCode\",{parentName:\"p\"},\"inventory_groups\"),` (string) - A comma-separated list of groups to which\npacker will assign the host `,mdx(\"inlineCode\",{parentName:\"p\"},\"127.0.0.1\"),\". A value of \",mdx(\"inlineCode\",{parentName:\"p\"},\"my_group_1,my_group_2\"),`\nwill generate an Ansible inventory like:`),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-text\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-text\"}),\"[my_group_1]\",`\n`,\"127.0.0.1\",`\n`,\"[my_group_2]\",`\n`,\"127.0.0.1\",`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"galaxy_file\"),` (string) - A requirements file which provides a way to\ninstall roles or collections with the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#the-ansible-galaxy-command-line-tool\"}),`ansible-galaxy\ncli`),`\non the local machine before executing `,mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-playbook\"),\". By default, this is empty.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"galaxy_command\"),` (string) - The command to invoke ansible-galaxy. By default, this is\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-galaxy\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"galaxy_force_install\"),` (bool) - Force overwriting an existing role.\nAdds `,mdx(\"inlineCode\",{parentName:\"p\"},\"--force\"),\" option to \",mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-galaxy\"),` command. By default, this is\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"galaxy_roles_path\"),` (string) - The path to the directory on the remote system in which to\ninstall the roles. Adds `,mdx(\"inlineCode\",{parentName:\"p\"},\"--roles-path /path/to/your/roles\"),` to\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-galaxy\"),` command. By default, this will install to a 'galaxy_roles' subfolder in the\nstaging/roles directory.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"galaxy_collections_path\"),` (string) - The path to the directory on the remote system in which to\ninstall the collections. Adds `,mdx(\"inlineCode\",{parentName:\"p\"},\"--collections-path /path/to/your/collections\"),` to\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"ansible-galaxy\"),` command. By default, this will install to a 'galaxy_collections' subfolder in the\nstaging/collections directory.`))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Parameters common to all provisioners:\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"pause_before\"),\" (duration) - Sleep for duration before execution.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"max_retries\"),\" (int) - Max times the provisioner will retry in case of failure. Defaults to zero (0). Zero means an error will not be retried.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"only\"),` (array of string) - Only run the provisioner for listed builder(s)\nby name.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"override\"),` (object) - Override the builder with different settings for a\nspecific builder, eg :`),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"In HCL2:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"null\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example1\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"communicator\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"none\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"null\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example2\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"communicator\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"none\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"source.null.example1\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"source.null.example2\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"provisioner\",mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),' \"shell-local\" ')),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"inline\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"echo not overridden\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"override\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"example1\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"inline\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"echo yes overridden\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"In JSON:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"builders\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"null\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example1\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"communicator\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"none\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"null\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example2\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"communicator\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"none\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"provisioners\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"shell-local\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"inline\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"echo not overridden\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"override\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"example1\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"          \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"inline\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"echo yes overridden\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"timeout\"),` (duration) - If the provisioner takes more than for example\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"1h10m1s\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"10m\"),\" to finish, the provisioner will timeout and fail.\"))),mdx(\"h2\",e({},{id:\"user-content-default-extra-variables\",\"data-text-content\":\"Default Extra Variables\",className:\"g-type-display-3\"}),\"Default Extra Variables\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`In addition to being able to specify extra arguments using the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"extra_arguments\"),` configuration, the provisioner automatically defines certain\ncommonly useful Ansible variables:`),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"packer_build_name\"),` is set to the name of the build that Packer is running.\nThis is most useful when Packer is making multiple builds and you want to\ndistinguish them slightly when using a common playbook.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"packer_builder_type\"),` is the type of the builder that was used to create\nthe machine that the script is running on. This is useful if you want to\nrun only certain parts of the playbook on systems built with certain\nbuilders.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"packer_http_addr\"),` If using a builder that provides an HTTP server for file\ntransfer (such as `,mdx(\"inlineCode\",{parentName:\"p\"},\"hyperv\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"parallels\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"qemu\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"virtualbox\"),\", and \",mdx(\"inlineCode\",{parentName:\"p\"},\"vmware\"),`), this\nwill be set to the address. You can use this address in your provisioner to\ndownload large files over HTTP. This may be useful if you're experiencing\nslower speeds using the default file provisioner. A file provisioner using\nthe `,mdx(\"inlineCode\",{parentName:\"p\"},\"winrm\"),\" communicator may experience these types of difficulties.\"))))}MDXContent.isMDXComponent=!0;\n","scope":{}},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Ansible","url":"/packer/integrations/hashicorp/ansible","isCurrentPage":false},{"title":"v1.1.1","url":"/packer/integrations/hashicorp/ansible/v1.1.1","isCurrentPage":false},{"title":"Components"},{"title":"Provisioner"},{"title":"Ansible Local","url":"/packer/integrations/hashicorp/ansible/latest/components/provisioner/ansible-local","isCurrentPage":true}]},"__N_SSG":true}