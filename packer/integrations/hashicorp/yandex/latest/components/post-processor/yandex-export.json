{"pageProps":{"metadata":{"title":"Yandex Post-Processor | Integrations"},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."}},"integration":{"id":"21f53859-c35f-4056-a1cf-59961e56ee75","slug":"yandex","name":"Yandex","description":"The Yandex plugin is able to manage images for use with the Yandex Compute Cloud.","license_type":null,"license_url":null,"external_only":false,"external_url":null,"tier":"community","repo_url":"https://github.com/hashicorp/packer-plugin-yandex","subdirectory":"/.web-docs","created_at":"2023-06-15T19:03:12.522Z","updated_at":"2023-08-08T17:01:22.657Z","hide_versions":false,"organization":{"id":"a4a0551a-1451-4d89-9f56-8031c8350c77","slug":"hashicorp","created_at":"2022-11-09T22:56:32.391Z","updated_at":"2022-11-09T22:56:32.391Z"},"product":{"id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","slug":"packer","name":"Packer","created_at":"2022-11-09T22:56:29.896Z","updated_at":"2022-11-09T22:56:29.896Z"},"versions":["1.1.3","1.1.2","1.0.2"],"components":[{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors"},{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors"},{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders"}],"flags":[],"integration_type":null},"activeRelease":{"id":"aed314b7-6811-40fd-baf6-20fc9f5e6b00","integration_id":"21f53859-c35f-4056-a1cf-59961e56ee75","version":"1.1.3","readme":"The Yandex plugin is able to manage images for use with the Yandex Compute Cloud.\n\n### Installation\nTo install this plugin add this code into your Packer configuration and run [packer init](/packer/docs/commands/init)\n\n```hcl\npacker {\n  required_plugins {\n    yandex = {\n      version = \"~> 1\"\n      source  = \"github.com/hashicorp/yandex\"\n    }\n  }\n}\n```\n\nAlternatively, you can use `packer plugins install` to manage installation of this plugin.\n\n```sh\npacker plugins install github.com/hashicorp/yandex\n```\n\n### Components\n#### Builders\n\n- [yandex](/packer/integrations/hashicorp/yandex/latest/components/builder/yandex) - The builder is able to create images for use with Yandex Compute Cloud based on existing images.\n\n### Post-processors\n\n- [yandex-export](/packer/integrations/hashicorp/yandex/latest/components/post-processor/yandex-export) - The export post-processor exports the resultant image from a Yandex \n  build as a qcow2 file to Yandex Object Storage.\n- [yandex-import](/packer/integrations/hashicorp/yandex/latest/components/post-processor/yandex-import) - The Import post-processor create new Compute Image from a qcow2 file.\n\n","created_at":"2023-11-28T17:39:17.875Z","updated_at":"2023-11-28T17:39:17.875Z","components":[{"id":"0f62e1e1-18d7-4afc-a3d7-7d22e25184c6","integration_release_id":"aed314b7-6811-40fd-baf6-20fc9f5e6b00","component_id":"36076511-3ced-4faf-addf-101fce0405ff","readme":"Type: `yandex`\nArtifact BuilderId: `packer.yandex`\n\nThe `yandex` Packer builder is able to create\n[images](https://cloud.yandex.com/docs/compute/concepts/images) for use with\n[Yandex Compute Cloud](https://cloud.yandex.com/docs/compute/)\nbased on existing images.\n\n## Authentication\n\nBuilder can authenticate with Yandex.Cloud using one of the following methods:\n\n- OAuth token\n- IAM token\n- File with Service Account Key\n- Service Account assigned to Compute Instance\n\n### Authentication Using Token\n\nTo authenticate with an OAuth token or IAM token only `token` config key is needed.\nOr use the `YC_TOKEN` environment variable with proper value.\nToken you could get [here](https://oauth.yandex.ru/authorize?response_type=token&client_id=1a6990aa636648e9b2ef855fa7bec2fb).\nCheck [documentation](https://cloud.yandex.ru/docs/iam/operations/iam-token/create) about how to create IAM token.\n\n### Authentication Using Service Account Key File\n\nTo authenticate with a service account credential, only `service_account_key_file` is needed.\nOr use the `YC_SERVICE_ACCOUNT_KEY_FILE` environment variable.\nThe parameter expects a value path to the service account file in json format. Check [documentation](https://cloud.yandex.com/docs/cli/operations/authentication/service-account#auth-as-sa)\nabout how to create SA and its key.\n\n### Authentication Using a Compute Instance Service Account\n\nAuthentication with a Service Account on an instance happens when neither the `token` nor the `service_account_key_file` parameter is set.\nTo get more information about this kind of authentication check [documentaion](https://cloud.yandex.com/docs/compute/operations/vm-connect/auth-inside-vm).\n\n-> **NB** Do not forget to assigne proper roles to Service Account, if you use this type of auth.\n\n## Basic Example\n\n**JSON**\n\n```json\n{\n  \"type\": \"yandex\",\n  \"token\": \"YOUR OAUTH TOKEN\",\n  \"folder_id\": \"YOUR FOLDER ID\",\n  \"source_image_family\": \"ubuntu-1804-lts\",\n  \"ssh_username\": \"ubuntu\",\n  \"use_ipv4_nat\": \"true\"\n}\n```\n\n\n**HCL2**\n\n```\nsource \"yandex\" \"autogenerated_1\" {\n  folder_id           = \"YOUR FOLDER ID\"\n  source_image_family = \"ubuntu-1804-lts\"\n  ssh_username        = \"ubuntu\"\n  token               = \"YOUR OAUTH TOKEN\"\n  use_ipv4_nat        = \"true\"\n}\n\nbuild {\n  sources = [\"source.yandex.autogenerated_1\"]\n\n}\n```\n\n\n## Configuration Reference\n\nConfiguration options are organized below into two categories: required and\noptional. Within each category, the available options are alphabetized and\ndescribed.\n\nIn addition to the options listed here, a [communicator](/packer/docs/templates/legacy_json_templates/communicator)\ncan be configured for this builder. In addition to the options defined there, a private key file\ncan also be supplied to override the typical auto-generated key:\n\n- `ssh_private_key_file` (string) - Path to a PEM encoded private key file to use to authenticate with SSH.\n  The `~` can be used in path and will be expanded to the home directory\n  of current user.\n\n\n### Required:\n\n#### Access\n\n<!-- Code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; DO NOT EDIT MANUALLY -->\n\n- `token` (string) - [OAuth token](https://cloud.yandex.com/docs/iam/concepts/authorization/oauth-token)\n  or [IAM token](https://cloud.yandex.com/docs/iam/concepts/authorization/iam-token)\n  to use to authenticate to Yandex.Cloud. Alternatively you may set\n  value by environment variable `YC_TOKEN`.\n\n<!-- End of code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; -->\n\n\n#### Builder\n\n<!-- Code generated from the comments of the SourceImageConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `source_image_family` (string) - The source image family to create the new image\n  from. You can also specify source_image_id instead. Just one of a source_image_id or\n  source_image_family must be specified. Example: `ubuntu-2204-lts`.\n\n<!-- End of code generated from the comments of the SourceImageConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Common\n\n<!-- Code generated from the comments of the CloudConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `folder_id` (string) - The folder ID that will be used to launch instances and store images.\n  Alternatively you may set value by environment variable `YC_FOLDER_ID`.\n  To use a different folder for looking up the source image or saving the target image to\n  check options 'source_image_folder_id' and 'target_image_folder_id'.\n\n<!-- End of code generated from the comments of the CloudConfig struct in builder/yandex/common_config.go; -->\n\n\n### Optional:\n\n#### Access\n\n<!-- Code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; DO NOT EDIT MANUALLY -->\n\n- `endpoint` (string) - Non standard API endpoint. Default is `api.cloud.yandex.net:443`.\n\n- `service_account_key_file` (string) - Contains either a path to or the contents of the Service Account file in JSON format.\n  This can also be specified using environment variable `YC_SERVICE_ACCOUNT_KEY_FILE`.\n  You can read how to create service account key file [here](https://cloud.yandex.com/docs/iam/operations/iam-token/create-for-sa#keys-create).\n\n- `max_retries` (int) - The maximum number of times an API request is being executed.\n\n<!-- End of code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; -->\n\n\n#### Builder\n\n<!-- Code generated from the comments of the Config struct in builder/yandex/config.go; DO NOT EDIT MANUALLY -->\n\n- `service_account_id` (string) - Service account identifier to assign to instance.\n\n- `target_image_folder_id` (string) - The ID of the folder to save built image in.\n  This defaults to value of 'folder_id'.\n\n<!-- End of code generated from the comments of the Config struct in builder/yandex/config.go; -->\n\n\n<!-- Code generated from the comments of the SourceImageConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `source_image_folder_id` (string) - The ID of the folder containing the source image.\n\n- `source_image_id` (string) - The source image ID to use to create the new image from.\n\n- `source_image_name` (string) - The source image name to use to create the new image\n  from. Name will be looked up in `source_image_folder_id`.\n\n<!-- End of code generated from the comments of the SourceImageConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Common\n\n<!-- Code generated from the comments of the CommonConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `serial_log_file` (string) - File path to save serial port output of the launched instance.\n\n- `state_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for instance state changes.\n  Defaults to `5m`.\n\n<!-- End of code generated from the comments of the CommonConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Instance\n\n<!-- Code generated from the comments of the InstanceConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `instance_cores` (int) - The number of cores available to the instance.\n\n- `instance_core_fraction` (int) - The vCPU performance level (core fraction) of the instance\n\n- `instance_gpus` (int) - The number of GPU available to the instance.\n\n- `instance_mem_gb` (int) - The amount of memory available to the instance, specified in gigabytes.\n\n- `instance_name` (string) - The name assigned to the instance.\n\n- `platform_id` (string) - Identifier of the hardware platform configuration for the instance. This defaults to `standard-v2`.\n\n- `labels` (map[string]string) - Key/value pair labels to apply to the launched instance.\n\n- `metadata` (map[string]string) - Metadata applied to the launched instance.\n\n- `metadata_from_file` (map[string]string) - Metadata applied to the launched instance.\n  The values in this map are the paths to the content files for the corresponding metadata keys.\n\n- `preemptible` (bool) - Launch a preemptible instance. This defaults to `false`.\n\n<!-- End of code generated from the comments of the InstanceConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Disk\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_name` (string) - The name of the disk, if unset the instance name\n  will be used.\n\n- `disk_size_gb` (int) - The size of the disk in GB. This defaults to 10/100GB.\n\n- `disk_type` (string) - Specify disk type for the launched instance. Defaults to `network-ssd`.\n\n- `disk_labels` (map[string]string) - Key/value pair labels to apply to the disk.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Image\n\n<!-- Code generated from the comments of the ImageConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `image_name` (string) - The name of the resulting image, which contains 1-63 characters and only\n  supports lowercase English characters, numbers and hyphen. Defaults to\n  `packer-{{timestamp}}`.\n\n- `image_description` (string) - The description of the image.\n\n- `image_family` (string) - The family name of the image.\n\n- `image_labels` (map[string]string) - Key/value pair labels to apply to the image.\n\n- `image_min_disk_size_gb` (int) - Minimum size of the disk that will be created from built image, specified in gigabytes.\n  Should be more or equal to `disk_size_gb`.\n\n- `image_product_ids` ([]string) - License IDs that indicate which licenses are attached to resulting image.\n\n- `image_pooled` (bool) - When true, an image pool will be created for fast creation disks from the image.\n\n- `skip_create_image` (bool) - Skip creating the image. Useful for setting to `true` during a build test stage. Defaults to `false`.\n\n<!-- End of code generated from the comments of the ImageConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Network\n\n<!-- Code generated from the comments of the NetworkConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `subnet_id` (string) - The Yandex VPC subnet id to use for\n  the launched instance. Note, the zone of the subnet must match the\n  zone in which the VM is launched.\n\n- `zone` (string) - The name of the zone to launch the instance.  This defaults to `ru-central1-a`.\n\n- `security_group_ids` ([]string) - Security group ids for network interface of the instance.\n\n- `use_ipv4_nat` (bool) - If set to true, then launched instance will have external internet\n  access.\n\n- `use_ipv6` (bool) - Set to true to enable IPv6 for the instance being\n  created. This defaults to `false`, or not enabled.\n  \n  -> **Note**: Usage of IPv6 will be available in the future.\n\n- `use_internal_ip` (bool) - If true, use the instance's internal IP address\n  instead of its external IP during building.\n\n<!-- End of code generated from the comments of the NetworkConfig struct in builder/yandex/common_config.go; -->\n\n\n## Build template data\n\nIn configuration directives the following variables are available:\n\n- `ImageID` - ID of the built image.\n- `ImageName` - Name of the built image.\n- `ImageFamily` - Family of the built image.\n- `ImageDescription` - Description of the built image.\n- `ImageFolderID` - Folder ID where the built image is stored.\n- `SourceImageID` - The source image ID (for example `fd8fjtn3mj2kfe7h6f0r`) used to build the image.\n- `SourceImageName` - The source image name (for example `ubuntu-1604-lts-1579200746`) used to build the image.\n- `SourceImageDescription` - The source image description (for example `ubuntu 16.04 lts`).\n- `SourceImageFamily` - The source image family (for example `ubuntu-1604-lts`).\n- `SourceImageFolderID` - The folder ID where source image located (for example `standard-images`).\n\n## Build Shared Information Variables\n\nThis builder generates data that are shared with provisioner and post-processor via build function of\n[template engine](/packer/docs/templates/legacy_json_templates/engine) for JSON and [contextual variables](/packer/docs/templates/hcl_templates/contextual-variables)\nfor HCL2.\n\nThe generated variables available for this builder see above\n\nUsage example:\n\n**JSON**\n\n```json\n\"post-processors\": [\n    {\n      \"type\": \"manifest\",\n      \"output\": \"manifest.json\",\n      \"strip_path\": true,\n      \"custom_data\": {\n        \"source_image_id\": \"{{ build `SourceImageID` }}\"\n      }\n    }\n]\n```\n\n**HCL2**\n\n```hcl\npost-processor \"manifest\" {\n    output = \"manifest.json\"\n    strip_path = true\n    custom_data = {\n        source_image_id = \"${build.SourceImageID}\"\n    }\n}\n```\n","created_at":"2023-11-28T17:39:18.183Z","updated_at":"2023-11-28T17:39:18.183Z","name":"Yandex Compute","slug":"yandex","component":{"id":"36076511-3ced-4faf-addf-101fce0405ff","slug":"builder","name":"Builder","plural_name":"Builders","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:30.937Z","updated_at":"2022-11-09T22:56:30.937Z"},"variable_groups":[]},{"id":"f62db198-1121-433c-ac64-f23fe5020a3b","integration_release_id":"aed314b7-6811-40fd-baf6-20fc9f5e6b00","component_id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","readme":"Type: `yandex-export`\nArtifact BuilderId: `packer.post-processor.yandex-export`\n\nThe Yandex.Cloud Compute Image Exporter post-processor exports the resultant image\nfrom a yandex build as a qcow2 file to Yandex Object Storage.\n\nThe exporter uses the same Yandex.Cloud folder and\nauthentication credentials as the yandex build that produced the image.\nA temporary VM is started in the folder using these credentials. The VM\nmounts the built image as a secondary disk, then dumps the image in qcow2 format.\nThe VM then uploads the file to the provided Yandex Object Storage `paths` using the same\ncredentials.\n\nAs such, assigned Service Account must have write permissions to the Yandex Object Storage\n`paths`. A new temporary static access keys from assigned Service Account used to upload\nimage.\n\nAlso, you should configure [ssh communicator](/packer/docs/communicators/ssh). Default `ssh_username` to `ubuntu`.\n\n## Configuration\n\n### Required:\n\n#### Access\n\n<!-- Code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; DO NOT EDIT MANUALLY -->\n\n- `token` (string) - [OAuth token](https://cloud.yandex.com/docs/iam/concepts/authorization/oauth-token)\n  or [IAM token](https://cloud.yandex.com/docs/iam/concepts/authorization/iam-token)\n  to use to authenticate to Yandex.Cloud. Alternatively you may set\n  value by environment variable `YC_TOKEN`.\n\n<!-- End of code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; -->\n\n\n#### Export\n\n<!-- Code generated from the comments of the Config struct in post-processor/yandex-export/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `paths` ([]string) - List of paths to Yandex Object Storage where exported image will be uploaded.\n  Please be aware that use of space char inside path not supported.\n  Also this param support [build](/packer/docs/templates/legacy_json_templates/engine) template function.\n  Check available template data for [Yandex](/packer/integrations/hashicorp/yandex#build-template-data) builder.\n  Paths to Yandex Object Storage where exported image will be uploaded.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/yandex-export/post-processor.go; -->\n\n\n#### Common\n\n<!-- Code generated from the comments of the CloudConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `folder_id` (string) - The folder ID that will be used to launch instances and store images.\n  Alternatively you may set value by environment variable `YC_FOLDER_ID`.\n  To use a different folder for looking up the source image or saving the target image to\n  check options 'source_image_folder_id' and 'target_image_folder_id'.\n\n<!-- End of code generated from the comments of the CloudConfig struct in builder/yandex/common_config.go; -->\n\n\n<!-- Code generated from the comments of the ExchangeConfig struct in post-processor/yandex-export/config.go; DO NOT EDIT MANUALLY -->\n\n- `service_account_id` (string) - Service Account ID with proper permission to modify an instance, create and attach disk and\n  make upload to specific Yandex Object Storage paths.\n\n<!-- End of code generated from the comments of the ExchangeConfig struct in post-processor/yandex-export/config.go; -->\n\n\n### Optional:\n\n#### Access\n\n<!-- Code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; DO NOT EDIT MANUALLY -->\n\n- `endpoint` (string) - Non standard API endpoint. Default is `api.cloud.yandex.net:443`.\n\n- `service_account_key_file` (string) - Contains either a path to or the contents of the Service Account file in JSON format.\n  This can also be specified using environment variable `YC_SERVICE_ACCOUNT_KEY_FILE`.\n  You can read how to create service account key file [here](https://cloud.yandex.com/docs/iam/operations/iam-token/create-for-sa#keys-create).\n\n- `max_retries` (int) - The maximum number of times an API request is being executed.\n\n<!-- End of code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; -->\n\n\n#### Export\n\n<!-- Code generated from the comments of the Config struct in post-processor/yandex-export/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `source_image_folder_id` (string) - The ID of the folder containing the source image. Default `standard-images`.\n\n- `source_image_family` (string) - The source image family to start export process. Default `ubuntu-1604-lts`.\n  Image must contains utils or supported package manager: `apt` or `yum` -\n  requires `root` or `sudo` without password.\n  Utils: `qemu-img`, `aws`. The `qemu-img` utility requires `root` user or\n  `sudo` access without password.\n\n- `source_image_id` (string) - The source image ID to use to create the new image from. Just one of a source_image_id or\n  source_image_family must be specified.\n\n- `source_disk_extra_size` (int) - The extra size of the source disk in GB. This defaults to `0GB`.\n  Requires `losetup` utility on the instance.\n  > **Careful!** Increases payment cost.\n  > See [perfomance](https://cloud.yandex.com/docs/compute/concepts/disk#performance).\n\n- `storage_endpoint` (string) - StorageEndpoint custom Yandex Object Storage endpoint to upload image, Default `storage.yandexcloud.net`.\n\n- `storage_endpoint_autoresolve` (bool) - StorageEndpointAutoresolve auto resolve storage endpoint via YC Public API ListEndpoints call. Option has\n  precedence over 'storage_endpoint' option.\n\n- `storage_region` (string) - StorageRegion custom Yandex Object region. Default `ru-central1`\n\n<!-- End of code generated from the comments of the Config struct in post-processor/yandex-export/post-processor.go; -->\n\n\n#### Common\n\n<!-- Code generated from the comments of the CommonConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `serial_log_file` (string) - File path to save serial port output of the launched instance.\n\n- `state_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for instance state changes.\n  Defaults to `5m`.\n\n<!-- End of code generated from the comments of the CommonConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Instance\n\n<!-- Code generated from the comments of the InstanceConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `instance_cores` (int) - The number of cores available to the instance.\n\n- `instance_core_fraction` (int) - The vCPU performance level (core fraction) of the instance\n\n- `instance_gpus` (int) - The number of GPU available to the instance.\n\n- `instance_mem_gb` (int) - The amount of memory available to the instance, specified in gigabytes.\n\n- `instance_name` (string) - The name assigned to the instance.\n\n- `platform_id` (string) - Identifier of the hardware platform configuration for the instance. This defaults to `standard-v2`.\n\n- `labels` (map[string]string) - Key/value pair labels to apply to the launched instance.\n\n- `metadata` (map[string]string) - Metadata applied to the launched instance.\n\n- `metadata_from_file` (map[string]string) - Metadata applied to the launched instance.\n  The values in this map are the paths to the content files for the corresponding metadata keys.\n\n- `preemptible` (bool) - Launch a preemptible instance. This defaults to `false`.\n\n<!-- End of code generated from the comments of the InstanceConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Disk\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_name` (string) - The name of the disk, if unset the instance name\n  will be used.\n\n- `disk_size_gb` (int) - The size of the disk in GB. This defaults to 10/100GB.\n\n- `disk_type` (string) - Specify disk type for the launched instance. Defaults to `network-ssd`.\n\n- `disk_labels` (map[string]string) - Key/value pair labels to apply to the disk.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Network\n\n<!-- Code generated from the comments of the NetworkConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `subnet_id` (string) - The Yandex VPC subnet id to use for\n  the launched instance. Note, the zone of the subnet must match the\n  zone in which the VM is launched.\n\n- `zone` (string) - The name of the zone to launch the instance.  This defaults to `ru-central1-a`.\n\n- `security_group_ids` ([]string) - Security group ids for network interface of the instance.\n\n- `use_ipv4_nat` (bool) - If set to true, then launched instance will have external internet\n  access.\n\n- `use_ipv6` (bool) - Set to true to enable IPv6 for the instance being\n  created. This defaults to `false`, or not enabled.\n  \n  -> **Note**: Usage of IPv6 will be available in the future.\n\n- `use_internal_ip` (bool) - If true, use the instance's internal IP address\n  instead of its external IP during building.\n\n<!-- End of code generated from the comments of the NetworkConfig struct in builder/yandex/common_config.go; -->\n\n\n## Basic Example\n\nThe following example builds a Compute image in the folder with id `b1g8jvfcgmitdrslcn86`, with an\nService Account whose keyfile is `account.json`. After the image build, a temporary VM\nwill be created to export the image as a qcow2 file to\n`s3://packer-export/my-exported-image.qcow2` and\n`s3://packer-export/image-number-two.qcow2`. `keep_input_artifact` is true, so the\nsource Compute image won't be deleted after the export.\n\nIn order for this example to work, the service account associated with builder\nmust have write access to both `s3://packer-export/my-exported-image.qcow2` and\n`s3://packer-export/image-number-two.qcow2` and get permission to modify temporary instance\n(create new disk, attach to instance, etc).\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"yandex\",\n      \"folder_id\": \"b1g8jvfcgmitdrslcn86\",\n      \"subnet_id\": \"e9bp6l8sa4q39yourxzq\",\n      \"zone\": \"ru-central1-a\",\n\n      \"source_image_family\": \"ubuntu-1604-lts\",\n      \"ssh_username\": \"ubuntu\",\n      \"use_ipv4_nat\": true\n    }\n  ],\n  \"post-processors\": [\n    {\n      \"type\": \"yandex-export\",\n      \"folder_id\": \"b1g8jvfcgmitdrslcn86\",\n      \"subnet_id\": \"e9bp6l8sa4q39yourxzq\",\n\n      \"service_account_id\": \"ajeu0363240rrnn7xgen\",\n\n      \"paths\": [\n        \"s3://packer-export-bucket/my-exported-image.qcow2\",\n        \"s3://packer-export-bucket/template-supported-get-{{build `ImageID` }}-right-here.qcow2\"\n      ],\n      \"keep_input_artifact\": true\n    }\n  ]\n}\n```\n","created_at":"2023-11-28T17:39:18.302Z","updated_at":"2023-11-28T17:39:18.302Z","name":"Yandex Export","slug":"yandex-export","component":{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.157Z","updated_at":"2023-07-26T17:26:54.831Z"},"variable_groups":[]},{"id":"68f64bdc-b7f3-4df0-aeb6-ea8dd0b30e14","integration_release_id":"aed314b7-6811-40fd-baf6-20fc9f5e6b00","component_id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","readme":"Type: `yandex-import`\nArtifact BuilderId: `packer.post-processor.yandex-import`\n\nThe Yandex.Cloud Compute Image Import post-processor create new Compute Image\nfrom a qcow2 file. As Compute service support image creation from Storage service object\njust before request to create its upload file into Storage service.\n\nAssigned Service Account must have write permissions to the Yandex Object Storage.\nA new temporary static access keys from assigned Service Account used to upload\nfile.\n\n## Configuration\n\n### Required:\n\n#### Access\n\n<!-- Code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; DO NOT EDIT MANUALLY -->\n\n- `token` (string) - [OAuth token](https://cloud.yandex.com/docs/iam/concepts/authorization/oauth-token)\n  or [IAM token](https://cloud.yandex.com/docs/iam/concepts/authorization/iam-token)\n  to use to authenticate to Yandex.Cloud. Alternatively you may set\n  value by environment variable `YC_TOKEN`.\n\n<!-- End of code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; -->\n\n\n#### Common\n\n<!-- Code generated from the comments of the CloudConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `folder_id` (string) - The folder ID that will be used to launch instances and store images.\n  Alternatively you may set value by environment variable `YC_FOLDER_ID`.\n  To use a different folder for looking up the source image or saving the target image to\n  check options 'source_image_folder_id' and 'target_image_folder_id'.\n\n<!-- End of code generated from the comments of the CloudConfig struct in builder/yandex/common_config.go; -->\n\n\n<!-- Code generated from the comments of the ExchangeConfig struct in post-processor/yandex-export/config.go; DO NOT EDIT MANUALLY -->\n\n- `service_account_id` (string) - Service Account ID with proper permission to modify an instance, create and attach disk and\n  make upload to specific Yandex Object Storage paths.\n\n<!-- End of code generated from the comments of the ExchangeConfig struct in post-processor/yandex-export/config.go; -->\n\n\n### Optional:\n\n#### Access\n\n<!-- Code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; DO NOT EDIT MANUALLY -->\n\n- `endpoint` (string) - Non standard API endpoint. Default is `api.cloud.yandex.net:443`.\n\n- `service_account_key_file` (string) - Contains either a path to or the contents of the Service Account file in JSON format.\n  This can also be specified using environment variable `YC_SERVICE_ACCOUNT_KEY_FILE`.\n  You can read how to create service account key file [here](https://cloud.yandex.com/docs/iam/operations/iam-token/create-for-sa#keys-create).\n\n- `max_retries` (int) - The maximum number of times an API request is being executed.\n\n<!-- End of code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; -->\n\n\n#### Import\n\n<!-- Code generated from the comments of the Config struct in post-processor/yandex-import/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `bucket` (string) - The name of the bucket where the qcow2 file will be uploaded to for import.\n  This bucket must exist when the post-processor is run.\n  \n  If import occurred after Yandex-Export post-processor, artifact already\n  in storage service and first paths (URL) is used to, so no need to set this param.\n\n- `object_name` (string) - The name of the object key in `bucket` where the qcow2 file will be copied to import.\n  This is a [template engine](/packer/docs/templates/legacy_json_templates/engine).\n  Therefore, you may use user variables and template functions in this field.\n\n- `skip_clean` (bool) - Whether skip removing the qcow2 file uploaded to Storage\n  after the import process has completed. Possible values are: `true` to\n  leave it in the bucket, `false` to remove it. Default is `false`.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/yandex-import/post-processor.go; -->\n\n\n#### Image\n\n<!-- Code generated from the comments of the ImageConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `image_name` (string) - The name of the resulting image, which contains 1-63 characters and only\n  supports lowercase English characters, numbers and hyphen. Defaults to\n  `packer-{{timestamp}}`.\n\n- `image_description` (string) - The description of the image.\n\n- `image_family` (string) - The family name of the image.\n\n- `image_labels` (map[string]string) - Key/value pair labels to apply to the image.\n\n- `image_min_disk_size_gb` (int) - Minimum size of the disk that will be created from built image, specified in gigabytes.\n  Should be more or equal to `disk_size_gb`.\n\n- `image_product_ids` ([]string) - License IDs that indicate which licenses are attached to resulting image.\n\n- `image_pooled` (bool) - When true, an image pool will be created for fast creation disks from the image.\n\n- `skip_create_image` (bool) - Skip creating the image. Useful for setting to `true` during a build test stage. Defaults to `false`.\n\n<!-- End of code generated from the comments of the ImageConfig struct in builder/yandex/common_config.go; -->\n\n\n## Basic Example\n\nTBD\n\n```json\n{\n  \"variables\": {\n    \"token\": \"{{env `YC_TOKEN`}}\"\n  },\n  \"sensitive-variables\": [\"token\"],\n  \"builders\": [\n    {\n      \"type\": \"file\",\n      \"source\": \"xenial-server-cloudimg-amd64-disk1.img\",\n      \"target\": \"test_artifact.qcow2\"\n    }\n  ],\n  \"post-processors\": [\n    {\n      \"type\": \"yandex-import\",\n      \"token\": \"{{user `token`}}\",\n      \"folder_id\": \"b1g8jvfcgmitdrslcn86\",\n      \"service_account_id\": \"ajeui8kdvg8qs44fbrbr\",\n\n      \"bucket\": \"bucket1\",\n\n      \"image_name\": \"my-first-imported-image-{{isotime \\\"02-Jan-06-03-04-05\\\" | lower }}\",\n\n      \"keep_input_artifact\": false\n    }\n  ]\n}\n```\n","created_at":"2023-11-28T17:39:18.377Z","updated_at":"2023-11-28T17:39:18.377Z","name":"Yandex Import","slug":"yandex-import","component":{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.157Z","updated_at":"2023-07-26T17:26:54.831Z"},"variable_groups":[]}]},"component":{"id":"f62db198-1121-433c-ac64-f23fe5020a3b","integration_release_id":"aed314b7-6811-40fd-baf6-20fc9f5e6b00","component_id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","readme":"Type: `yandex-export`\nArtifact BuilderId: `packer.post-processor.yandex-export`\n\nThe Yandex.Cloud Compute Image Exporter post-processor exports the resultant image\nfrom a yandex build as a qcow2 file to Yandex Object Storage.\n\nThe exporter uses the same Yandex.Cloud folder and\nauthentication credentials as the yandex build that produced the image.\nA temporary VM is started in the folder using these credentials. The VM\nmounts the built image as a secondary disk, then dumps the image in qcow2 format.\nThe VM then uploads the file to the provided Yandex Object Storage `paths` using the same\ncredentials.\n\nAs such, assigned Service Account must have write permissions to the Yandex Object Storage\n`paths`. A new temporary static access keys from assigned Service Account used to upload\nimage.\n\nAlso, you should configure [ssh communicator](/packer/docs/communicators/ssh). Default `ssh_username` to `ubuntu`.\n\n## Configuration\n\n### Required:\n\n#### Access\n\n<!-- Code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; DO NOT EDIT MANUALLY -->\n\n- `token` (string) - [OAuth token](https://cloud.yandex.com/docs/iam/concepts/authorization/oauth-token)\n  or [IAM token](https://cloud.yandex.com/docs/iam/concepts/authorization/iam-token)\n  to use to authenticate to Yandex.Cloud. Alternatively you may set\n  value by environment variable `YC_TOKEN`.\n\n<!-- End of code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; -->\n\n\n#### Export\n\n<!-- Code generated from the comments of the Config struct in post-processor/yandex-export/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `paths` ([]string) - List of paths to Yandex Object Storage where exported image will be uploaded.\n  Please be aware that use of space char inside path not supported.\n  Also this param support [build](/packer/docs/templates/legacy_json_templates/engine) template function.\n  Check available template data for [Yandex](/packer/integrations/hashicorp/yandex#build-template-data) builder.\n  Paths to Yandex Object Storage where exported image will be uploaded.\n\n<!-- End of code generated from the comments of the Config struct in post-processor/yandex-export/post-processor.go; -->\n\n\n#### Common\n\n<!-- Code generated from the comments of the CloudConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `folder_id` (string) - The folder ID that will be used to launch instances and store images.\n  Alternatively you may set value by environment variable `YC_FOLDER_ID`.\n  To use a different folder for looking up the source image or saving the target image to\n  check options 'source_image_folder_id' and 'target_image_folder_id'.\n\n<!-- End of code generated from the comments of the CloudConfig struct in builder/yandex/common_config.go; -->\n\n\n<!-- Code generated from the comments of the ExchangeConfig struct in post-processor/yandex-export/config.go; DO NOT EDIT MANUALLY -->\n\n- `service_account_id` (string) - Service Account ID with proper permission to modify an instance, create and attach disk and\n  make upload to specific Yandex Object Storage paths.\n\n<!-- End of code generated from the comments of the ExchangeConfig struct in post-processor/yandex-export/config.go; -->\n\n\n### Optional:\n\n#### Access\n\n<!-- Code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; DO NOT EDIT MANUALLY -->\n\n- `endpoint` (string) - Non standard API endpoint. Default is `api.cloud.yandex.net:443`.\n\n- `service_account_key_file` (string) - Contains either a path to or the contents of the Service Account file in JSON format.\n  This can also be specified using environment variable `YC_SERVICE_ACCOUNT_KEY_FILE`.\n  You can read how to create service account key file [here](https://cloud.yandex.com/docs/iam/operations/iam-token/create-for-sa#keys-create).\n\n- `max_retries` (int) - The maximum number of times an API request is being executed.\n\n<!-- End of code generated from the comments of the AccessConfig struct in builder/yandex/access_config.go; -->\n\n\n#### Export\n\n<!-- Code generated from the comments of the Config struct in post-processor/yandex-export/post-processor.go; DO NOT EDIT MANUALLY -->\n\n- `source_image_folder_id` (string) - The ID of the folder containing the source image. Default `standard-images`.\n\n- `source_image_family` (string) - The source image family to start export process. Default `ubuntu-1604-lts`.\n  Image must contains utils or supported package manager: `apt` or `yum` -\n  requires `root` or `sudo` without password.\n  Utils: `qemu-img`, `aws`. The `qemu-img` utility requires `root` user or\n  `sudo` access without password.\n\n- `source_image_id` (string) - The source image ID to use to create the new image from. Just one of a source_image_id or\n  source_image_family must be specified.\n\n- `source_disk_extra_size` (int) - The extra size of the source disk in GB. This defaults to `0GB`.\n  Requires `losetup` utility on the instance.\n  > **Careful!** Increases payment cost.\n  > See [perfomance](https://cloud.yandex.com/docs/compute/concepts/disk#performance).\n\n- `storage_endpoint` (string) - StorageEndpoint custom Yandex Object Storage endpoint to upload image, Default `storage.yandexcloud.net`.\n\n- `storage_endpoint_autoresolve` (bool) - StorageEndpointAutoresolve auto resolve storage endpoint via YC Public API ListEndpoints call. Option has\n  precedence over 'storage_endpoint' option.\n\n- `storage_region` (string) - StorageRegion custom Yandex Object region. Default `ru-central1`\n\n<!-- End of code generated from the comments of the Config struct in post-processor/yandex-export/post-processor.go; -->\n\n\n#### Common\n\n<!-- Code generated from the comments of the CommonConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `serial_log_file` (string) - File path to save serial port output of the launched instance.\n\n- `state_timeout` (duration string | ex: \"1h5m2s\") - The time to wait for instance state changes.\n  Defaults to `5m`.\n\n<!-- End of code generated from the comments of the CommonConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Instance\n\n<!-- Code generated from the comments of the InstanceConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `instance_cores` (int) - The number of cores available to the instance.\n\n- `instance_core_fraction` (int) - The vCPU performance level (core fraction) of the instance\n\n- `instance_gpus` (int) - The number of GPU available to the instance.\n\n- `instance_mem_gb` (int) - The amount of memory available to the instance, specified in gigabytes.\n\n- `instance_name` (string) - The name assigned to the instance.\n\n- `platform_id` (string) - Identifier of the hardware platform configuration for the instance. This defaults to `standard-v2`.\n\n- `labels` (map[string]string) - Key/value pair labels to apply to the launched instance.\n\n- `metadata` (map[string]string) - Metadata applied to the launched instance.\n\n- `metadata_from_file` (map[string]string) - Metadata applied to the launched instance.\n  The values in this map are the paths to the content files for the corresponding metadata keys.\n\n- `preemptible` (bool) - Launch a preemptible instance. This defaults to `false`.\n\n<!-- End of code generated from the comments of the InstanceConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Disk\n\n<!-- Code generated from the comments of the DiskConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `disk_name` (string) - The name of the disk, if unset the instance name\n  will be used.\n\n- `disk_size_gb` (int) - The size of the disk in GB. This defaults to 10/100GB.\n\n- `disk_type` (string) - Specify disk type for the launched instance. Defaults to `network-ssd`.\n\n- `disk_labels` (map[string]string) - Key/value pair labels to apply to the disk.\n\n<!-- End of code generated from the comments of the DiskConfig struct in builder/yandex/common_config.go; -->\n\n\n#### Network\n\n<!-- Code generated from the comments of the NetworkConfig struct in builder/yandex/common_config.go; DO NOT EDIT MANUALLY -->\n\n- `subnet_id` (string) - The Yandex VPC subnet id to use for\n  the launched instance. Note, the zone of the subnet must match the\n  zone in which the VM is launched.\n\n- `zone` (string) - The name of the zone to launch the instance.  This defaults to `ru-central1-a`.\n\n- `security_group_ids` ([]string) - Security group ids for network interface of the instance.\n\n- `use_ipv4_nat` (bool) - If set to true, then launched instance will have external internet\n  access.\n\n- `use_ipv6` (bool) - Set to true to enable IPv6 for the instance being\n  created. This defaults to `false`, or not enabled.\n  \n  -> **Note**: Usage of IPv6 will be available in the future.\n\n- `use_internal_ip` (bool) - If true, use the instance's internal IP address\n  instead of its external IP during building.\n\n<!-- End of code generated from the comments of the NetworkConfig struct in builder/yandex/common_config.go; -->\n\n\n## Basic Example\n\nThe following example builds a Compute image in the folder with id `b1g8jvfcgmitdrslcn86`, with an\nService Account whose keyfile is `account.json`. After the image build, a temporary VM\nwill be created to export the image as a qcow2 file to\n`s3://packer-export/my-exported-image.qcow2` and\n`s3://packer-export/image-number-two.qcow2`. `keep_input_artifact` is true, so the\nsource Compute image won't be deleted after the export.\n\nIn order for this example to work, the service account associated with builder\nmust have write access to both `s3://packer-export/my-exported-image.qcow2` and\n`s3://packer-export/image-number-two.qcow2` and get permission to modify temporary instance\n(create new disk, attach to instance, etc).\n\n```json\n{\n  \"builders\": [\n    {\n      \"type\": \"yandex\",\n      \"folder_id\": \"b1g8jvfcgmitdrslcn86\",\n      \"subnet_id\": \"e9bp6l8sa4q39yourxzq\",\n      \"zone\": \"ru-central1-a\",\n\n      \"source_image_family\": \"ubuntu-1604-lts\",\n      \"ssh_username\": \"ubuntu\",\n      \"use_ipv4_nat\": true\n    }\n  ],\n  \"post-processors\": [\n    {\n      \"type\": \"yandex-export\",\n      \"folder_id\": \"b1g8jvfcgmitdrslcn86\",\n      \"subnet_id\": \"e9bp6l8sa4q39yourxzq\",\n\n      \"service_account_id\": \"ajeu0363240rrnn7xgen\",\n\n      \"paths\": [\n        \"s3://packer-export-bucket/my-exported-image.qcow2\",\n        \"s3://packer-export-bucket/template-supported-get-{{build `ImageID` }}-right-here.qcow2\"\n      ],\n      \"keep_input_artifact\": true\n    }\n  ]\n}\n```\n","created_at":"2023-11-28T17:39:18.302Z","updated_at":"2023-11-28T17:39:18.302Z","name":"Yandex Export","slug":"yandex-export","component":{"id":"73965f1c-ad56-4f38-a31b-dc17d08c0ba6","slug":"post-processor","name":"Post-Processor","plural_name":"Post-Processors","product_id":"4c2b00c6-7cc1-4e4c-b596-4ab57e319f21","created_at":"2022-11-09T22:56:31.157Z","updated_at":"2023-07-26T17:26:54.831Z"},"variable_groups":[]},"processedVariablesMarkdown":{},"anchorLinks":[{"id":"configuration","level":2,"title":"Configuration"},{"id":"required:","level":3,"title":"Required:"},{"id":"access","level":4,"title":"Access"},{"id":"export","level":4,"title":"Export"},{"id":"common","level":4,"title":"Common"},{"id":"optional:","level":3,"title":"Optional:"},{"id":"access","level":4,"title":"Access"},{"id":"export","level":4,"title":"Export"},{"id":"common","level":4,"title":"Common"},{"id":"instance","level":4,"title":"Instance"},{"id":"disk","level":4,"title":"Disk"},{"id":"network","level":4,"title":"Network"},{"id":"basic-example","level":2,"title":"Basic Example"}],"serializedREADME":{"compiledSource":"var d=Object.defineProperty,c=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var i=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;var l=(a,n,t)=>n in a?d(a,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[n]=t,e=(a,n)=>{for(var t in n||(n={}))p.call(n,t)&&l(a,t,n[t]);if(i)for(var t of i(n))s.call(n,t)&&l(a,t,n[t]);return a},r=(a,n)=>c(a,N(n));var m=(a,n)=>{var t={};for(var o in a)p.call(a,o)&&n.indexOf(o)<0&&(t[o]=a[o]);if(a!=null&&i)for(var o of i(a))n.indexOf(o)<0&&s.call(a,o)&&(t[o]=a[o]);return t};const layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var o=t,{components:a}=o,n=m(o,[\"components\"]);return mdx(MDXLayout,r(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Type: \",mdx(\"inlineCode\",{parentName:\"p\"},\"yandex-export\"),`\nArtifact BuilderId: `,mdx(\"inlineCode\",{parentName:\"p\"},\"packer.post-processor.yandex-export\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The Yandex.Cloud Compute Image Exporter post-processor exports the resultant image\nfrom a yandex build as a qcow2 file to Yandex Object Storage.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The exporter uses the same Yandex.Cloud folder and\nauthentication credentials as the yandex build that produced the image.\nA temporary VM is started in the folder using these credentials. The VM\nmounts the built image as a secondary disk, then dumps the image in qcow2 format.\nThe VM then uploads the file to the provided Yandex Object Storage `,mdx(\"inlineCode\",{parentName:\"p\"},\"paths\"),` using the same\ncredentials.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`As such, assigned Service Account must have write permissions to the Yandex Object Storage\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"paths\"),`. A new temporary static access keys from assigned Service Account used to upload\nimage.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Also, you should configure \",mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/communicators/ssh\"}),\"ssh communicator\"),\". Default \",mdx(\"inlineCode\",{parentName:\"p\"},\"ssh_username\"),\" to \",mdx(\"inlineCode\",{parentName:\"p\"},\"ubuntu\"),\".\"),mdx(\"h2\",e({},{id:\"user-content-configuration\",\"data-text-content\":\"Configuration\",className:\"g-type-display-3\"}),\"Configuration\"),mdx(\"h3\",e({},{id:\"user-content-required:\",\"data-text-content\":\"Required\",className:\"g-type-display-4\"}),\"Required:\"),mdx(\"h4\",e({},{id:\"user-content-access\",\"data-text-content\":\"Access\",className:\"g-type-display-5\"}),\"Access\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"token\"),\" (string) - \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://cloud.yandex.com/docs/iam/concepts/authorization/oauth-token\"}),\"OAuth token\"),`\nor `,mdx(\"a\",e({parentName:\"li\"},{href:\"https://cloud.yandex.com/docs/iam/concepts/authorization/iam-token\"}),\"IAM token\"),`\nto use to authenticate to Yandex.Cloud. Alternatively you may set\nvalue by environment variable `,mdx(\"inlineCode\",{parentName:\"li\"},\"YC_TOKEN\"),\".\")),mdx(\"h4\",e({},{id:\"user-content-export\",\"data-text-content\":\"Export\",className:\"g-type-display-5\"}),\"Export\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"paths\"),` ([]string) - List of paths to Yandex Object Storage where exported image will be uploaded.\nPlease be aware that use of space char inside path not supported.\nAlso this param support `,mdx(\"a\",e({parentName:\"li\"},{href:\"/packer/docs/templates/legacy_json_templates/engine\"}),\"build\"),` template function.\nCheck available template data for `,mdx(\"a\",e({parentName:\"li\"},{href:\"/packer/integrations/hashicorp/yandex#build-template-data\"}),\"Yandex\"),` builder.\nPaths to Yandex Object Storage where exported image will be uploaded.`)),mdx(\"h4\",e({},{id:\"user-content-common\",\"data-text-content\":\"Common\",className:\"g-type-display-5\"}),\"Common\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"folder_id\"),` (string) - The folder ID that will be used to launch instances and store images.\nAlternatively you may set value by environment variable `,mdx(\"inlineCode\",{parentName:\"li\"},\"YC_FOLDER_ID\"),`.\nTo use a different folder for looking up the source image or saving the target image to\ncheck options 'source_image_folder_id' and 'target_image_folder_id'.`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"inlineCode\",{parentName:\"li\"},\"service_account_id\"),` (string) - Service Account ID with proper permission to modify an instance, create and attach disk and\nmake upload to specific Yandex Object Storage paths.`)),mdx(\"h3\",e({},{id:\"user-content-optional:\",\"data-text-content\":\"Optional\",className:\"g-type-display-4\"}),\"Optional:\"),mdx(\"h4\",e({},{id:\"user-content-access\",\"data-text-content\":\"Access\",className:\"g-type-display-5\"}),\"Access\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"endpoint\"),\" (string) - Non standard API endpoint. Default is \",mdx(\"inlineCode\",{parentName:\"p\"},\"api.cloud.yandex.net:443\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"service_account_key_file\"),` (string) - Contains either a path to or the contents of the Service Account file in JSON format.\nThis can also be specified using environment variable `,mdx(\"inlineCode\",{parentName:\"p\"},\"YC_SERVICE_ACCOUNT_KEY_FILE\"),`.\nYou can read how to create service account key file `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.yandex.com/docs/iam/operations/iam-token/create-for-sa#keys-create\"}),\"here\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"max_retries\"),\" (int) - The maximum number of times an API request is being executed.\"))),mdx(\"h4\",e({},{id:\"user-content-export\",\"data-text-content\":\"Export\",className:\"g-type-display-5\"}),\"Export\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"source_image_folder_id\"),\" (string) - The ID of the folder containing the source image. Default \",mdx(\"inlineCode\",{parentName:\"p\"},\"standard-images\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"source_image_family\"),\" (string) - The source image family to start export process. Default \",mdx(\"inlineCode\",{parentName:\"p\"},\"ubuntu-1604-lts\"),`.\nImage must contains utils or supported package manager: `,mdx(\"inlineCode\",{parentName:\"p\"},\"apt\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"yum\"),` -\nrequires `,mdx(\"inlineCode\",{parentName:\"p\"},\"root\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"sudo\"),` without password.\nUtils: `,mdx(\"inlineCode\",{parentName:\"p\"},\"qemu-img\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"aws\"),\". The \",mdx(\"inlineCode\",{parentName:\"p\"},\"qemu-img\"),\" utility requires \",mdx(\"inlineCode\",{parentName:\"p\"},\"root\"),` user or\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"sudo\"),\" access without password.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"source_image_id\"),` (string) - The source image ID to use to create the new image from. Just one of a source_image_id or\nsource_image_family must be specified.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"source_disk_extra_size\"),\" (int) - The extra size of the source disk in GB. This defaults to \",mdx(\"inlineCode\",{parentName:\"p\"},\"0GB\"),`.\nRequires `,mdx(\"inlineCode\",{parentName:\"p\"},\"losetup\"),\" utility on the instance.\"),mdx(\"blockquote\",{parentName:\"li\"},mdx(\"p\",e({parentName:\"blockquote\"},{className:\"g-type-long-body\"}),mdx(\"strong\",{parentName:\"p\"},\"Careful!\"),` Increases payment cost.\nSee `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloud.yandex.com/docs/compute/concepts/disk#performance\"}),\"perfomance\"),\".\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"storage_endpoint\"),\" (string) - StorageEndpoint custom Yandex Object Storage endpoint to upload image, Default \",mdx(\"inlineCode\",{parentName:\"p\"},\"storage.yandexcloud.net\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"storage_endpoint_autoresolve\"),` (bool) - StorageEndpointAutoresolve auto resolve storage endpoint via YC Public API ListEndpoints call. Option has\nprecedence over 'storage_endpoint' option.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"storage_region\"),\" (string) - StorageRegion custom Yandex Object region. Default \",mdx(\"inlineCode\",{parentName:\"p\"},\"ru-central1\")))),mdx(\"h4\",e({},{id:\"user-content-common\",\"data-text-content\":\"Common\",className:\"g-type-display-5\"}),\"Common\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"serial_log_file\"),\" (string) - File path to save serial port output of the launched instance.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"state_timeout\"),` (duration string | ex: \"1h5m2s\") - The time to wait for instance state changes.\nDefaults to `,mdx(\"inlineCode\",{parentName:\"p\"},\"5m\"),\".\"))),mdx(\"h4\",e({},{id:\"user-content-instance\",\"data-text-content\":\"Instance\",className:\"g-type-display-5\"}),\"Instance\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"instance_cores\"),\" (int) - The number of cores available to the instance.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"instance_core_fraction\"),\" (int) - The vCPU performance level (core fraction) of the instance\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"instance_gpus\"),\" (int) - The number of GPU available to the instance.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"instance_mem_gb\"),\" (int) - The amount of memory available to the instance, specified in gigabytes.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"instance_name\"),\" (string) - The name assigned to the instance.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"platform_id\"),\" (string) - Identifier of the hardware platform configuration for the instance. This defaults to \",mdx(\"inlineCode\",{parentName:\"p\"},\"standard-v2\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"labels\"),\" (map\",\"[string]\",\"string) - Key/value pair labels to apply to the launched instance.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"metadata\"),\" (map\",\"[string]\",\"string) - Metadata applied to the launched instance.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"metadata_from_file\"),\" (map\",\"[string]\",`string) - Metadata applied to the launched instance.\nThe values in this map are the paths to the content files for the corresponding metadata keys.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"preemptible\"),\" (bool) - Launch a preemptible instance. This defaults to \",mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\"))),mdx(\"h4\",e({},{id:\"user-content-disk\",\"data-text-content\":\"Disk\",className:\"g-type-display-5\"}),\"Disk\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"disk_name\"),` (string) - The name of the disk, if unset the instance name\nwill be used.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"disk_size_gb\"),\" (int) - The size of the disk in GB. This defaults to 10/100GB.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"disk_type\"),\" (string) - Specify disk type for the launched instance. Defaults to \",mdx(\"inlineCode\",{parentName:\"p\"},\"network-ssd\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"disk_labels\"),\" (map\",\"[string]\",\"string) - Key/value pair labels to apply to the disk.\"))),mdx(\"h4\",e({},{id:\"user-content-network\",\"data-text-content\":\"Network\",className:\"g-type-display-5\"}),\"Network\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"subnet_id\"),` (string) - The Yandex VPC subnet id to use for\nthe launched instance. Note, the zone of the subnet must match the\nzone in which the VM is launched.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"zone\"),\" (string) - The name of the zone to launch the instance.  This defaults to \",mdx(\"inlineCode\",{parentName:\"p\"},\"ru-central1-a\"),\".\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"security_group_ids\"),\" ([]string) - Security group ids for network interface of the instance.\")),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"use_ipv4_nat\"),` (bool) - If set to true, then launched instance will have external internet\naccess.`)),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"use_ipv6\"),` (bool) - Set to true to enable IPv6 for the instance being\ncreated. This defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\", or not enabled.\"),mdx(\"div\",e({parentName:\"li\"},{className:\"alert alert-info g-type-body\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),\"\",mdx(\"strong\",{parentName:\"p\"},\"Note\"),\": Usage of IPv6 will be available in the future.\"))),mdx(\"li\",{parentName:\"ul\"},mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"use_internal_ip\"),` (bool) - If true, use the instance's internal IP address\ninstead of its external IP during building.`))),mdx(\"h2\",e({},{id:\"user-content-basic-example\",\"data-text-content\":\"Basic Example\",className:\"g-type-display-3\"}),\"Basic Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The following example builds a Compute image in the folder with id \",mdx(\"inlineCode\",{parentName:\"p\"},\"b1g8jvfcgmitdrslcn86\"),`, with an\nService Account whose keyfile is `,mdx(\"inlineCode\",{parentName:\"p\"},\"account.json\"),`. After the image build, a temporary VM\nwill be created to export the image as a qcow2 file to\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"s3://packer-export/my-exported-image.qcow2\"),` and\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"s3://packer-export/image-number-two.qcow2\"),\". \",mdx(\"inlineCode\",{parentName:\"p\"},\"keep_input_artifact\"),` is true, so the\nsource Compute image won't be deleted after the export.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`In order for this example to work, the service account associated with builder\nmust have write access to both `,mdx(\"inlineCode\",{parentName:\"p\"},\"s3://packer-export/my-exported-image.qcow2\"),` and\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"s3://packer-export/image-number-two.qcow2\"),` and get permission to modify temporary instance\n(create new disk, attach to instance, etc).`),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"builders\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"yandex\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"folder_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"b1g8jvfcgmitdrslcn86\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"subnet_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"e9bp6l8sa4q39yourxzq\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"zone\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ru-central1-a\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"source_image_family\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ubuntu-1604-lts\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"ssh_username\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ubuntu\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"use_ipv4_nat\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"post-processors\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"yandex-export\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"folder_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"b1g8jvfcgmitdrslcn86\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"subnet_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"e9bp6l8sa4q39yourxzq\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"service_account_id\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ajeu0363240rrnn7xgen\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"paths\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"s3://packer-export-bucket/my-exported-image.qcow2\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"s3://packer-export-bucket/template-supported-get-{{build `ImageID` }}-right-here.qcow2\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"keep_input_artifact\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}},"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Integrations","url":"/packer/integrations"},{"title":"Yandex","url":"/packer/integrations/hashicorp/yandex","isCurrentPage":false},{"title":"v1.1.3","url":"/packer/integrations/hashicorp/yandex/v1.1.3","isCurrentPage":false},{"title":"Components"},{"title":"Post-Processor"},{"title":"Yandex Export","url":"/packer/integrations/hashicorp/yandex/latest/components/post-processor/yandex-export","isCurrentPage":true}]},"__N_SSG":true}